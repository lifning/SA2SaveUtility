using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading;
using System.Windows.Forms;
using System.Xml;
using System.Xml.Linq;
using System.Xml.XPath;

namespace SA2SaveUtility
{
    public partial class Main : Form
    {
        public static System.Timers.Timer rteTimer = new System.Timers.Timer();

        public static Thread rteThread;

        public static bool isRTE;
        public static bool isSA;
        public static bool isPC;
        public static bool isPS3;
        public static bool isGC;
        public static bool isMain;

        public static bool firstRTECheck;
        public static bool rteUpdates;
        public static int rteInterval;

        public string loadedFile { get; set; }
        public string currentDir = Directory.GetParent(Assembly.GetExecutingAssembly().Location).ToString();
        public string backupsDir = Directory.GetParent(Assembly.GetExecutingAssembly().Location).ToString() + @"/backups";
        public static string oldDir = Directory.GetParent(Assembly.GetExecutingAssembly().Location).ToString() + @"/old";
        string chaoDirectory = Directory.GetParent(Assembly.GetExecutingAssembly().Location) + @"/chao";
        public static string configFile = Directory.GetParent(Assembly.GetExecutingAssembly().Location) + @"/config.xml";

        public static Version currentVersion;

        public static byte[] loadedSave;
        public static byte[] gcBytes;
        public static byte[] gcFileBytes;


        static Offsets offsets = new Offsets();

        public Main()
        {
            InitializeComponent();

            firstRTECheck = true;

            tc_Main.Selected += new TabControlEventHandler(tc_Main_Selected);

            currentVersion = Version.Parse(ProductVersion);

            //Delete Old Files From Auto Update
            if (Directory.Exists(oldDir))
            {
                foreach (string file in Directory.GetFiles(oldDir))
                {
                    File.Delete(file);
                }
                Directory.Delete(oldDir);
            }
            //Create Directories
            if (!Directory.Exists(backupsDir)) { Directory.CreateDirectory(backupsDir); }
            if (!Directory.Exists(chaoDirectory)) { Directory.CreateDirectory(chaoDirectory); }
            //Create Default Config
            if (!File.Exists(configFile))
            {
                using (Stream stream = GetType().Assembly.GetManifestResourceStream("SA2SaveUtility.DefaultConfig.xml"))
                {
                    using (StreamReader streamReader = new StreamReader(stream))
                    {
                        XmlDocument defaultCFG = new XmlDocument();
                        defaultCFG.LoadXml(streamReader.ReadToEnd());
                        defaultCFG.Save(configFile);
                    }
                }
            }

            XDocument config = XDocument.Parse(File.ReadAllText(configFile));

            if (config.XPathSelectElement("Config/CheckForUpdates") == null || config.XPathSelectElement("Config/AutoUpdate") == null || config.XPathSelectElement("Config/RTEUpdates") == null || config.XPathSelectElement("Config/RTEUpdateInterval") == null)
            {
                using (Stream stream = GetType().Assembly.GetManifestResourceStream("SA2SaveUtility.DefaultConfig.xml"))
                {
                    using (StreamReader streamReader = new StreamReader(stream))
                    {
                        XmlDocument defaultCFG = new XmlDocument();
                        defaultCFG.LoadXml(streamReader.ReadToEnd());
                        defaultCFG.Save(configFile);
                    }
                }
                config = XDocument.Parse(File.ReadAllText(configFile));
                MessageBox.Show("Your config file has been reset.", "Config Reset!", MessageBoxButtons.OK, MessageBoxIcon.None);
            }

            Updater.checkForUpdates = Convert.ToBoolean(config.XPathSelectElement("Config/CheckForUpdates").Value);
            Updater.autoUpdate = Convert.ToBoolean(config.XPathSelectElement("Config/AutoUpdate").Value);
            rteUpdates = Convert.ToBoolean(config.XPathSelectElement("Config/RTEUpdates").Value);
            rteInterval = Convert.ToInt32(config.XPathSelectElement("Config/RTEUpdateInterval").Value);

            checkb_AutoUpdate.Checked = Updater.autoUpdate;
            checkb_CheckForUpdates.Checked = Updater.checkForUpdates;
            checkb_RTEUpdates.Checked = rteUpdates;

            if (Updater.checkForUpdates)
            {
                Thread updateCheckThread = new Thread(new ThreadStart(Updater.UpdateCheck));
                updateCheckThread.Start();
            }

            rteTimer.Elapsed += new System.Timers.ElapsedEventHandler(RTEUpdates);
            rteTimer.Interval = rteInterval;
            rteTimer.Start();
        }

        private void tc_Main_Selected(Object sender, TabControlEventArgs e)
        {
            if (tc_Main.TabCount != 0)
            {
                if (tc_Main.SelectedTab.Text == "Empty Slot" && !isMain) { ChaoSave.EmptyChaoSelected(e.TabPageIndex); }
            }
        }


        public static void RTEUpdates(object source, System.Timers.ElapsedEventArgs e)
        {
            if (rteUpdates && isRTE)
            {
                if (rteThread == null || !rteThread.IsAlive)
                {
                    if (isMain && MainSave.activeMain.Count != 0)
                    {
                        rteThread = new Thread(() => MainSave.UpdateSave(tc_Main, MainSave.activeMain.First(), Memory.ReadBytes(offsets.mainMemoryStart, 0x6000)));
                        rteThread.Start();
                    }

                    if (!isMain && ChaoSave.activeChao.Count != 0)
                    {
                        rteThread = new Thread(() => ChaoSave.UpdateChaoRTE(tc_Main, Memory.ReadBytes(offsets.chaoMemoryStart, 0xC000)));
                        rteThread.Start();
                    }
                }
            }
        }

        public static void WriteByte(int offset, int value, uint mainIndex)
        {
            if (isPC && !isRTE) { loadedSave[offset] = (byte)value; }
            if (isRTE) { Memory.WriteByteAtAddress(offsets.mainMemoryStart + offset, (byte)value); }
            if (isGC) { loadedSave[offset + 0x40] = (byte)value; }
            if (!isPC && !isGC)
            {
                if (!isPS3) { loadedSave[offset + 4 + (int)(0x6004 * mainIndex)] = (byte)value; }
                else { loadedSave[offset + 8 + (int)(0x6008 * mainIndex)] = (byte)value; }
            }
        }
        public static void WriteBytes(int offset, byte[] bytes, uint mainIndex, int length)
        {
            Array.Resize<byte>(ref bytes, length);
            if (!isPC) { Array.Reverse(bytes); }
            for (int i = 0; i < length; i++)
            {
                if (isPC && !isRTE) { loadedSave[offset + i] = bytes[i]; }
                if (isRTE) { Memory.WriteByteAtAddress(offsets.mainMemoryStart + offset + i, bytes[i]); }
                if (isGC) { loadedSave[offset + 0x40 + i] = bytes[i]; }
                if (!isPC && !isGC)
                {
                    if (!isPS3) { loadedSave[offset + i + (int)(0x6004 * mainIndex) + 4] = bytes[i]; }
                    else { loadedSave[offset + i + (int)(0x6008 * mainIndex) + 8] = bytes[i]; }
                }
            }
        }

        public static List<byte[]> SplitByteArray(byte[] bytes, int BlockLength)
        {
            List<byte[]> _byteArrayList = new List<byte[]>();

            byte[] buffer;

            for (int i = 0; i < bytes.Length; i += BlockLength)
            {
                if ((i + BlockLength) > bytes.Length)
                {
                    buffer = new byte[bytes.Length - i];
                    Buffer.BlockCopy(bytes, i, buffer, 0, bytes.Length - i);
                }
                else
                {
                    buffer = new byte[BlockLength];
                    Buffer.BlockCopy(bytes, i, buffer, 0, BlockLength);
                }

                _byteArrayList.Add(buffer);
            }

            return _byteArrayList;
        }

        private void Tsmi_RTE_SA2_Chao_Click(object sender, EventArgs e)
        {
            this.Text = "Sonic Adventure 2 - Save Utility [Live Editor - SA2 Chao]";
            isRTE = true;
            isPC = true;
            isSA = false;
            IsChao();
        }

        private void Tsmi_RTE_SA2_Main_Click(object sender, EventArgs e)
        {
            this.Text = "Sonic Adventure 2 - Save Utility [Live Editor - SA2 Main]";
            isRTE = true;
            isPC = true;
            isSA = false;
            IsMain();
        }

        private void Tsmi_Open_Click(object sender, EventArgs e)
        {
            //Setup dialog OpenFileDialog for loading save file
            OpenFileDialog loadSave = new OpenFileDialog();
            loadSave.Filter = "Sonic Adventure 2 Main/Chao Save|*.*";
            loadSave.Title = "Load a Save";

            if (loadSave.ShowDialog() == DialogResult.OK)
            {
                bool validSave = false;
                loadedSave = File.ReadAllBytes(loadSave.FileName);
                tc_Main.TabPages.Clear();
                ChaoSave.activeChao = new Dictionary<uint, TabPage>();
                MainSave.activeMain = new Dictionary<int, TabPage>();

                if (loadedSave.Length == 0xC820)
                {
                    DialogResult result = MessageBox.Show("Is the save you're loading an SA PC Chao Save?", "PC or 360/PS3 SA Chao Save?", MessageBoxButtons.YesNo);
                    if (result == DialogResult.Yes)
                    {
                        isRTE = false;
                        isSA = true;
                        isPC = true;
                        isGC = false;
                        this.Text = "Sonic Adventure 2 - Save Utility [Editing SA PC Chao Save]";
                    }
                    if (result == DialogResult.No)
                    {
                        isRTE = false;
                        isSA = true;
                        isPC = false;
                        isGC = false;
                        this.Text = "Sonic Adventure 2 - Save Utility [Editing SA 360/PS3 Chao Save]";
                    }
                    validSave = true;
                    IsChao();
                }

                if (loadedSave.Length == 0x6000)
                {
                    this.Text = "Sonic Adventure 2 - Save Utility [Editing PC Main Save]";
                    isRTE = false;
                    isSA = false;
                    isPC = true;
                    isGC = false;
                    validSave = true;
                    IsMain();
                }
                if (loadedSave.Length == 0x10000)
                {
                    DialogResult result = MessageBox.Show("Is the save you're loading a PC Chao Save?", "PC or 360/PS3 Chao Save?", MessageBoxButtons.YesNo);
                    if (result == DialogResult.Yes)
                    {
                        isRTE = false;
                        isSA = false;
                        isPC = true;
                        isGC = false;
                        this.Text = "Sonic Adventure 2 - Save Utility [Editing PC Chao Save]";
                    }
                    if (result == DialogResult.No)
                    {
                        isRTE = false;
                        isSA = false;
                        isPC = false;
                        isGC = false;
                        this.Text = "Sonic Adventure 2 - Save Utility [Editing 360/PS3 Chao Save]";
                    }
                    validSave = true;
                    IsChao();
                }
                if (loadedSave.Length == 0x3C028)
                {
                    this.Text = "Sonic Adventure 2 - Save Utility [Editing 360 Main Save]";
                    isRTE = false;
                    isSA = false;
                    isPC = false;
                    isPS3 = false;
                    isGC = false;
                    validSave = true;
                    IsMain();
                }
                if (loadedSave.Length == 0x3C050)
                {
                    this.Text = "Sonic Adventure 2 - Save Utility [Editing PS3 Main Save]";
                    isRTE = false;
                    isSA = false;
                    isPC = false;
                    isPS3 = true;
                    isGC = false;
                    validSave = true;
                    IsMain();
                }
                if (loadedSave.Length == 0x6040)
                {
                    this.Text = "Sonic Adventure 2 - Save Utility [Editing Gamecube Main Save]";
                    isRTE = false;
                    isSA = false;
                    isPC = false;
                    isGC = true;
                    gcFileBytes = loadedSave.Skip(0x12).Take(0x02).ToArray();
                    gcBytes = loadedSave.Take(0x40).ToArray();
                    loadedSave = loadedSave.Skip(0x40).ToArray();
                    validSave = true;
                    IsMain();
                }
                if (loadedSave.Length == 0x10040)
                {
                    this.Text = "Sonic Adventure 2 - Save Utility [Editing Gamecube Chao Save]";
                    isRTE = false;
                    isSA = false;
                    isPC = false;
                    isGC = true;
                    gcBytes = loadedSave.Take(0x40).ToArray();
                    loadedSave = loadedSave.Skip(0x40).ToArray();
                    validSave = true;
                    IsChao();
                }

                if (validSave)
                {
                    loadedFile = loadSave.FileName;
                    File.WriteAllBytes(backupsDir + @"/" + DateTime.Now.ToString("yyyy-MM-dd_HH-mm-ss") + "." + loadSave.SafeFileName, loadedSave.ToArray());
                    tsmi_Save.Enabled = true;
                }
                else
                {
                    tsmi_SaveCurrentChao.Enabled = false;
                    MessageBox.Show("That doesn't appear to be a Sonic Adventure 2 save file.", "Error loading save file", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    loadedSave = null;
                }
            }
        }

        private void IsChao()
        {
            rteTimer.Stop();
            if (rteThread != null && rteThread.IsAlive) { rteThread.Abort(); }
            isMain = false;
            tc_Main.TabPages.Clear();
            MainSave.activeMain.Clear();
            ChaoSave.activeChao.Clear();
            if (!isSA && !isRTE)
            {
                ChaoSave.GetChaoWorld();
                tsmi_saveAsPS3.Visible = true;
                tsmi_saveAs360.Visible = true;
                tsmi_saveAsGC.Visible = true;
            }
            else
            {
                if (isRTE) { ChaoSave.GetChaoWorld(); }
                tsmi_saveAsPS3.Visible = false;
                tsmi_saveAs360.Visible = false;
                tsmi_saveAsGC.Visible = false;
            }

            ChaoSave.GetChao();
            tsmi_SaveCurrentChao.Enabled = true;
            tsmi_Chao.Enabled = true;
            tsmi_saveAs360New.Visible = false;
            tsmi_saveAs360Append.Visible = false;
            tsmi_saveAsPS3New.Visible = false;
            tsmi_saveAsPS3Append.Visible = false;
            if (rteUpdates && isRTE) { rteTimer.Start(); }
        }
        private void IsMain()
        {
            rteTimer.Stop();
            if (rteThread != null && rteThread.IsAlive) { rteThread.Abort(); }
            isMain = true;
            tc_Main.TabPages.Clear();
            MainSave.activeMain.Clear();
            ChaoSave.activeChao.Clear();
            MainSave.GetMain();
            tsmi_SaveCurrentChao.Enabled = false;
            tsmi_Chao.Enabled = false;
            if (!isSA && !isRTE)
            {
                tsmi_saveAs360New.Visible = true;
                tsmi_saveAs360Append.Visible = true;
                tsmi_saveAsPS3New.Visible = true;
                tsmi_saveAsPS3Append.Visible = true;
            }
            else
            {
                tsmi_saveAs360New.Visible = false;
                tsmi_saveAs360Append.Visible = false;
                tsmi_saveAsPS3New.Visible = false;
                tsmi_saveAsPS3Append.Visible = false;
            }
            if (rteUpdates && isRTE) { rteTimer.Start(); }
        }

        private void Tsmi_LoadChao_Click(object sender, EventArgs e)
        {
            rteTimer.Stop();
            if (tc_Main.SelectedIndex != 0)
            {
                uint chaoBeginning = 0x3AA4;
                if (isSA) chaoBeginning = 0x818;
                if (isRTE) chaoBeginning = 0;

                uc_Chao uc = (uc_Chao)tc_Main.Controls[tc_Main.SelectedIndex].Controls[0];
                OpenFileDialog loadChao = new OpenFileDialog();
                loadChao.InitialDirectory = chaoDirectory;
                loadChao.Filter = "Chao File|*.chao";
                loadChao.Title = "Load a Chao";
                loadChao.ShowDialog();
                if (loadChao.FileName != "")
                {
                    byte[] chao = File.ReadAllBytes(loadChao.FileName);
                    if (chao.Length == 2112) { chao = chao.Skip(0x40).ToArray(); }
                    if (chao.Length == 2048)
                    {
                        List<byte> byteList = new List<byte>();
                        if (!isRTE) { byteList.AddRange(loadedSave.Take((int)(chaoBeginning + (0x800 * uc.chaoNumber))).ToArray()); }
                        else { byteList.AddRange(Memory.ReadBytes(offsets.chaoMemoryStart, 0xC000).Take((int)(chaoBeginning + (0x800 * uc.chaoNumber))).ToArray()); }

                        if (!isPC) { byteList.AddRange(ChaoSave.ByteSwapChao(chao)); }
                        else { byteList.AddRange(chao); }

                        if (!isRTE)
                        {
                            byteList.AddRange(loadedSave.Skip((int)(chaoBeginning + (0x800 * (uc.chaoNumber + 1)))).ToArray());
                            loadedSave = byteList.ToArray();
                        }
                        else
                        {
                            byteList.AddRange(Memory.ReadBytes(offsets.chaoMemoryStart, 0xC000).Skip((int)(chaoBeginning + (0x800 * (uc.chaoNumber + 1)))).ToArray());
                            Memory.WriteBytesAtAddress(offsets.chaoMemoryStart, byteList.ToArray());
                        }
                        ChaoSave.GetChao();
                    }
                    else
                    {
                        MessageBox.Show("That doesn't appear to be a chao file.", "Error loading chao", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
                rteTimer.Start();
            }
        }

        private void Tsmi_SaveCurrentChao_Click(object sender, EventArgs e)
        {
            if (tc_Main.SelectedIndex != 0)
            {
                uint chaoBeginning = 0x3AA4;
                if (isSA) chaoBeginning = 0x818;
                if (isRTE) chaoBeginning = 0;

                uc_Chao uc = (uc_Chao)tc_Main.Controls[tc_Main.SelectedIndex].Controls[0];
                byte[] chao = new byte[2048];
                if (!isPC) { chao = ChaoSave.ByteSwapChao(loadedSave.Skip((int)(chaoBeginning + (0x800 * uc.chaoNumber))).Take(0x800).ToArray()); }
                else
                {
                    if (!isRTE) { chao = loadedSave.Skip((int)(chaoBeginning + (0x800 * uc.chaoNumber))).Take(0x800).ToArray(); }
                    else { chao = Memory.ReadBytes(offsets.chaoMemoryStart, 0xC000).Skip((int)(chaoBeginning + (0x800 * uc.chaoNumber))).Take(0x800).ToArray(); }
                }
                SaveFileDialog saveChao = new SaveFileDialog();
                saveChao.InitialDirectory = chaoDirectory;
                saveChao.Filter = "Chao File|*.chao|FCE Chao File|*.chao";
                saveChao.Title = "Save a Chao";
                saveChao.ShowDialog();

                if (saveChao.FileName != "")
                {
                    List<byte> chaoToSave = new List<byte>(chao);
                    switch (saveChao.FilterIndex)
                    {
                        case 1:
                            break;

                        case 2:
                            chaoToSave.InsertRange(0, new byte[]
                            {
                                0x14, 0x28, 0xB7, 0x52, 0xAD, 0x34, 0xF3, 0xC4, 0xC4, 0xFA, 0x25, 0x49, 0x04, 0xFF, 0x1B, 0x24, 0x13, 0x0C, 0x26, 0x4F, 0x6F,
                                0xB5, 0x29, 0xA5, 0x7C, 0x87, 0x78, 0x89, 0x08, 0xBC, 0x2E, 0xE6, 0xAB, 0x3E, 0x55, 0x4F, 0xDD, 0x35, 0x68, 0x75, 0xF5, 0xF7,
                                0xA8, 0x2B, 0x27, 0x67, 0xCA, 0x74, 0x4F, 0x28, 0xE1, 0x56, 0x1F, 0x69, 0xDB, 0xBE, 0xF3, 0x4D, 0xA6, 0xD3, 0xB1, 0xE7, 0x21,
                                0x00
                            });
                            break;
                    }
                    File.WriteAllBytes(saveChao.FileName, chaoToSave.ToArray());
                }
            }
        }

        private void Tsmi_DupeCurrentChao_Click(object sender, EventArgs e)
        {
            rteTimer.Stop();
            if (tc_Main.SelectedIndex != 0)
            {
                uint chaoBeginning = 0x3AA4;
                if (isSA) chaoBeginning = 0x818;
                if (isRTE) chaoBeginning = 0;

                uc_Chao uc = (uc_Chao)tc_Main.Controls[tc_Main.SelectedIndex].Controls[0];
                byte[] chaoToDupe = new byte[0x800];
                byte[] array = new byte[0xC000];

                if (!isRTE)
                {
                    chaoToDupe = loadedSave.Skip((int)(chaoBeginning + (0x800 * uc.chaoNumber))).Take(0x800).ToArray();
                    array = loadedSave.Skip((int)chaoBeginning).Take(0xC000).ToArray();
                }
                else
                {
                    chaoToDupe = Memory.ReadBytes((int)(offsets.chaoMemoryStart + (int)(0x800 * uc.chaoNumber)), 0x800);
                    array = Memory.ReadBytes(offsets.chaoMemoryStart, 0xC000);
                }

                uint chaoIndex = 0;
                foreach (byte[] chao in SplitByteArray(array, 0x800))
                {
                    if ((chao[offsets.chao.Garden] == 0 || chao[offsets.chao.Garden] == 255) && chaoIndex != 24)
                    {
                        List<byte> byteArray = new List<byte>();
                        if (!isRTE)
                        {
                            byteArray.AddRange(loadedSave.Take((int)(chaoBeginning + (0x800 * chaoIndex))).ToArray());
                            byteArray.AddRange(chaoToDupe);
                            byteArray.AddRange(loadedSave.Skip((int)(chaoBeginning + (0x800 * (chaoIndex + 1)))).ToArray());
                            loadedSave = byteArray.ToArray();
                        }
                        else
                        {
                            byteArray.AddRange(Memory.ReadBytes(offsets.chaoMemoryStart, 0xC000).Take((int)(chaoBeginning + (0x800 * chaoIndex))).ToArray());
                            byteArray.AddRange(chaoToDupe);
                            byteArray.AddRange(Memory.ReadBytes(offsets.chaoMemoryStart, 0xC000).Skip((int)(chaoBeginning + (0x800 * chaoIndex + 1))).ToArray());
                            Memory.WriteBytesAtAddress(offsets.chaoMemoryStart, byteArray.ToArray());
                        }
                        MessageBox.Show("Chao has been duped into slot " + (chaoIndex + 1) + ".", "Chao duped", MessageBoxButtons.OK, MessageBoxIcon.None);
                        ChaoSave.GetChao();
                        break;
                    }
                    else if (chaoIndex == 24)
                    {
                        MessageBox.Show("Failed to find a slot for the chao, you'll have to make room.", "Error duping chao", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                    chaoIndex++;
                }
                rteTimer.Start();
            }
        }

        private void Tsmi_saveAsPC_Click(object sender, EventArgs e)
        {
            if (!isSA)
            {
                if (!isMain)
                {
                    try
                    {
                        List<byte> byteList = new List<byte>();
                        byteList.AddRange(loadedSave.Take(0x3AA4).ToArray());
                        foreach (byte[] chao in SplitByteArray(loadedSave.Skip(0x3AA4).Take(0xC000).ToArray(), 0x800))
                        {
                            if (!isPC) { byteList.AddRange(ChaoSave.ByteSwapChao(chao)); }
                            else { byteList.AddRange(chao); }
                        }
                        byteList.AddRange(loadedSave.Skip(0xFAA4).Take(0x55C).ToArray());

                        if (!isPC) { byteList = ChaoSave.ByteSwapChaoWorld(byteList.ToArray()).ToList(); }
                        byte[] chaoToSave = byteList.ToArray();

                        byte[] splitForChecksum = chaoToSave.Skip(0x3040).ToArray();
                        Checksum.WriteChaoChecksum(splitForChecksum, true);
                        List<byte> byteArray = new List<byte>();
                        byteArray.AddRange(chaoToSave.Take(0x3040).ToArray());
                        byteArray.AddRange(splitForChecksum);
                        chaoToSave = byteArray.ToArray();
                        string pcFileName = Path.GetDirectoryName(loadedFile) + @"/SONIC2B__ALF";
                        int index = 1;
                        while (true)
                        {
                            if (!File.Exists(pcFileName))
                            {
                                break;
                            }
                            else
                            {
                                pcFileName = Path.GetDirectoryName(loadedFile) + @"/SONIC2B__ALF" + index;
                                index++;
                            }
                        }
                        File.WriteAllBytes(pcFileName, chaoToSave);
                        MessageBox.Show("Chao save file has been saved to " + pcFileName + "!", "Success", MessageBoxButtons.OK, MessageBoxIcon.None);
                    }
                    catch
                    {
                        MessageBox.Show("There was a problem saving the chao save file!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
                else
                {
                    try
                    {
                        uc_Main uc = (uc_Main)tc_Main.Controls[tc_Main.SelectedIndex].Controls[0];
                        List<byte> toSave = new List<byte>();
                        if (isPC) { toSave = new List<byte>(loadedSave); }
                        else
                        {
                            if (!isPS3) { toSave = new List<byte>(loadedSave.Skip((0x6004 * (int)(uc.mainIndex)) + 4).Take(0x6000).ToArray()); }
                            else { toSave = new List<byte>(loadedSave.Skip((0x6008 * (int)(uc.mainIndex)) + 8).Take(0x6000).ToArray()); }
                            toSave = MainSave.ByteSwapMain(toSave.ToArray()).ToList();
                        }
                        toSave = new List<byte>(Checksum.WriteMainChecksum(toSave.ToArray(), true, false, false));
                        string pcFileName = Path.GetDirectoryName(loadedFile) + @"/SONIC2B__S01";
                        int index = 1;
                        while (true)
                        {
                            if (!File.Exists(pcFileName))
                            {
                                break;
                            }
                            else
                            {
                                pcFileName = Path.GetDirectoryName(loadedFile) + @"/SONIC2B__S" + index.ToString("00");
                                index++;
                            }
                        }
                        File.WriteAllBytes(pcFileName, toSave.ToArray());
                        MessageBox.Show("Save file has been saved to " + pcFileName + "!", "Success", MessageBoxButtons.OK, MessageBoxIcon.None);
                    }
                    catch
                    {
                        MessageBox.Show("There was a problem saving the save file!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
            }
            else
            {
                if (!isMain)
                {
                    try
                    {
                        List<byte> byteList = new List<byte>();
                        byteList.AddRange(loadedSave.Take(0x818).ToArray());
                        foreach (byte[] chao in SplitByteArray(loadedSave.Skip(0x818).Take(0xC000).ToArray(), 0x800))
                        {
                            if (!isPC) { byteList.AddRange(ChaoSave.ByteSwapChao(chao)); }
                            else { byteList.AddRange(chao); }
                        }
                        byteList.AddRange(loadedSave.Skip(0xC818).Take(0x08).ToArray());

                        if (!isPC) { byteList = ChaoSave.ByteSwapChaoWorld(byteList.ToArray()).ToList(); }
                        byte[] chaoToSave = byteList.ToArray();
                        Checksum.WriteChaoChecksum(chaoToSave, false);
                        string pcFileName = Path.GetDirectoryName(loadedFile) + @"/SonicAdventureChaoGarden.snc";
                        int index = 1;
                        while (true)
                        {
                            if (!File.Exists(pcFileName))
                            {
                                break;
                            }
                            else
                            {
                                pcFileName = Path.GetDirectoryName(loadedFile) + @"/SonicAdventureChaoGarden" + index + ".snc";
                                index++;
                            }
                        }
                        File.WriteAllBytes(pcFileName, chaoToSave);
                        MessageBox.Show("Chao save file has been saved to " + pcFileName + "!", "Success", MessageBoxButtons.OK, MessageBoxIcon.None);
                    }
                    catch
                    {
                        MessageBox.Show("There was a problem saving the chao save file!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
                else
                {
                    MessageBox.Show("You can't save an SA2 Main Save as DX.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        private void Tsmi_saveAsGC_Click(object sender, EventArgs e)
        {
            if (!isMain)
            {
                try
                {
                    byte[] header = new byte[] { 0x47, 0x53, 0x4E, 0x45, 0x38, 0x50, 0xFF, 0xCD, 0x53, 0x4F, 0x4E, 0x49, 0x43, 0x32, 0x42, 0x5F, 0x5F, 0x41, 0x4C, 0x46, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x78, 0x10, 0x33, 0x00, 0x00, 0x00, 0x40, 0x55, 0x55, 0x55, 0x55, 0x0C, 0x00, 0x00, 0x11, 0x00, 0x08, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00 };

                    byte[] header2 = new byte[]
                    {
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x08, 0x09, 0x0A, 0x04, 0x0B, 0x0B, 0x0C, 0x0C, 0x0A, 0x0A, 0x0D, 0x0E, 0x0F, 0x0F, 0x0E, 0x10, 0x11, 0x12, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x14, 0x13, 0x15, 0x15, 0x16, 0x16, 0x16, 0x17, 0x04, 0x02, 0x18, 0x00, 0x09, 0x04, 0x0B, 0x0C, 0x0C, 0x0A, 0x19, 0x1A, 0x10, 0x0F, 0x1B, 0x08,
                        0x1B, 0x1C, 0x04, 0x1D, 0x13, 0x15, 0x15, 0x15, 0x15, 0x1C, 0x1D, 0x15, 0x16, 0x16, 0x16, 0x16, 0x16, 0x0B, 0x09, 0x18, 0x18, 0x0A, 0x07, 0x0C, 0x0C, 0x0F, 0x10, 0x07, 0x1A, 0x1E, 0x0E, 0x0E, 0x0E, 0x15, 0x15, 0x10, 0x1C, 0x1F, 0x15, 0x15, 0x15, 0x16, 0x16, 0x20, 0x04, 0x06, 0x20, 0x20, 0x20, 0x0C, 0x07, 0x00, 0x21, 0x04, 0x0A, 0x0B, 0x0C, 0x0E, 0x10, 0x03, 0x07, 0x10, 0x0E, 0x0E, 0x0D, 0x15, 0x20, 0x0C, 0x0C, 0x20, 0x16, 0x16, 0x22, 0x20, 0x20, 0x23, 0x0A, 0x24, 0x20,
                        0x24, 0x11, 0x1A, 0x04, 0x0A, 0x04, 0x0C, 0x04, 0x1A, 0x00, 0x04, 0x0D, 0x14, 0x14, 0x14, 0x11, 0x25, 0x26, 0x27, 0x28, 0x16, 0x16, 0x16, 0x10, 0x29, 0x0C, 0x27, 0x2A, 0x24, 0x2B, 0x24, 0x11, 0x1C, 0x2C, 0x00, 0x02, 0x0A, 0x04, 0x0C, 0x0C, 0x04, 0x0C, 0x09, 0x10, 0x14, 0x2A, 0x2A, 0x2A, 0x2A, 0x10, 0x14, 0x20, 0x20, 0x24, 0x24, 0x24, 0x24, 0x0D, 0x24, 0x2B, 0x2D, 0x2D, 0x2D, 0x2B, 0x2E, 0x0B, 0x2F, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x03, 0x31, 0x32, 0x33,
                        0x34, 0x35, 0x00, 0x04, 0x36, 0x36, 0x37, 0x38, 0x39, 0x2C, 0x36, 0x1A, 0x36, 0x36, 0x3A, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3B, 0x3C, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3E, 0x0B, 0x1C, 0x0B, 0x0B, 0x0B, 0x0B, 0x0B, 0x3C, 0x0C, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0x3D, 0x3D, 0x3C, 0x3E, 0x3B, 0x00, 0x00, 0x0B, 0x0B, 0x0B, 0x0B, 0x0A, 0x3F, 0x3E, 0x3A, 0x1E, 0x1E, 0x1E, 0x1E,
                        0x0C, 0x0C, 0x3F, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x16, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x18, 0x23, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x41, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x29, 0x27, 0x16, 0x16, 0x17, 0x42, 0x0B, 0x43, 0x43, 0x27, 0x20, 0x20, 0x20, 0x44, 0x2A, 0x45, 0x46, 0x43, 0x20, 0x24, 0x24, 0x24, 0x24, 0x24, 0x47, 0x42, 0x48, 0x49, 0x4A, 0x4B, 0x2D, 0x2D, 0x4C, 0x06, 0x14, 0x16, 0x20, 0x16, 0x24, 0x4D, 0x4E, 0x4D, 0x24, 0x20, 0x24, 0x47, 0x42, 0x27, 0x27, 0x27, 0x2B, 0x2B, 0x2D, 0x41, 0x4F, 0x27, 0x4F, 0x50, 0x2D, 0x51,
                        0x52, 0x4A, 0x27, 0x4F, 0x50, 0x51, 0x20, 0x24, 0x20, 0x06, 0x10, 0x24, 0x2B, 0x2B, 0x53, 0x2B, 0x2B, 0x06, 0x14, 0x2B, 0x2D, 0x2D, 0x2D, 0x51, 0x2D, 0x54, 0x55, 0x51, 0x51, 0x56, 0x57, 0x57, 0x58, 0x59, 0x5A, 0x57, 0x57, 0x4D, 0x2B, 0x24, 0x14, 0x06, 0x2B, 0x2B, 0x2D, 0x04, 0x2D, 0x2D, 0x4C, 0x28, 0x2D, 0x2D, 0x56, 0x27, 0x5B, 0x57, 0x57, 0x51, 0x57, 0x57, 0x5C, 0x5D, 0x55, 0x5E, 0x5F, 0x5F, 0x5F, 0x5F, 0x60, 0x5D, 0x1C, 0x4B, 0x2D, 0x2D, 0x2D, 0x23, 0x22, 0x2D, 0x23,
                        0x51, 0x51, 0x51, 0x5B, 0x4E, 0x2E, 0x57, 0x54, 0x57, 0x5F, 0x5F, 0x55, 0x4E, 0x5F, 0x5F, 0x22, 0x5F, 0x61, 0x62, 0x63, 0x59, 0x5F, 0x64, 0x51, 0x51, 0x51, 0x22, 0x23, 0x4D, 0x42, 0x0B, 0x57, 0x65, 0x42, 0x27, 0x1C, 0x27, 0x1C, 0x0A, 0x5B, 0x66, 0x5D, 0x27, 0x27, 0x4E, 0x1C, 0x0A, 0x67, 0x28, 0x54, 0x48, 0x60, 0x5C, 0x4F, 0x68, 0x26, 0x36, 0x36, 0x3A, 0x36, 0x36, 0x36, 0x69, 0x36, 0x36, 0x36, 0x00, 0x00, 0x3A, 0x3A, 0x3E, 0x6A, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x69,
                        0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x3F, 0x1E, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x3D, 0x6D, 0x6D, 0x6D, 0x6D, 0x6D, 0x6D, 0x6D, 0x69, 0x6E, 0x40, 0x3E, 0x6F, 0x6F, 0x6F, 0x6F, 0x3E, 0x3C, 0x70, 0x71, 0x72, 0x72, 0x72, 0x72, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x1E, 0x3D, 0x6D, 0x73, 0x74, 0x74, 0x74, 0x74, 0x6C, 0x3F, 0x6F, 0x3D, 0x74, 0x74, 0x72, 0x74, 0x74, 0x3D, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x72, 0x6F, 0x6B, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x69, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6B, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75, 0x1C, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x76, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5D,
                        0x49, 0x77, 0x00, 0x00, 0x00, 0x00, 0x2F, 0x03, 0x78, 0x79, 0x22, 0x66, 0x22, 0x5B, 0x57, 0x47, 0x7A, 0x27, 0x57, 0x57, 0x57, 0x57, 0x5E, 0x51, 0x50, 0x5D, 0x2C, 0x55, 0x55, 0x77, 0x7B, 0x49, 0x41, 0x7C, 0x79, 0x79, 0x79, 0x79, 0x79, 0x29, 0x7D, 0x36, 0x55, 0x51, 0x52, 0x4C, 0x64, 0x7E, 0x57, 0x5F, 0x7F, 0x39, 0x5B, 0x62, 0x5F, 0x80, 0x62, 0x62, 0x81, 0x7F, 0x54, 0x60, 0x63, 0x63, 0x60, 0x54, 0x36, 0x82, 0x29, 0x7F, 0x7F, 0x79, 0x83, 0x84, 0x5F, 0x57, 0x76, 0x4E, 0x5E,
                        0x80, 0x5F, 0x48, 0x5F, 0x7B, 0x5D, 0x66, 0x5F, 0x62, 0x5E, 0x85, 0x86, 0x81, 0x29, 0x49, 0x60, 0x60, 0x7B, 0x5D, 0x78, 0x36, 0x25, 0x83, 0x83, 0x83, 0x83, 0x84, 0x54, 0x5F, 0x62, 0x61, 0x64, 0x80, 0x22, 0x5D, 0x5D, 0x2E, 0x62, 0x62, 0x5F, 0x51, 0x4A, 0x5D, 0x4F, 0x76, 0x60, 0x60, 0x60, 0x7B, 0x86, 0x4F, 0x87, 0x84, 0x79, 0x79, 0x83, 0x79, 0x84, 0x88, 0x63, 0x62, 0x7A, 0x56, 0x22, 0x5D, 0x5C, 0x80, 0x89, 0x80, 0x58, 0x51, 0x54, 0x5D, 0x8A, 0x8B, 0x66, 0x60, 0x60, 0x7B,
                        0x85, 0x8C, 0x84, 0x8D, 0x79, 0x83, 0x83, 0x83, 0x79, 0x26, 0x36, 0x87, 0x64, 0x80, 0x80, 0x5F, 0x80, 0x8E, 0x8A, 0x2F, 0x5F, 0x8F, 0x62, 0x62, 0x80, 0x57, 0x49, 0x81, 0x49, 0x90, 0x60, 0x7B, 0x90, 0x91, 0x86, 0x5D, 0x84, 0x83, 0x83, 0x79, 0x79, 0x78, 0x7C, 0x03, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x3B, 0x92, 0x36, 0x36, 0x00, 0x00, 0x00, 0x3B, 0x92, 0x93, 0x68, 0x36, 0x00, 0x00, 0x00, 0x92, 0x94, 0x94, 0x1A, 0x36, 0x3A, 0x00, 0x3B, 0x95, 0x94, 0x96, 0x70, 0x72, 0x72,
                        0x72, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x94, 0x94, 0x94, 0x94, 0x95, 0x95, 0x95, 0x95, 0x96, 0x94, 0x95, 0x6F, 0x6E, 0x40, 0x40, 0x40, 0x93, 0x93, 0x93, 0x93, 0x72, 0x71, 0x92, 0x6E, 0x93, 0x93, 0x93, 0x93, 0x70, 0x97, 0x6E, 0x36, 0x95, 0x98, 0x99, 0x92, 0x6E, 0x6B, 0x36, 0x36, 0x40, 0x6E, 0x6E, 0x6E, 0x6E, 0x40, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x88, 0x7C, 0x82, 0x82, 0x00, 0x00, 0x00, 0x1A, 0x9A, 0x9B, 0x9C, 0x04, 0x00, 0x00, 0x00, 0x9D, 0x62, 0x61, 0x61, 0x41, 0x00, 0x00, 0x0A, 0x62, 0x8F, 0x58, 0x80, 0x91, 0x1A,
                        0x8C, 0x8C, 0x8C, 0x8C, 0x7C, 0x87, 0x82, 0x9E, 0x9F, 0xA0, 0xA0, 0x9F, 0x9A, 0x9D, 0x9F, 0x9D, 0x62, 0x9D, 0xA1, 0x9C, 0x61, 0x63, 0x61, 0x38, 0x5F, 0x76, 0x5D, 0x8B, 0x5F, 0x49, 0x63, 0x7C, 0x7D, 0x26, 0x25, 0x88, 0x87, 0x25, 0x88, 0xA2, 0x27, 0xA3, 0xA0, 0xA4, 0x9A, 0xA5, 0xA5, 0x62, 0x4D, 0xA4, 0xA6, 0xA7, 0x61, 0xA8, 0xA9, 0x80, 0x5F, 0x5F, 0x48, 0xAA, 0x80, 0x7E, 0x2C, 0x87, 0x19, 0x2F, 0x2F, 0x25, 0x8C, 0x19, 0x88, 0xA0, 0x61, 0x9E, 0x9D, 0x9F, 0x9E, 0x23, 0x9F,
                        0x9E, 0xA7, 0x42, 0x9A, 0x61, 0x61, 0x60, 0x61, 0x59, 0x5D, 0x4E, 0x5F, 0x5F, 0x5E, 0x5F, 0x80, 0x19, 0x2F, 0x25, 0x25, 0x88, 0x03, 0x8C, 0x88, 0xA2, 0x63, 0xA0, 0x9B, 0x9F, 0x61, 0xAB, 0x9F, 0xAC, 0x42, 0x63, 0x61, 0xA6, 0xAD, 0x63, 0x62, 0x77, 0x5D, 0xAD, 0x5F, 0x5C, 0x5D, 0xA7, 0x5F, 0x2F, 0x25, 0x68, 0x8C, 0x8C, 0x8C, 0x25, 0x68, 0x9C, 0x0C, 0x0B, 0xAB, 0xA5, 0x9D, 0x9B, 0x9B, 0xAB, 0x27, 0x43, 0xA6, 0x61, 0xA9, 0x61, 0xAB, 0x60, 0x5D, 0x48, 0x5F, 0x7E, 0x5C, 0x80,
                        0x8E, 0x19, 0x87, 0x68, 0x68, 0x03, 0x25, 0x87, 0x68, 0xA5, 0x9B, 0x9A, 0xA7, 0x9A, 0xA5, 0xA5, 0xA0, 0x63, 0xA6, 0x62, 0x60, 0x61, 0x9C, 0xA9, 0x9E, 0x64, 0x80, 0x2E, 0x4D, 0x80, 0x89, 0x2C, 0x59, 0x19, 0x25, 0xAE, 0x00, 0x40, 0xAF, 0x96, 0x96, 0x61, 0xA7, 0x19, 0x3A, 0x97, 0xB0, 0xB0, 0xB0, 0xA7, 0x41, 0x31, 0x6B, 0xB1, 0xB2, 0xB2, 0xB2, 0x5D, 0x79, 0x36, 0x6E, 0xB3, 0xB4, 0xB4, 0xB4, 0x96, 0x96, 0x98, 0x99, 0x99, 0x99, 0x99, 0x99, 0xB0, 0xB0, 0xB0, 0xB0, 0xB0, 0xB0,
                        0xB0, 0xB0, 0xB2, 0xB2, 0xB2, 0xB2, 0xB2, 0xB2, 0xB2, 0xB2, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0xB4, 0x99, 0x99, 0x99, 0x99, 0x99, 0x6F, 0x36, 0x36, 0xB0, 0xB0, 0xB0, 0xB0, 0x99, 0x6E, 0x36, 0x36, 0xB2, 0xB2, 0xB2, 0xB2, 0xB5, 0x69, 0x36, 0x36, 0xB4, 0xB4, 0xB4, 0xB4, 0x6F, 0x36, 0x36, 0x36, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x77, 0x5E, 0x58, 0x58, 0x5E, 0x2C, 0xB6, 0x8A, 0x66, 0x54, 0x41, 0x8A, 0x4A, 0x4A, 0x25, 0x26, 0x31, 0x6A, 0xB7, 0x7D, 0xB7, 0x82, 0x3A, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x5A, 0x5E, 0x8B, 0x8B, 0x5E, 0x57, 0x59, 0x54, 0x4A, 0x91, 0xAD, 0xAD,
                        0x66, 0x76, 0x29, 0x09, 0x87, 0x7D, 0x7D, 0x31, 0x31, 0x31, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x5E, 0x5F, 0x7E, 0x5D, 0xAD, 0x5E, 0x64, 0x55, 0x66, 0x4A, 0xAA, 0x1A, 0x76, 0x66, 0x66, 0xAD, 0x26, 0x8C, 0x31, 0x36, 0x31, 0x31, 0x31, 0x31, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x89, 0x55, 0x45, 0x5E, 0x8B, 0x49, 0x5E, 0x5E, 0x90, 0xAD, 0x76, 0x66, 0x49, 0x5D, 0x54, 0x66, 0xB7, 0x7D, 0x87, 0x31, 0x6A, 0x6A, 0x6A, 0x6A, 0x36, 0x36, 0x36,
                        0x36, 0x36, 0x36, 0x36, 0x36, 0x7B, 0xB8, 0x5C, 0x57, 0x45, 0x83, 0x60, 0x5E, 0x86, 0x19, 0x49, 0x4A, 0x86, 0x78, 0x48, 0x91, 0x26, 0x6A, 0x26, 0x26, 0x26, 0x31, 0x36, 0x7C, 0x36, 0x36, 0x36, 0xB9, 0x38, 0xAB, 0xAB, 0xA4, 0x8E, 0x38, 0x64, 0x5E, 0x55, 0x55, 0x5E, 0x86, 0x91, 0x66, 0x66, 0x4A, 0x85, 0xAA, 0x54, 0x5D, 0x82, 0x7C, 0x26, 0x7C, 0x29, 0x82, 0x6A, 0x6A, 0xA2, 0xA4, 0xA4, 0xA4, 0x9D, 0xAB, 0xBA, 0x36, 0x86, 0x5E, 0x5A, 0x50, 0x5E, 0x7E, 0x55, 0x89, 0x5D, 0x4A,
                        0x49, 0x86, 0x91, 0x91, 0x66, 0x66, 0x6A, 0x7D, 0x05, 0xAE, 0x7D, 0x7D, 0x7D, 0x7D, 0x36, 0x36, 0x36, 0x36, 0xBB, 0xAB, 0xA4, 0xA4, 0x2C, 0x05, 0x36, 0x3E, 0x97, 0xB5, 0xB5, 0xB5, 0x54, 0x78, 0x36, 0xBC, 0xB9, 0xB9, 0xB9, 0xB9, 0x6A, 0x8C, 0x36, 0xBD, 0xBE, 0xBF, 0xBF, 0xBF, 0xA4, 0xA2, 0xBD, 0xC0, 0x92, 0x40, 0x3E, 0x40, 0xB5, 0xB5, 0xB5, 0xB5, 0xB5, 0xB5, 0xB5, 0xB5, 0xB9, 0xB9, 0xB9, 0xB9, 0xB9, 0xB9, 0xB9, 0xBC, 0xBF, 0xBF, 0xBF, 0xBF, 0xC1, 0xC2, 0xC3, 0x36, 0x3E,
                        0x3E, 0x3E, 0x40, 0xC4, 0x34, 0xBD, 0x36, 0xB5, 0xB5, 0xB5, 0xB5, 0x40, 0x36, 0x36, 0x3A, 0x6B, 0xBC, 0xBA, 0xB9, 0xBC, 0x36, 0x36, 0x3A, 0x36, 0x36, 0xC5, 0xC6, 0xC7, 0xBF, 0xBF, 0xBF, 0x36, 0x36, 0x36, 0x32, 0xC8, 0xC9, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0xCA, 0xCB, 0xCB, 0xC7, 0xCC, 0xBF, 0xBF, 0x6F, 0xCD, 0xCE, 0x39, 0xCF, 0xD0, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0xBF, 0xBF, 0xBF, 0xCC, 0xCA, 0xC2, 0x00, 0x3E, 0x3E, 0x3E, 0x3E, 0x6F, 0xD1, 0x33, 0x36, 0x3A, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3A, 0x3A, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3A, 0x3A, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x00, 0x3A, 0x3A, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x3A, 0x3A, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0xB9, 0xC6, 0xD2,
                        0xCC, 0xCC, 0x00, 0x00, 0x00, 0x00, 0xA2, 0xD3, 0xD4, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x36, 0xD5, 0xB3, 0xD6, 0x00, 0x00, 0x00, 0x00, 0x2C, 0xD1, 0xD7, 0xD7, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xC1, 0xD8, 0xD9, 0x6F, 0xD4, 0x14, 0x97, 0x6F, 0x6F, 0xDA, 0xDB, 0xB3, 0xD3, 0xDB, 0xDC, 0xD6, 0xD6, 0xC8, 0x32, 0xD1, 0xC2, 0xDD, 0xD7, 0xD7, 0xD1, 0xDE, 0xBC, 0xBB, 0x36, 0x36, 0x55, 0xD2, 0xCC, 0xBF, 0xBF, 0xB9, 0x36, 0x39, 0xDF, 0x97, 0x6F, 0x6F, 0x6F, 0x36, 0xC0, 0xE0, 0xD6, 0xD6,
                        0xE0, 0xD6, 0xD6, 0xC3, 0xE1, 0xD7, 0xE2, 0xE3, 0xDA, 0xD7, 0xD7, 0xCA, 0x34, 0xE4, 0xCF, 0xCD, 0xDD, 0xB1, 0xB1, 0xC4, 0x33, 0x39, 0x39, 0x35, 0xDA, 0xB3, 0xB3, 0xDD, 0x39, 0x36, 0xBB, 0xD1, 0xE5, 0xE5, 0xE0, 0xE6, 0x38, 0x36, 0xE7, 0xE8, 0xE9, 0xD7, 0xD3, 0xD6, 0xC8, 0xC8, 0xC8, 0xCF, 0x55, 0xBB, 0xBA, 0xD1, 0xD8, 0x33, 0xBE, 0xEA, 0xCC, 0xCC, 0xCC, 0xCF, 0xB5, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0xD8, 0xCA, 0xE3, 0xDC, 0xB1, 0xB1, 0xDC, 0xE3, 0xBA, 0x00, 0x37, 0xBD,
                        0xE4, 0xDD, 0xB1, 0xB1, 0xCC, 0xD5, 0xE3, 0xDB, 0xCD, 0xB3, 0xB3, 0xE2, 0x6F, 0xB1, 0xCF, 0xDB, 0xEB, 0xE5, 0xEC, 0xCD, 0xC8, 0xE3, 0xDB, 0xD1, 0xE9, 0xE9, 0xDC, 0x35, 0xD1, 0x35, 0xBC, 0x36, 0xD9, 0xCD, 0xB1, 0xB1, 0xD2, 0xED, 0x36, 0xBD, 0xCA, 0xE2, 0xB3, 0xE0, 0xC5, 0x36, 0x36, 0xD5, 0xE5, 0xEC, 0xE5, 0xE5, 0x36, 0x36, 0xED, 0xCD, 0xE9, 0xE9, 0xD7, 0xD7, 0xDC, 0xE3, 0xE3, 0xC8, 0xE3, 0xCB, 0xBC, 0x36, 0xD3, 0x35, 0x33, 0xEE, 0xDE, 0x38, 0x36, 0x36, 0xEB, 0xE5, 0xD7,
                        0xCA, 0x2C, 0x36, 0x36, 0x36, 0xD7, 0xEC, 0xDC, 0xEE, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEF, 0xC8, 0xE5, 0xEC, 0xD7, 0x00, 0x00, 0x00, 0xD2, 0xB4, 0xE9, 0xF0, 0xCB, 0x00,
                        0x00, 0xEA, 0xF1, 0xE9, 0xE0, 0xE4, 0xE4, 0x00, 0x00, 0xDD, 0xE9, 0xE9, 0xF2, 0xDA, 0xB2, 0xD7, 0xE5, 0xE9, 0xD7, 0xCA, 0xDE, 0x38, 0xDF, 0xCB, 0xE1, 0xE9, 0xE5, 0xDF, 0xF3, 0xD1, 0xE9, 0xD1, 0xF4, 0xE9, 0xDC, 0xF3, 0xDD, 0xE9, 0xE9, 0xE9, 0xE5, 0xC4, 0xCB, 0xDD, 0xE9, 0xEC, 0xF0, 0xE8, 0xEC, 0xDC, 0x34, 0xDB, 0xF4, 0xE9, 0xD7, 0xE9, 0xDC, 0xDB, 0xE4, 0xE3, 0xE9, 0xE9, 0xE0, 0xE9, 0xF4, 0xE8, 0xE8, 0xF4, 0xE9, 0xE9, 0xF5, 0xDC, 0xF0, 0xF0, 0xF0, 0xE5, 0xE9, 0xEC, 0xD5,
                        0xD2, 0xA2, 0xCE, 0xDD, 0xE9, 0xD7, 0xC1, 0xCE, 0x35, 0x32, 0xDD, 0xE9, 0xE9, 0xDF, 0xF3, 0x36, 0xDB, 0xE6, 0xAF, 0xAF, 0xF6, 0xCB, 0xED, 0x36, 0xDB, 0xD2, 0xF7, 0xF7, 0xCB, 0xC5, 0x36, 0xED, 0xA2, 0x32, 0xC8, 0xD7, 0xD7, 0xDC, 0xD8, 0xC5, 0x36, 0xD3, 0xEB, 0xE5, 0xD7, 0xD3, 0x7A, 0x36, 0x7A, 0xE8, 0xE9, 0xE9, 0xE6, 0x32, 0x36, 0x36, 0xCD, 0xE9, 0xE9, 0xE2, 0x35, 0xBC, 0x36, 0x38, 0xED, 0x32, 0xCD, 0xE9, 0xE9, 0xDC, 0xF3, 0x7A, 0xBC, 0xD3, 0xF4, 0xE9, 0xEC, 0xF5, 0xCA,
                        0xE6, 0xBF, 0x70, 0xF8, 0xAF, 0xAF, 0xAF, 0xF9, 0xF5, 0xC2, 0xBF, 0xFA, 0xFA, 0xFA, 0xFA, 0xBF, 0xCB, 0xBD, 0x38, 0xC7, 0xF4, 0xE9, 0xF0, 0xE4, 0x35, 0xD8, 0xDB, 0xF1, 0xE9, 0xE9, 0xF5, 0xCA, 0xE6, 0xC2, 0x73, 0xF8, 0xAF, 0xAF, 0xAF, 0xF8, 0x98, 0xD8, 0xBF, 0xFA, 0xFA, 0xFA, 0xFA, 0xFA, 0xF7, 0xEE, 0xEE, 0xEE, 0x38, 0x36, 0x36, 0x36, 0x3A, 0xC1, 0xDB, 0x7A, 0x36, 0x36, 0x36, 0x3A, 0x00, 0xC1, 0xC3, 0xBC, 0x36, 0x36, 0x36, 0x00, 0x00, 0xC6, 0xBB, 0x36, 0x36, 0x36, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEE, 0xFB, 0xFB, 0xFB, 0xFB, 0xFC, 0xFB, 0xFD, 0x34, 0xE7, 0xE7, 0xE7, 0xE7, 0xDE, 0xC3, 0x3A, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3A, 0x36, 0x36, 0x36,
                        0x36, 0x36, 0x36, 0x36, 0xD1, 0xC7, 0xF3, 0xE6, 0xFC, 0xF6, 0xC1, 0xDE, 0x7A, 0xCE, 0xEE, 0x33, 0xE7, 0xD9, 0x7A, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x32, 0x32, 0xE7, 0xE4, 0xFB, 0xFB, 0xF6, 0xCB, 0x36, 0x36, 0x55, 0xEE, 0xE7, 0xE7, 0xE7, 0xEE, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0xEE, 0x2C, 0x2C, 0xFE, 0x2C, 0x36, 0xBC, 0xD2, 0xC5, 0x36, 0x36,
                        0x36, 0x36, 0x36, 0xE7, 0x73, 0x36, 0x36, 0x36, 0x36, 0x36, 0x39, 0xC2, 0xFA, 0x36, 0x36, 0x36, 0x3A, 0x3A, 0x3A, 0x36, 0x36, 0xF1, 0xE9, 0xB3, 0xBE, 0x39, 0x36, 0x36, 0xA2, 0xAF, 0x95, 0xC0, 0x35, 0x36, 0x36, 0x36, 0x3A, 0xFA, 0x33, 0xE7, 0xB9, 0x36, 0x36, 0x36, 0x00, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3A, 0x00, 0xC5, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x2C, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3A, 0x3A,
                        0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x2C, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xC5, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0x3A, 0xED, 0x36, 0x36, 0x36, 0x3A, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x36, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x80, 0x4B, 0x90, 0xD6, 0x20, 0xFB,
                        0x00, 0xCE, 0x00, 0xDE, 0x64, 0xEA, 0xA0, 0x9C, 0x93, 0xEE, 0xC0, 0xF6, 0xE0, 0xFF, 0x20, 0xFF, 0x00, 0xDE, 0x24, 0xC9, 0x8B, 0xB9, 0x2D, 0xD1, 0xE6, 0xE6, 0x63, 0x94, 0x75, 0x80, 0x1F, 0xB9, 0x49, 0x80, 0x1A, 0x80, 0x17, 0x88, 0x35, 0x48, 0x60, 0xC5, 0xC0, 0xE2, 0x80, 0xA0, 0xB2, 0xFF, 0x60, 0xA8, 0xEE, 0xFE, 0xC0, 0xEE, 0x82, 0x80, 0x14, 0x4A, 0x80, 0xC5, 0xE6, 0xF2, 0xC1, 0x80, 0x13, 0xC9, 0xC0, 0xA0, 0xC0, 0xFF, 0x80, 0xAD, 0x2B, 0xE6, 0xC0, 0xA4, 0xCD, 0x80, 0x11,
                        0xA5, 0x29, 0x80, 0x0E, 0x90, 0x6A, 0xDE, 0x60, 0x47, 0x60, 0x88, 0x40, 0xBE, 0x11, 0xD6, 0xB5, 0xE3, 0x18, 0xDF, 0x18, 0x80, 0x00, 0x41, 0x11, 0x9C, 0xE7, 0xB1, 0x8C, 0x40, 0x00, 0x42, 0x00, 0xB8, 0xA0, 0xC0, 0xE0, 0x9C, 0x00, 0xCD, 0x20, 0x98, 0x00, 0xF7, 0x21, 0xE6, 0xA2, 0xFB, 0x20, 0x90, 0x70, 0xB9, 0xA9, 0xEE, 0xC2, 0x90, 0x6F, 0xEB, 0x03, 0xDE, 0xC4, 0xD2, 0x66, 0x8C, 0x6D, 0x88, 0x4D, 0xD6, 0x45, 0xF3, 0x02, 0xFF, 0xC0, 0xC6, 0x07, 0x80, 0x0C, 0xA5, 0x52, 0x8C,
                        0x50, 0xD6, 0x84, 0xA0, 0xE8, 0x94, 0xAC, 0x80, 0x0B, 0x8C, 0x6B, 0xF7, 0x42, 0x88, 0x4A, 0x88, 0x4B, 0xA9, 0x28, 0xFF, 0xE0, 0x80, 0x09, 0x80, 0x08, 0xB9, 0xA6, 0x80, 0x05, 0x80, 0x06, 0xB1, 0x46, 0x88, 0x48, 0x88, 0x2A, 0xCE, 0x45, 0xC2, 0x34, 0xBD, 0x80, 0x8C, 0x00, 0x98, 0xA0, 0x84, 0x00, 0xFE, 0x80, 0xD9, 0x60, 0x94, 0x00, 0xA8, 0x00, 0xE9, 0x40, 0xF9, 0xA0, 0xFD, 0xE0, 0xE9, 0xA2, 0xFE, 0x20, 0x42, 0x10, 0xE6, 0xE4, 0xAD, 0x68, 0xDA, 0x60, 0xF3, 0x80, 0xB5, 0xCE,
                        0xBD, 0xE7, 0xAD, 0x20, 0x90, 0x60, 0x90, 0x68, 0xFB, 0xA0, 0x80, 0x07, 0xF7, 0x40, 0xB5, 0x40, 0xEF, 0x60, 0xEF, 0x20, 0xF7, 0x82, 0xEF, 0x43, 0xC1, 0xA0, 0xCD, 0xE0, 0x98, 0xC7, 0xFB, 0x81, 0x94, 0xA9, 0xD2, 0x00, 0xFF, 0xC1, 0x84, 0x29, 0x84, 0x09, 0xC6, 0x25, 0xCE, 0x65, 0xB8, 0x60, 0xFD, 0x80, 0xFD, 0x20, 0xE8, 0xE0, 0xFC, 0xE0, 0xB4, 0x00, 0xE0, 0xA0, 0xD0, 0x80, 0x8C, 0x44, 0x84, 0x03, 0x90, 0x65, 0xAD, 0x04, 0xC1, 0xA3, 0x84, 0x04, 0x80, 0x04, 0xD2, 0x42, 0x94,
                        0x84, 0xD6, 0x02, 0x98, 0xA5, 0x84, 0x24, 0x84, 0x26, 0xC9, 0xE3, 0x88, 0x25, 0xA4, 0xE5, 0xE2, 0xE3, 0x9C, 0xC5, 0x94, 0x86, 0xCA, 0x25, 0xDE, 0xC0, 0xF4, 0xC0, 0xFC, 0xA0, 0xC8, 0x00, 0xFC, 0x60, 0xE4, 0x00, 0xFC, 0x20, 0xB8, 0x00, 0x49, 0x70, 0x84, 0x20, 0xE7, 0x20, 0x90, 0x64, 0x8C, 0x63, 0x84, 0x42, 0x84, 0x21, 0x88, 0x42, 0xDA, 0xB5, 0xD2, 0x51, 0xDA, 0x93, 0xDE, 0x51, 0xEF, 0x7B, 0xC6, 0x52, 0xD4, 0xE6, 0xA9, 0x6B, 0xEB, 0x9C, 0xE6, 0x93, 0xF6, 0x93, 0xAC, 0x62,
                        0xEA, 0x72, 0xE7, 0x59, 0xD2, 0x30, 0xF2, 0x31, 0xCA, 0x94, 0xFB, 0x39, 0xB4, 0xA4, 0xF1, 0xCD, 0xE6, 0xD6, 0xEF, 0x17, 0xBC, 0x42, 0xCD, 0xEF, 0xD8, 0x00, 0xEC, 0x00, 0xF7, 0xBC, 0xD6, 0xF8, 0xF0, 0xE6, 0xF7, 0xFF, 0xE5, 0x07, 0xF5, 0x69, 0xCE, 0xB5, 0xE1, 0xEF, 0xE4, 0x62, 0xF0, 0x83, 0xE8, 0x41, 0xF6, 0xD5, 0xE7, 0x7B, 0xF8, 0x00, 0xEA, 0x0D, 0xD6, 0xD6, 0xFC, 0x63, 0xFC, 0x00, 0xD2, 0x73, 0xF4, 0x20, 0xF4, 0x00, 0x94, 0xA5, 0xDA, 0xF7, 0x44, 0x44, 0xE0, 0xC4, 0xFC,
                        0xA4, 0xF4, 0x40, 0xEB, 0xBD, 0xFC, 0x21, 0xD5, 0x48, 0xE5, 0x85, 0xDA, 0xD3, 0xF0, 0xA0, 0xEC, 0x60, 0xD6, 0x92, 0xED, 0xA5, 0xF1, 0x64, 0x46, 0x66, 0xA5, 0x4A, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x27, 0xF7, 0xF8, 0xF9, 0x20, 0x1C, 0x1C, 0x1C, 0x43, 0xF8, 0xFA, 0xFB, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF7, 0xF8, 0xFB, 0xFC, 0xFE, 0x1C, 0x1C, 0x1C, 0x43, 0xFA, 0xFB, 0xFC, 0x00, 0x1C, 0x1C, 0x1C, 0x20, 0xF7, 0xFB, 0xFE, 0x20, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x2E, 0x1C, 0x1C, 0x1C, 0x2F, 0xF4, 0xF6, 0x4A, 0x27, 0x1C, 0x1C, 0x2F, 0xF4, 0xF6, 0xF6, 0xF6, 0x5D, 0x1C, 0x38, 0xBA, 0xF5, 0xF5, 0xF3, 0xF2, 0xF2, 0x49, 0xBC, 0xF1, 0xF1, 0xF1, 0xF0, 0xEA, 0xEA, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x31, 0x28, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xD5, 0x5C, 0x34, 0x26, 0x1C, 0x1C, 0x1C, 0x1C, 0xD0, 0xB5, 0x99, 0x57, 0x34, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x34, 0x84, 0x1C, 0x1C, 0x1C, 0x1C, 0x23, 0x38, 0xA9, 0xEC, 0x1C, 0x1C, 0x1C, 0x22, 0x3E, 0xC0, 0xEC, 0xE5, 0x1C, 0x1C, 0x1C, 0x34, 0xC6, 0xEC, 0xE0, 0xDF, 0xE8, 0xEC, 0xEC, 0xE9, 0xED, 0xED, 0xE3, 0xCF, 0xE6, 0xE0, 0xE0, 0xE0, 0xE0, 0xD8, 0xCC, 0xBF, 0xE0, 0xDF, 0xD8, 0xD1, 0xCC, 0xBE, 0xB8, 0xBB, 0xD8, 0xD1, 0xC5, 0xBE, 0xB8,
                        0xB1, 0xA8, 0x9F, 0xBF, 0xBB, 0xB1, 0xA8, 0x7E, 0x46, 0x29, 0x1C, 0xBB, 0xB7, 0xA7, 0x9F, 0x99, 0x91, 0x50, 0x28, 0xB7, 0xAF, 0xA2, 0x99, 0x94, 0x7E, 0x7C, 0x3F, 0xA0, 0x99, 0x93, 0x96, 0x91, 0x84, 0x81, 0x73, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x35, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1D, 0x56, 0xEC, 0xE5, 0xDF, 0xDF, 0x1C, 0x1C, 0x34, 0xC1,
                        0xEB, 0xE0, 0xE0, 0xD8, 0x1C, 0x2E, 0x84, 0xEC, 0xE0, 0xE0, 0xDE, 0xD6, 0x22, 0x34, 0xD3, 0xEB, 0xE0, 0xE0, 0xD7, 0xDC, 0xD1, 0xC5, 0xBE, 0xB8, 0xB1, 0x9E, 0x9F, 0x99, 0xCC, 0xC5, 0xBE, 0xB1, 0xA8, 0x9F, 0xA0, 0x93, 0xCA, 0xBD, 0xBB, 0xB7, 0xA7, 0xA2, 0x99, 0x96, 0xC9, 0xA5, 0xB7, 0xAF, 0xA2, 0x99, 0x93, 0x96, 0x9A, 0x96, 0x91, 0xA1, 0x87, 0x81, 0x7F, 0x76, 0x96, 0xB9, 0xC0, 0xA1, 0x76, 0x73, 0x73, 0x6C, 0xC0, 0xD9, 0xD9, 0xC1, 0xA3, 0x74, 0x6B, 0x6A, 0xCE, 0xE2, 0xE1,
                        0xD3, 0xA9, 0x75, 0x6B, 0x69, 0x59, 0x35, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x69, 0x3F, 0x28, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x68, 0x51, 0x2F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x68, 0x5B, 0x31, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x31, 0xCE, 0xE5, 0xE0, 0xD7, 0xDC, 0xAD, 0x1C, 0x27, 0xA9, 0xD8, 0xD1, 0xD7, 0xC9, 0xF4, 0x1C, 0x24, 0x7B, 0xC5, 0xCA, 0xE4, 0xAC, 0x40, 0x1C, 0x1C, 0x5F, 0xB8, 0xB6, 0xE4, 0xAC, 0x40, 0xAC, 0xAD, 0x72, 0xAE, 0xA0, 0x95, 0x94, 0x91, 0x40, 0x33,
                        0x42, 0xA4, 0x99, 0x89, 0x91, 0x84, 0x30, 0x4F, 0x3C, 0x7A, 0x95, 0x94, 0x97, 0x82, 0x4F, 0x4F, 0x5D, 0x7A, 0x9A, 0x91, 0x86, 0x7C, 0xD3, 0xE7, 0xE2, 0xD2, 0xA9, 0x7F, 0x6B, 0x69, 0xB5, 0xE3, 0xE2, 0xD3, 0xB2, 0x7F, 0x6B, 0x69, 0x7A, 0xD4, 0xE1, 0xCE, 0x97, 0x7F, 0x6A, 0x69, 0x71, 0xAB, 0xCE, 0xB9, 0x98, 0x73, 0x6A, 0x62, 0x68, 0x5B, 0x35, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x68, 0x5B, 0x35, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x68, 0x68, 0x35, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x5B,
                        0x62, 0x35, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x23, 0x1C, 0x57, 0xA8, 0xB6, 0xC4, 0xAC, 0x43, 0x1B, 0x1C, 0x49, 0x9F, 0x9E, 0xB8, 0xC9, 0x3D, 0x22, 0x1C, 0x34, 0x67, 0x92, 0x8D, 0x9C, 0x5E, 0x1C, 0x1C, 0x1F, 0x12, 0x2C, 0x92, 0x8D, 0x9C, 0x30, 0x4F, 0x32, 0x7A, 0x96, 0x85, 0x80, 0x7C, 0x40, 0x43, 0x42, 0x64, 0x8B, 0xA6, 0x87, 0x44, 0x45, 0x42, 0x64, 0x16, 0x0C, 0x0C, 0x0C, 0x04, 0xA5, 0xB5, 0x9A, 0x4E, 0x0C, 0x04, 0x04, 0x04, 0x81, 0x4E, 0xBC, 0xB2, 0x7C, 0x6A, 0x6A, 0x66,
                        0x37, 0x44, 0xAB, 0xA1, 0x76, 0x6A, 0x62, 0x66, 0x04, 0x37, 0xA3, 0x98, 0x74, 0x69, 0x66, 0x69, 0x16, 0x6D, 0x88, 0x7F, 0x6C, 0x6A, 0x4A, 0x18, 0x68, 0x51, 0x2F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x66, 0x35, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x47, 0x09, 0x09, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0B, 0x0A, 0x0A, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x15, 0x05, 0x4D, 0x92, 0x6E, 0x1C, 0x1C, 0x1D, 0x1A, 0x15, 0x11, 0x0E, 0x0E, 0x1C, 0x1C, 0x1C, 0x1C, 0x14, 0x08, 0x06,
                        0x06, 0x1C, 0x1C, 0x1C, 0x1C, 0x1A, 0x14, 0x10, 0x10, 0x9D, 0x9D, 0x8E, 0x9A, 0x78, 0x4E, 0x4E, 0x80, 0x0A, 0x11, 0x3A, 0xB0, 0x96, 0x97, 0x86, 0x87, 0x03, 0x0E, 0xD3, 0xC0, 0xB2, 0xA1, 0x98, 0x81, 0x11, 0xD0, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x7C, 0x75, 0x75, 0x76, 0x6B, 0x3F, 0x12, 0x0B, 0x87, 0x7C, 0x75, 0x61, 0x69, 0x5B, 0x0D, 0x0A, 0x7C, 0x7F, 0x76, 0x6B, 0x62, 0x62, 0x0D, 0x03, 0x7C, 0x7F, 0x76, 0x6B, 0x62, 0x68, 0x3F, 0x14, 0x0A, 0x0A, 0x08, 0x10, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x06, 0x0A, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x14, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1A, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1E, 0x43, 0xF8,
                        0xFA, 0x43, 0x1E, 0x1C, 0x1C, 0x36, 0xF8, 0xF8, 0xFB, 0xFC, 0x40, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF7, 0xF8, 0xFA, 0xFC, 0xFD, 0x00, 0x1C, 0x1C, 0x36, 0xFA, 0xFA, 0xFC, 0xFD, 0x40, 0x1C, 0x1C, 0x25, 0xF7, 0xFB, 0xFD, 0x00, 0x25, 0x1C, 0x1C, 0x22, 0x1C, 0x1C, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2E, 0x1C, 0x1C,
                        0x1C, 0x2F, 0xF4, 0xF6, 0x4A, 0x27, 0x1C, 0x1C, 0x2F, 0xF4, 0xF6, 0xF6, 0xF6, 0x5D, 0x1C, 0x38, 0xBA, 0xF5, 0xF5, 0xF3, 0xF2, 0xF2, 0x49, 0xBC, 0xF1, 0xF1, 0xF1, 0xF0, 0xEA, 0xEA, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x31, 0x28, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xD5, 0x5C, 0x34, 0x26, 0x1C, 0x1C, 0x1C, 0x1C, 0xD0, 0xB5, 0x99, 0x57, 0x34, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x34, 0x84, 0x1C, 0x1C, 0x1C, 0x1C, 0x23, 0x38, 0xA9, 0xEC, 0x1C, 0x1C, 0x1C, 0x22, 0x3E, 0xC0, 0xEC, 0xE5, 0x1C, 0x1C, 0x1C, 0x34, 0xC6, 0xEC, 0xE0, 0xDF, 0xE8, 0xEC, 0xEC, 0xE9, 0xED, 0xED, 0xE3, 0xCF, 0xE6, 0xE0, 0xE0, 0xE0, 0xE0, 0xD8, 0xCC, 0xBF, 0xE0, 0xDF, 0xD8, 0xD1, 0xCC, 0xBE, 0xB8, 0xBB, 0xD8, 0xD1, 0xC5, 0xBE, 0xB8, 0xB1, 0xA8, 0x9F,
                        0xBF, 0xBB, 0xB1, 0xA8, 0x7E, 0x46, 0x29, 0x1C, 0xBB, 0xB7, 0xA7, 0x9F, 0x99, 0x91, 0x50, 0x28, 0xB7, 0xAF, 0xA2, 0x99, 0x94, 0x7E, 0x7C, 0x3F, 0xA0, 0x99, 0x93, 0x96, 0x91, 0x84, 0x81, 0x73, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x35, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1D, 0x56, 0xEC, 0xE5, 0xDF, 0xDF, 0x1C, 0x1C, 0x34, 0xC1, 0xEB, 0xE0, 0xE0,
                        0xD8, 0x1C, 0x2E, 0x84, 0xEC, 0xE0, 0xE0, 0xDE, 0xD6, 0x22, 0x34, 0xD3, 0xEB, 0xE0, 0xE0, 0xD7, 0xDC, 0xD1, 0xC5, 0xBE, 0xB8, 0xB1, 0x9E, 0x9F, 0x99, 0xCC, 0xC5, 0xBE, 0xB1, 0xA8, 0x9F, 0xA0, 0x93, 0xCA, 0xBD, 0xBB, 0xB7, 0xA7, 0xA2, 0x99, 0x96, 0xC9, 0xA5, 0xB7, 0xAF, 0xA2, 0x99, 0x93, 0x91, 0x9A, 0x94, 0x85, 0x9B, 0x97, 0x81, 0x77, 0x76, 0x91, 0x9B, 0xB2, 0xB9, 0xB3, 0x88, 0x74, 0x74, 0x91, 0x91, 0xD3, 0xE1, 0xC6, 0xA1, 0x7D, 0x6C, 0x85, 0xB5, 0xE2, 0xE3, 0xD9, 0xC0,
                        0x81, 0x6C, 0x59, 0x35, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x6A, 0x3F, 0x28, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x69, 0x51, 0x2F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x6A, 0x68, 0x31, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x31, 0xCE, 0xE5, 0xE0, 0xD7, 0xDC, 0xAD, 0x1C, 0x27, 0xA9, 0xD8, 0xD1, 0xD7, 0xC9, 0xF4, 0x1C, 0x24, 0x7B, 0xC5, 0xCA, 0xE4, 0xAC, 0x40, 0x1C, 0x1C, 0x5F, 0xB8, 0xB6, 0xE4, 0xAC, 0x40, 0xAC, 0xAD, 0x72, 0xAE, 0xA0, 0x95, 0x94, 0x85, 0x40, 0x33, 0x42, 0xA4, 0x99,
                        0x89, 0x91, 0x82, 0x30, 0x4F, 0x3C, 0x7A, 0x95, 0x94, 0x97, 0x82, 0x4F, 0x4F, 0x5D, 0x7A, 0x9A, 0x91, 0x86, 0x7C, 0x97, 0xA5, 0xE7, 0xE2, 0xDA, 0xB3, 0x81, 0x6C, 0x7A, 0x65, 0xD2, 0xE7, 0xD3, 0xA9, 0x7C, 0x6C, 0x7A, 0xAB, 0xC7, 0xE1, 0xCE, 0x97, 0x7F, 0x6A, 0x71, 0x3D, 0xC3, 0xCE, 0xB3, 0x87, 0x74, 0x62, 0x6A, 0x68, 0x35, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x69, 0x68, 0x35, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x62, 0x62, 0x35, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x68, 0x62, 0x35, 0x24,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x23, 0x1C, 0x57, 0xA8, 0xB6, 0xC4, 0xAC, 0x43, 0x1B, 0x1C, 0x49, 0x9F, 0x9E, 0xB8, 0xC9, 0x3D, 0x22, 0x1C, 0x34, 0x67, 0x92, 0x8D, 0x9C, 0x5E, 0x1C, 0x1C, 0x1F, 0x12, 0x2C, 0x92, 0x8D, 0x9C, 0x30, 0x4F, 0x32, 0x7A, 0x96, 0x85, 0x80, 0x7C, 0x40, 0x43, 0x42, 0x64, 0x8B, 0xA6, 0x87, 0x44, 0x45, 0x42, 0x64, 0x16, 0x0C, 0x0C, 0x0C, 0x04, 0xA5, 0xB5, 0x9A, 0x4E, 0x0C, 0x04, 0x04, 0x04, 0x81, 0x3C, 0x5D, 0xC7, 0xA1, 0x77, 0x6A, 0x68, 0x37, 0x44, 0x3C,
                        0xC7, 0x81, 0x74, 0x62, 0x66, 0x04, 0x37, 0x6D, 0xB4, 0x7F, 0x6B, 0x66, 0x69, 0x16, 0x6D, 0x73, 0x7F, 0x7D, 0x6A, 0x4A, 0x18, 0x68, 0x51, 0x2F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x66, 0x35, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x47, 0x09, 0x09, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0B, 0x0A, 0x0A, 0x07, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x15, 0x05, 0x4D, 0x92, 0x6E, 0x1C, 0x1C, 0x1D, 0x1A, 0x15, 0x11, 0x0E, 0x0E, 0x1C, 0x1C, 0x1C, 0x1C, 0x14, 0x08, 0x06, 0x06, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1A, 0x14, 0x10, 0x10, 0x9D, 0x9D, 0x8E, 0x9A, 0x78, 0x4E, 0x4E, 0x80, 0x0A, 0x11, 0x3A, 0xB0, 0x96, 0x97, 0x86, 0x87, 0x03, 0x0E, 0xD3, 0xC0, 0xB2, 0xA1, 0x98, 0x81, 0x11, 0xD0, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x7C, 0x75, 0x76, 0x76, 0x61, 0x3F, 0x12, 0x0B, 0x87, 0x7C, 0x75, 0x61, 0x69, 0x5B, 0x0D, 0x0A, 0x7C, 0x7F, 0x76, 0x6B, 0x62, 0x62, 0x0D, 0x03, 0x7C, 0x7F, 0x76, 0x6B, 0x62, 0x68, 0x3F, 0x14, 0x0A, 0x0A, 0x08, 0x10, 0x1C, 0x1C, 0x1C, 0x1C, 0x06,
                        0x0A, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x14, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1A, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2A, 0xF9, 0xF8, 0xF9, 0x1C, 0x1C, 0x1C, 0x2A, 0xF7, 0xF8, 0xFA, 0xFB,
                        0x1C, 0x1C, 0x1C, 0x2B, 0xF9, 0xF8, 0xFB, 0xFC, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x21, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xFE, 0x21, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xFD, 0x2B, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2A, 0xF7, 0xFA, 0xFB, 0xFC, 0x1C, 0x1C, 0x1C, 0x1C, 0x21, 0xF9, 0xFB, 0xFE, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x36, 0xF7, 0x2B, 0x1C, 0x1C, 0x1C, 0x1C, 0x3F, 0xF6, 0xF4, 0x35, 0xFE, 0x21, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x21, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x26, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2E, 0x84, 0x1C, 0x1C, 0x1C, 0x62, 0xF6,
                        0xF6, 0xF6, 0xF4, 0x1C, 0x31, 0x79, 0xF2, 0xF5, 0xF3, 0xF3, 0xF2, 0x49, 0xB3, 0xF0, 0xF1, 0xF1, 0xF1, 0xF0, 0xEA, 0xD2, 0xEC, 0xE6, 0xE9, 0xE9, 0xE9, 0xE9, 0xDB, 0x51, 0x23, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF2, 0x79, 0x38, 0x26, 0x1C, 0x1C, 0x1C, 0x1C, 0xD4, 0xD4, 0xB9, 0x5F, 0x34, 0x26, 0x1C, 0x1C, 0xCD, 0xB8, 0xB1, 0xB1, 0x89, 0x49, 0x29, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3E, 0xB2, 0xE3, 0x1C, 0x1C, 0x1C, 0x1C, 0x3E, 0xC6, 0xEC, 0xE0, 0x1C, 0x1C, 0x1C, 0x29, 0xB3, 0xEC, 0xE0, 0xE0, 0x1C, 0x1C, 0x1C, 0x49, 0xEE, 0xE5, 0xDF, 0xDF, 0xE5, 0xE0, 0xE0, 0xE0, 0xE0, 0xDF, 0xD1, 0xCD, 0xE0, 0xDF, 0xDF, 0xD1, 0xCC, 0xBE, 0xB8, 0xBB, 0xD8, 0xD1, 0xC5, 0xBE, 0xB8, 0xB1, 0xA8, 0xA7, 0xD8, 0xC5, 0xBE, 0xB8, 0xB1, 0xA8, 0x9F, 0xA0, 0xBF, 0xB7, 0xB7,
                        0x9F, 0x9F, 0x9A, 0x5A, 0x2E, 0xB7, 0xA7, 0xAF, 0xA0, 0x93, 0x91, 0x84, 0x47, 0x9F, 0xA0, 0x95, 0x9A, 0x94, 0x85, 0x87, 0x7F, 0x95, 0x96, 0x91, 0x97, 0x86, 0x80, 0x81, 0x75, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x27, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3F, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x6B, 0x31, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x38, 0xC6, 0xE6, 0xE0, 0xE0, 0xD8, 0x1C, 0x23, 0x86, 0xEC, 0xE0, 0xE0, 0xDE, 0xD6, 0x1C, 0x26,
                        0xC0, 0xE5, 0xE0, 0xDE, 0xD6, 0xE4, 0x1C, 0x23, 0x85, 0xDD, 0xDF, 0xD6, 0xE4, 0xAD, 0xCC, 0xC5, 0xBE, 0xBB, 0xA8, 0xA7, 0xA0, 0x95, 0xCA, 0xBD, 0xBD, 0xB7, 0xA7, 0xA2, 0x99, 0x96, 0xAD, 0xC9, 0xB5, 0xAF, 0xA2, 0xA0, 0x93, 0x94, 0x3D, 0xAC, 0x72, 0xAF, 0xAE, 0x99, 0x96, 0x85, 0x94, 0x9B, 0x84, 0x82, 0x81, 0x81, 0x81, 0x7D, 0x91, 0x84, 0xA1, 0x71, 0x70, 0xB2, 0xC1, 0xB4, 0x86, 0x71, 0x72, 0x42, 0x7A, 0xDA, 0xDA, 0xC0, 0x84, 0x5E, 0x45, 0x3B, 0xD4, 0xE2, 0xDB, 0xD2, 0x6C,
                        0x51, 0x2D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x7D, 0x6B, 0x35, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0xA3, 0x6C, 0x47, 0x28, 0x1C, 0x1C, 0x1C, 0x1C, 0xA9, 0x77, 0x73, 0x38, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x82, 0xD1, 0xCB, 0xE6, 0xC9, 0x33, 0x1C, 0x1C, 0x5F, 0xBF, 0xBD, 0xE4, 0xAC, 0x41, 0x1D, 0x1C, 0x57, 0xB1, 0xB6, 0xDC, 0xAC, 0x41, 0x26, 0x1C, 0x56, 0xA8, 0xB6, 0xCF, 0xC9, 0x3B, 0x52, 0x41, 0x3D, 0xA4, 0x99, 0x89, 0x91, 0x82, 0x4F, 0x4F, 0x32, 0x7A, 0x99, 0x94, 0x97, 0x82,
                        0x4F, 0x4F, 0x33, 0x65, 0x9A, 0x91, 0x86, 0x7C, 0x30, 0x52, 0x3C, 0x7A, 0x83, 0x85, 0x80, 0x7C, 0x64, 0x42, 0x40, 0x40, 0xCE, 0xE7, 0xE3, 0xD3, 0x7A, 0x3D, 0x48, 0x48, 0xC7, 0xE7, 0xD2, 0xB9, 0x71, 0x3D, 0x40, 0x52, 0xBA, 0xD9, 0xCE, 0xB2, 0x81, 0x3C, 0x43, 0x52, 0xC8, 0xC6, 0xB2, 0x98, 0xA9, 0x7C, 0x76, 0x47, 0x23, 0x1C, 0x1C, 0x1C, 0x86, 0x7F, 0x76, 0x50, 0x28, 0x1C, 0x1C, 0x1C, 0x87, 0x76, 0x73, 0x47, 0x28, 0x1C, 0x1C, 0x1C, 0x76, 0x6B, 0x47, 0x31, 0x23, 0x1C, 0x1C,
                        0x1C, 0x1F, 0x1C, 0x3E, 0x8E, 0x9E, 0xA8, 0xA5, 0x45, 0x1C, 0x1C, 0x29, 0x57, 0x9F, 0x8D, 0x9C, 0xA5, 0x1C, 0x1C, 0x1F, 0x12, 0x2C, 0x92, 0x8D, 0x9E, 0x1C, 0x1C, 0x1F, 0x15, 0x05, 0x2C, 0x4D, 0x6E, 0x43, 0x33, 0x42, 0x64, 0x7E, 0xA6, 0x4C, 0x0C, 0xAC, 0x42, 0x64, 0x16, 0x04, 0x04, 0x04, 0x04, 0x9C, 0x9F, 0x90, 0x71, 0x0C, 0x04, 0x04, 0x0C, 0x8F, 0x8F, 0x99, 0x9A, 0x94, 0x4E, 0x4E, 0x80, 0x4B, 0x79, 0x3C, 0x3B, 0xAA, 0xB2, 0x81, 0x73, 0x16, 0x6C, 0x55, 0x44, 0xB4, 0x87,
                        0x76, 0x69, 0x4C, 0x6D, 0x6C, 0x7D, 0x98, 0x88, 0x6B, 0x4A, 0x7C, 0x75, 0x76, 0x76, 0x75, 0x6C, 0x18, 0x0B, 0x62, 0x3F, 0x28, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x51, 0x19, 0x1B, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x0B, 0x09, 0x14, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x06, 0x08, 0x0F, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1D, 0x1A, 0x15, 0x0B, 0x05, 0x06, 0x1C, 0x1C, 0x1C, 0x1C, 0x14, 0x08, 0x06, 0x06, 0x1C, 0x1C, 0x1C, 0x1C, 0x1A, 0x14, 0x10, 0x10, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1F, 0x29, 0x06, 0x0A, 0x3A, 0xB0, 0x94, 0x97, 0x80, 0x87, 0x03, 0x0E, 0xD3, 0xC1, 0x9B, 0xA1, 0x98, 0x81, 0x11, 0xD0, 0xCE, 0xA9, 0xA1, 0xA1, 0x98, 0x81, 0x7B, 0xD9, 0xC6, 0xB2, 0xA1, 0x98, 0x98, 0x81, 0x87, 0x7C, 0x75, 0x61, 0x6B, 0x62, 0x0F, 0x08, 0x7C, 0x7F, 0x76, 0x6B, 0x62, 0x62, 0x0D, 0x02, 0x7C, 0x7F, 0x76, 0x6B, 0x62, 0x68, 0x3F, 0x14, 0x7C, 0x7F, 0x7D, 0x6C, 0x69, 0x68, 0x5B, 0x2D, 0x08, 0x0A, 0x1A, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x03, 0x14, 0x1D, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1A, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1E, 0x43, 0xF8, 0xFA, 0x1C, 0x1C, 0x1C, 0x1C, 0x36, 0xF8, 0xF8, 0xFB, 0x1C, 0x1C, 0x1C,
                        0x1C, 0xF7, 0xF8, 0xFA, 0xFC, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x43, 0x1E, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xFC, 0x40, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xFD, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x36, 0xFA, 0xFA, 0xFC, 0x1C, 0x1C, 0x1C, 0x1C, 0x25, 0xF7, 0xFB, 0xFC, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3F, 0xF6, 0xF6, 0xFD, 0x40, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x00, 0x25, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x4A,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x22, 0x3E, 0x1C, 0x1C, 0x1C, 0x23, 0x51, 0xF6, 0xF6, 0xF6,
                        0x1C, 0x1C, 0x34, 0xA3, 0xF3, 0xF5, 0xF3, 0xF3, 0x2E, 0x60, 0xCE, 0xEF, 0xEF, 0xEF, 0xF1, 0xF0, 0xB3, 0xED, 0xE6, 0xE6, 0xE7, 0xE7, 0xE9, 0xE9, 0xF6, 0x55, 0x23, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF2, 0xF2, 0xBA, 0x38, 0x1C, 0x1C, 0x1C, 0x1C, 0xEA, 0xD4, 0xD4, 0xB9, 0x5F, 0x34, 0x1C, 0x1C, 0xDB, 0xCD, 0xBF, 0xB1, 0xB1, 0x83, 0x46, 0x23, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x26, 0x5A, 0xCE, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x5A, 0xEF, 0xEB, 0x1C, 0x1C, 0x1C, 0x1C, 0x34, 0xCE, 0xEB, 0xDF, 0x1C, 0x1C, 0x1C, 0x29, 0x84, 0xEB, 0xE0, 0xE0, 0xE6, 0xE0, 0xE0, 0xE0, 0xE0, 0xDE, 0xD8, 0xD1, 0xE0, 0xDF, 0xDF, 0xD8, 0xCC, 0xC5, 0xBE, 0xB8, 0xE0, 0xD8, 0xCC, 0xBE, 0xBE, 0xB8, 0xB1, 0xA8, 0xDF, 0xD1, 0xC5, 0xBE, 0xB8, 0xB1, 0xA8, 0x9F, 0xCD, 0xBF, 0xBB, 0xB7, 0xA7, 0x9F,
                        0x9A, 0x58, 0xBB, 0xB7, 0xB7, 0xAF, 0xA2, 0x95, 0x94, 0x86, 0xA7, 0x9F, 0xA0, 0x99, 0x95, 0x96, 0x85, 0x87, 0xA0, 0x95, 0x96, 0x94, 0x91, 0x97, 0x84, 0x81, 0x29, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x47, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x75, 0x35, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x77, 0x59, 0x2D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x23, 0x60, 0xED, 0xE5, 0xE0, 0xE0, 0x1C, 0x1C, 0x2E, 0xC6, 0xEB, 0xE0, 0xE0, 0xDD, 0x1C, 0x1C, 0x2E, 0xC6, 0xE5,
                        0xE0, 0xDD, 0xDF, 0x1C, 0x1C, 0x27, 0xB0, 0xDF, 0xD1, 0xD7, 0xC9, 0xD8, 0xCC, 0xC5, 0xBF, 0xBB, 0xA8, 0xA7, 0xA0, 0xD7, 0xCF, 0xBF, 0xBB, 0xB7, 0xA7, 0xA2, 0x99, 0xC9, 0xAD, 0xC9, 0xB5, 0xAF, 0xA2, 0x99, 0x93, 0x45, 0x33, 0x45, 0x72, 0xAE, 0xA0, 0x95, 0x94, 0x95, 0x94, 0x9B, 0x84, 0x82, 0x87, 0x81, 0x77, 0x96, 0x91, 0x84, 0x80, 0x70, 0x7F, 0x75, 0x76, 0x94, 0x86, 0x71, 0x5E, 0x42, 0x3C, 0x6D, 0x6C, 0x85, 0x86, 0x5E, 0x3D, 0x40, 0x32, 0x37, 0x76, 0x76, 0x6B, 0x3F, 0x27,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x6C, 0x69, 0x51, 0x2F, 0x1C, 0x1C, 0x1C, 0x1C, 0x6B, 0x69, 0x66, 0x31, 0x1C, 0x1C, 0x1C, 0x1C, 0xA3, 0xB4, 0x98, 0x58, 0x2E, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x28, 0x95, 0xC5, 0xCA, 0xE4, 0xAC, 0x1C, 0x1C, 0x29, 0x83, 0xBE, 0xBD, 0xE4, 0x45, 0x1C, 0x26, 0x29, 0x7B, 0xB8, 0xB6, 0xE4, 0x45, 0x1C, 0x26, 0x29, 0x67, 0xB1, 0x9E, 0xC4, 0xAC, 0x40, 0x4F, 0x40, 0x42, 0xA4, 0x95, 0x96, 0x9B, 0x52, 0x4F, 0x52, 0x3D, 0x7A, 0x93, 0x91, 0x86, 0x48, 0x4F, 0x52,
                        0x3D, 0x7A, 0x94, 0x85, 0x80, 0x41, 0x30, 0x43, 0x42, 0x8A, 0x91, 0x86, 0x87, 0x82, 0x7A, 0x3D, 0x52, 0x30, 0x52, 0x3C, 0xC1, 0x82, 0x65, 0x3C, 0x4F, 0x30, 0x4F, 0xAA, 0xE1, 0x7C, 0x64, 0x32, 0x4F, 0x30, 0x30, 0xAB, 0xE7, 0x7F, 0x70, 0x32, 0x40, 0x30, 0x52, 0xBC, 0xE7, 0xDA, 0xE1, 0xCE, 0x98, 0x47, 0x2E, 0x1C, 0x1C, 0xE7, 0xDA, 0xCE, 0xA1, 0x74, 0x47, 0x23, 0x1C, 0xE7, 0xE1, 0xD3, 0x9B, 0x7D, 0x61, 0x2E, 0x1C, 0xE1, 0xC6, 0xA9, 0x98, 0x7D, 0x5C, 0x2E, 0x1C, 0x1C, 0x1C,
                        0x23, 0x46, 0x8F, 0x9E, 0xA8, 0xA5, 0x1C, 0x1C, 0x1C, 0x19, 0x39, 0x92, 0x92, 0xA8, 0x1C, 0x1C, 0x1F, 0x0D, 0x05, 0x2C, 0x92, 0x8D, 0x1C, 0x1C, 0x1F, 0x15, 0x05, 0x05, 0x0E, 0x17, 0x45, 0x33, 0x45, 0x65, 0x71, 0x97, 0x84, 0x16, 0xA5, 0x5E, 0x7A, 0x71, 0x04, 0x04, 0x04, 0x04, 0x8D, 0x8C, 0x8F, 0x89, 0x4E, 0x0C, 0x04, 0x04, 0x3A, 0x53, 0x6F, 0x89, 0x89, 0x94, 0x4E, 0x86, 0x16, 0x73, 0x44, 0x5D, 0x41, 0x33, 0xBC, 0xD2, 0x04, 0x54, 0x4A, 0x54, 0x37, 0x79, 0xC1, 0xB3, 0x16,
                        0x79, 0x63, 0x74, 0x74, 0x98, 0xB2, 0x87, 0x81, 0x77, 0x76, 0x73, 0x7D, 0x98, 0x81, 0x73, 0xC6, 0xB2, 0x80, 0x77, 0x76, 0x5C, 0x2E, 0x1C, 0xA1, 0x98, 0x7D, 0x61, 0x61, 0x3E, 0x26, 0x1C, 0x77, 0x6B, 0x3F, 0x35, 0x34, 0x29, 0x22, 0x1C, 0x59, 0x3F, 0x2F, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1D, 0x1A, 0x15, 0x0B, 0x05, 0x03, 0x1C, 0x1C, 0x1C, 0x1C, 0x14, 0x08, 0x06, 0x06, 0x1C, 0x1C, 0x1C, 0x1C, 0x1A, 0x14, 0x10, 0x10, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x29,
                        0x03, 0x06, 0x17, 0xB9, 0xA9, 0x97, 0x86, 0x87, 0x03, 0x0E, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x11, 0xD0, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x7B, 0xDA, 0xCE, 0xC1, 0x9B, 0x98, 0x87, 0x81, 0x87, 0x81, 0x77, 0x61, 0x7D, 0x77, 0x74, 0x3F, 0x7C, 0x7F, 0x76, 0x6B, 0x6A, 0x6A, 0x0F, 0x02, 0x7C, 0x7F, 0x76, 0x6C, 0x62, 0x68, 0x3F, 0x14, 0x7C, 0x7F, 0x7D, 0x6C, 0x69, 0x68, 0x5B, 0x2D, 0x0B, 0x0A, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x03, 0x14, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1A, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2A, 0xF9, 0xF8, 0xFA, 0x1C, 0x1C, 0x1C, 0x1C, 0x43, 0xF8, 0xFA, 0xFB, 0x1C, 0x1C, 0x1C, 0x1C, 0x43, 0xFA,
                        0xFA, 0xFC, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF7, 0x21, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xFC, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xFD, 0x40, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x20, 0xF7, 0xFB, 0xFC, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x27, 0x33, 0xF7, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3F, 0xF6, 0xF6, 0x00, 0x20, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x27, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x4A, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x22, 0x3E, 0x1C, 0x1C, 0x1C, 0x23, 0x51, 0xF6, 0xF6, 0xF6, 0x1C, 0x1C, 0x34,
                        0xA3, 0xF3, 0xF5, 0xF3, 0xF3, 0x2E, 0x60, 0xCE, 0xEF, 0xEF, 0xEF, 0xF1, 0xF0, 0xB3, 0xED, 0xE6, 0xE6, 0xE7, 0xE7, 0xE9, 0xE9, 0xF6, 0x55, 0x23, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF2, 0xF2, 0xBA, 0x38, 0x1C, 0x1C, 0x1C, 0x1C, 0xEA, 0xD4, 0xD4, 0xB9, 0x5F, 0x34, 0x1C, 0x1C, 0xDB, 0xCD, 0xBF, 0xB1, 0xB1, 0x83, 0x46, 0x23, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x26, 0x5A, 0xCE, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x5A, 0xEF, 0xEB, 0x1C, 0x1C, 0x1C, 0x1C, 0x34, 0xCE, 0xEB, 0xDF, 0x1C, 0x1C, 0x1C, 0x29, 0x84, 0xEB, 0xE0, 0xE0, 0xE6, 0xE0, 0xE0, 0xE0, 0xE0, 0xDE, 0xD8, 0xD1, 0xE0, 0xDF, 0xDF, 0xD8, 0xCC, 0xC5, 0xBE, 0xB8, 0xE0, 0xD8, 0xCC, 0xBE, 0xBE, 0xB8, 0xB1, 0xA8, 0xDF, 0xD1, 0xC5, 0xBE, 0xB8, 0xB1, 0xA8, 0x9F, 0xCD, 0xBF, 0xBB, 0xB7, 0xA7, 0x9F, 0x9A, 0x58, 0xBB,
                        0xB7, 0xB7, 0xAF, 0xA2, 0x95, 0x94, 0x86, 0xA7, 0x9F, 0xA0, 0x99, 0x95, 0x96, 0x85, 0x87, 0xA0, 0x95, 0x96, 0x94, 0x91, 0x97, 0x84, 0x81, 0x29, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x47, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x75, 0x35, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x77, 0x59, 0x2D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x23, 0x60, 0xED, 0xE5, 0xE0, 0xE0, 0x1C, 0x1C, 0x2E, 0xC6, 0xEB, 0xE0, 0xE0, 0xDD, 0x1C, 0x1C, 0x2E, 0xC6, 0xE5, 0xE0, 0xDD, 0xDF,
                        0x1C, 0x1C, 0x27, 0xB0, 0xDF, 0xD1, 0xD7, 0xC9, 0xD8, 0xCC, 0xC5, 0xBF, 0xBB, 0xA8, 0xA7, 0xA0, 0xD7, 0xCF, 0xBF, 0xBB, 0xB7, 0xA7, 0xA2, 0x99, 0xC9, 0xAD, 0xC9, 0xB5, 0xAF, 0xA2, 0x99, 0x93, 0x45, 0x33, 0x45, 0x72, 0xAE, 0xA0, 0x95, 0x94, 0x95, 0x94, 0x9B, 0x84, 0x82, 0x87, 0x81, 0x77, 0x96, 0x91, 0x84, 0x80, 0x70, 0x7F, 0x75, 0x76, 0x94, 0x86, 0x71, 0x5E, 0x42, 0x3C, 0x6D, 0x6C, 0x85, 0x86, 0x5E, 0x3D, 0x40, 0x32, 0x37, 0x6B, 0x76, 0x6B, 0x3F, 0x27, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x6C, 0x69, 0x51, 0x2F, 0x1C, 0x1C, 0x1C, 0x1C, 0x6A, 0x68, 0x5B, 0x31, 0x1C, 0x1C, 0x1C, 0x1C, 0x69, 0x68, 0x68, 0x31, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x28, 0x95, 0xC5, 0xCA, 0xE4, 0xAC, 0x1C, 0x1C, 0x29, 0x83, 0xBE, 0xBD, 0xE4, 0x45, 0x1C, 0x26, 0x29, 0x7B, 0xB8, 0xB6, 0xE4, 0x45, 0x1C, 0x26, 0x29, 0x67, 0xB1, 0x9E, 0xC4, 0xAC, 0x40, 0x4F, 0x40, 0x42, 0xA4, 0x95, 0x96, 0x9B, 0x52, 0x4F, 0x52, 0x3D, 0x7A, 0x93, 0x91, 0x86, 0x48, 0x4F, 0x52, 0x3D, 0x7A, 0x94,
                        0x85, 0x80, 0x41, 0x30, 0x43, 0x42, 0x8A, 0x91, 0x86, 0x87, 0x82, 0x7A, 0x3D, 0x52, 0x30, 0x52, 0x32, 0x63, 0x82, 0x65, 0x3C, 0x4F, 0x30, 0x30, 0x32, 0x54, 0x7C, 0x64, 0x32, 0x4F, 0x30, 0x30, 0x32, 0x79, 0x7F, 0x70, 0x32, 0x40, 0x30, 0x52, 0x32, 0xA3, 0x6A, 0x74, 0x88, 0x5A, 0x3E, 0x2E, 0x1C, 0x1C, 0xA3, 0xC6, 0xDA, 0xD3, 0xB3, 0x56, 0x31, 0x22, 0xC1, 0xE7, 0xE2, 0xDA, 0xC6, 0xA3, 0x47, 0x29, 0xD3, 0xE7, 0xE7, 0xE3, 0xC6, 0x7C, 0x61, 0x34, 0x1C, 0x1C, 0x23, 0x46, 0x8F,
                        0x9E, 0xA8, 0xA5, 0x1C, 0x1C, 0x1C, 0x19, 0x39, 0x92, 0x92, 0xA8, 0x1C, 0x1C, 0x1F, 0x0D, 0x05, 0x2C, 0x92, 0x8D, 0x1C, 0x1C, 0x1F, 0x15, 0x05, 0x05, 0x0E, 0x17, 0x45, 0x33, 0x45, 0x65, 0x71, 0x97, 0x84, 0x16, 0xA5, 0x5E, 0x7A, 0x71, 0x04, 0x04, 0x04, 0x04, 0x8C, 0x8C, 0x8F, 0x89, 0x4E, 0x0C, 0x04, 0x04, 0x3A, 0x53, 0x6F, 0x89, 0x89, 0x94, 0x4E, 0x86, 0x16, 0x73, 0x44, 0x5D, 0x41, 0x33, 0x55, 0xC7, 0x04, 0x54, 0x4A, 0x54, 0x44, 0x55, 0xA3, 0xC6, 0x16, 0x79, 0x63, 0x6C,
                        0x73, 0x7F, 0xB2, 0xA9, 0x81, 0x77, 0x76, 0x73, 0x76, 0x87, 0x98, 0x77, 0xDA, 0xDA, 0xD3, 0xC6, 0xA9, 0x7C, 0x76, 0x38, 0xC6, 0xC0, 0xA9, 0x97, 0x87, 0x75, 0x76, 0x38, 0x80, 0x87, 0x98, 0x7F, 0x76, 0x76, 0x5C, 0x2E, 0x76, 0x74, 0x6A, 0x59, 0x59, 0x50, 0x38, 0x22, 0x1C, 0x1C, 0x1D, 0x1A, 0x15, 0x0B, 0x05, 0x03, 0x1C, 0x1C, 0x1C, 0x1C, 0x14, 0x08, 0x06, 0x06, 0x1C, 0x1C, 0x1C, 0x1C, 0x1A, 0x14, 0x10, 0x10, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1F, 0x29, 0x03, 0x06, 0x17,
                        0xB9, 0xA9, 0x97, 0x86, 0x87, 0x03, 0x0E, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x11, 0xD0, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x7B, 0xDA, 0xCE, 0xC1, 0x9B, 0x98, 0x87, 0x81, 0x87, 0x81, 0x77, 0x61, 0x76, 0x88, 0x73, 0x59, 0x7C, 0x7F, 0x76, 0x6B, 0x6A, 0x69, 0x0F, 0x07, 0x7C, 0x7F, 0x76, 0x6B, 0x62, 0x68, 0x3F, 0x14, 0x7C, 0x7F, 0x7D, 0x6C, 0x69, 0x68, 0x5B, 0x2D, 0x18, 0x18, 0x35, 0x2F, 0x31, 0x31, 0x23, 0x1C, 0x03, 0x14, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1A, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2A, 0xF9, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2A, 0xF9, 0xF8, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x36, 0xFA, 0xFA, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF8, 0xF9, 0x21, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xFA, 0xFB, 0xFE, 0x20, 0x1C, 0x1C, 0x1C, 0x1C, 0xFB, 0xFC, 0xFE, 0x21, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2A, 0xF9, 0xFA, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x36, 0xF9, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3B, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xFB, 0xFC, 0x00, 0x20, 0x1C, 0x1C, 0x1C, 0x1C, 0xFC, 0xFE, 0x21, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF7, 0x35, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x35, 0xF4, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x35,
                        0xF4, 0xF6, 0x1C, 0x1C, 0x1C, 0x2E, 0x75, 0xF2, 0xF5, 0xF3, 0x1C, 0x26, 0x56, 0xC0, 0xEF, 0xEF, 0xEF, 0xF1, 0xF6, 0x5D, 0x2D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF6, 0xF6, 0x5D, 0x2F, 0x1C, 0x1C, 0x1C, 0x1C, 0xF3, 0xF2, 0xF2, 0xD5, 0x47, 0x26, 0x1C, 0x1C, 0xF0, 0xEA, 0xD4, 0xD4, 0xC0, 0x67, 0x38, 0x1D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x22, 0x49, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x56, 0xEE, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x34, 0xCE, 0xE6, 0x34, 0x9B, 0xEE, 0xE6, 0xE6, 0xE7, 0xE7, 0xE9, 0xC6, 0xE7, 0xE0, 0xE0, 0xE0, 0xE0, 0xDE, 0xD8, 0xEB, 0xE0, 0xDF, 0xDF, 0xD8, 0xCC, 0xC5, 0xBE, 0xDF, 0xE0, 0xD8, 0xCC, 0xBE, 0xBE, 0xB8, 0xB1, 0xE9, 0xDB, 0xCD, 0xBF, 0xB1, 0xB1, 0x95, 0x49, 0xD1, 0xCD, 0xBF, 0xBB,
                        0xB7, 0xA7, 0x9F, 0x99, 0xB8, 0xBB, 0xB7, 0xB7, 0xAF, 0xA2, 0x95, 0x94, 0xA8, 0xA7, 0x9F, 0xA0, 0x99, 0x95, 0x96, 0x85, 0x28, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x5A, 0x2E, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x85, 0x47, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x80, 0x77, 0x35, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x29, 0x84, 0xEB, 0xE0, 0x1C, 0x1C, 0x1C, 0x26, 0x60, 0xED, 0xE5, 0xE0, 0x1C, 0x1C, 0x22, 0x34, 0xCE, 0xEB, 0xE0, 0xE0, 0x1C, 0x1C, 0x1C,
                        0x34, 0xD3, 0xE5, 0xE0, 0xDD, 0xE0, 0xDF, 0xD1, 0xC5, 0xBE, 0xB8, 0xB1, 0xA8, 0xE0, 0xD8, 0xCC, 0xC5, 0xBF, 0xBB, 0xA8, 0xA7, 0xDD, 0xD1, 0xCF, 0xBF, 0xBB, 0xB7, 0xA7, 0xA0, 0xE2, 0xC9, 0xAD, 0xC9, 0xB7, 0xAF, 0xA2, 0x99, 0x9F, 0xA0, 0x95, 0x96, 0x94, 0x91, 0x97, 0x84, 0xA0, 0x95, 0x94, 0x9B, 0x84, 0x82, 0x87, 0x81, 0x95, 0x96, 0x91, 0x84, 0x80, 0x70, 0x7F, 0x75, 0x89, 0x91, 0x86, 0x71, 0x5E, 0x42, 0x3C, 0x73, 0x81, 0x77, 0x59, 0x2D, 0x1C, 0x1C, 0x1C, 0x1C, 0x77, 0x73,
                        0x6B, 0x3F, 0x23, 0x1C, 0x1C, 0x1C, 0x73, 0x6B, 0x69, 0x51, 0x2F, 0x1C, 0x1C, 0x1C, 0x6C, 0x6A, 0x68, 0x5B, 0x2F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2F, 0xB7, 0xDE, 0xD1, 0xDD, 0x1C, 0x1C, 0x1C, 0x31, 0xB7, 0xC5, 0xCB, 0xE4, 0x1C, 0x1C, 0x1C, 0x34, 0xAE, 0xBE, 0xCB, 0xC9, 0x1C, 0x1C, 0x26, 0x34, 0x8E, 0xB8, 0xB8, 0xC9, 0xC9, 0x45, 0x33, 0x45, 0x72, 0xAE, 0x99, 0x93, 0x45, 0x48, 0x4F, 0x41, 0x42, 0xA2, 0x90, 0x94, 0x3D, 0x4F, 0x4F, 0x40, 0x42, 0xA4, 0x83, 0x91, 0x3D,
                        0x4F, 0x4F, 0x40, 0x42, 0xA0, 0x91, 0x86, 0x94, 0x86, 0x71, 0x5E, 0x3C, 0x40, 0x32, 0x37, 0x85, 0x84, 0x65, 0x32, 0x4F, 0x30, 0x48, 0x3C, 0x84, 0x80, 0x65, 0x33, 0x30, 0x30, 0x52, 0x3C, 0x82, 0x87, 0x64, 0x3B, 0x30, 0x30, 0x52, 0x3C, 0x6B, 0x62, 0x5B, 0x5B, 0x2F, 0x1C, 0x1C, 0x1C, 0x6C, 0x68, 0x5B, 0x5B, 0x31, 0x1D, 0x1D, 0x1C, 0x6C, 0x68, 0x6C, 0x7F, 0x60, 0x49, 0x38, 0x23, 0x6B, 0x74, 0xC7, 0xD3, 0xD3, 0xCE, 0x84, 0x3E, 0x1C, 0x1C, 0x23, 0x34, 0x90, 0xB1, 0xB1, 0xA5,
                        0x1C, 0x1C, 0x1C, 0x2E, 0x57, 0x8D, 0x9E, 0x9C, 0x1C, 0x1C, 0x1C, 0x19, 0x12, 0x39, 0x92, 0x92, 0x1C, 0x1C, 0x1F, 0x0D, 0x05, 0x05, 0x6E, 0x92, 0x45, 0x48, 0x4F, 0x33, 0x65, 0x93, 0x85, 0x80, 0x5E, 0x3D, 0x5D, 0x42, 0x64, 0x71, 0x86, 0x70, 0x9C, 0x5E, 0x72, 0x64, 0x16, 0x04, 0x04, 0x04, 0x8D, 0x8C, 0x8C, 0x8E, 0x78, 0x16, 0x04, 0x04, 0x81, 0x7C, 0x4C, 0x33, 0x52, 0x30, 0x40, 0x44, 0x0C, 0x37, 0x7D, 0x3C, 0x3B, 0x41, 0x33, 0x4A, 0x04, 0x0C, 0x63, 0x4A, 0x37, 0x37, 0x4A,
                        0x74, 0x0C, 0x4C, 0x6D, 0x6C, 0x6C, 0x74, 0x76, 0x98, 0x6B, 0x98, 0xDA, 0xE7, 0xE7, 0xD2, 0xC7, 0x5C, 0x7D, 0xC6, 0xE7, 0xE2, 0xE1, 0xD3, 0xA1, 0x74, 0xB2, 0xD2, 0xD2, 0xD3, 0xC6, 0xB9, 0x98, 0x76, 0xC1, 0xB9, 0xB3, 0xA9, 0x97, 0x80, 0x77, 0x76, 0x1C, 0x1C, 0x1F, 0x15, 0x05, 0x05, 0x05, 0x0E, 0x1C, 0x1C, 0x1D, 0x1A, 0x15, 0x0B, 0x05, 0x03, 0x1C, 0x1C, 0x1C, 0x1C, 0x14, 0x08, 0x06, 0x06, 0x1C, 0x1C, 0x1C, 0x1C, 0x1A, 0x14, 0x10, 0x10, 0x17, 0x53, 0x6F, 0x90, 0x89, 0x83,
                        0x71, 0x4E, 0x02, 0x03, 0x17, 0xB9, 0xA9, 0x9B, 0x86, 0x80, 0x03, 0x0E, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x11, 0xD0, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x80, 0x7C, 0x7D, 0x76, 0x74, 0x73, 0x81, 0xA1, 0x87, 0x81, 0x77, 0x5C, 0x6C, 0x73, 0x7C, 0x7D, 0x7C, 0x7F, 0x76, 0x6B, 0x69, 0x69, 0x13, 0x13, 0x7C, 0x7F, 0x76, 0x6B, 0x62, 0x62, 0x3F, 0x14, 0x98, 0x81, 0x81, 0x7F, 0x7F, 0x7D, 0x76, 0x5C, 0x4B, 0x63, 0x59, 0x51, 0x59, 0x61, 0x5C, 0x47, 0x0D, 0x3F, 0x35, 0x2F, 0x2F,
                        0x31, 0x34, 0x2E, 0x1A, 0x1C, 0x22, 0x22, 0x1C, 0x22, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x22, 0x2A, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2A, 0xF7, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF7, 0xF8, 0xF9, 0x21, 0x1C, 0x1C, 0x1C, 0x1C, 0xF8, 0xFA, 0xFB, 0xFE, 0x20, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2B, 0xF9, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2A, 0xF7, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2B, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF8, 0xFB, 0xFC, 0xFD, 0x2B, 0x1C, 0x1C, 0x1C, 0xFA, 0xFB, 0xFC, 0xFE, 0x21, 0x1C, 0x1C, 0x1C, 0xF9, 0xFC, 0xFE, 0x21, 0x1E, 0x1C, 0x1C, 0x1C, 0x35, 0x2B, 0x2F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1D, 0x35, 0xF4, 0x1C, 0x1C, 0x1C, 0x1C, 0x28, 0x3F, 0xF4, 0xF6, 0x1C,
                        0x1C, 0x29, 0x38, 0x81, 0xF2, 0xF5, 0xF3, 0x22, 0x38, 0x82, 0xCE, 0xEF, 0xEF, 0xEF, 0xF1, 0xF6, 0x5D, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF6, 0xF6, 0x5D, 0x28, 0x1C, 0x1C, 0x1C, 0x1C, 0xF3, 0xF2, 0xF2, 0xBA, 0x3F, 0x1C, 0x1C, 0x1C, 0xF0, 0xEA, 0xEA, 0xD4, 0xBC, 0x56, 0x2E, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2E, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x34, 0x86, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x23, 0x84, 0xED, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x46, 0xE8, 0xE6, 0x49, 0xC0, 0xEC, 0xE6, 0xE6, 0xE7, 0xE7, 0xE9, 0xE8, 0xE6, 0xDE, 0xDF, 0xDF, 0xDF, 0xDE, 0xDF, 0xE6, 0xE0, 0xDF, 0xD8, 0xD1, 0xCC, 0xC5, 0xBE, 0xDE, 0xE0, 0xD8, 0xC5, 0xBE, 0xB8, 0xB8, 0xB1, 0xE9, 0xDB, 0xCF, 0xBF, 0xBB, 0xA8, 0x67, 0x38, 0xD1, 0xCD, 0xBF, 0xBB, 0xB7, 0xA8, 0xA7,
                        0x91, 0xB8, 0xBB, 0xBB, 0xB7, 0xA7, 0xA2, 0xA0, 0x9A, 0xA8, 0xA7, 0x9F, 0xA2, 0xA0, 0x99, 0x89, 0x91, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3E, 0x23, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x84, 0x38, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x84, 0x5C, 0x2D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1D, 0x3E, 0xC6, 0xEB, 0xDE, 0x1C, 0x1C, 0x22, 0x2E, 0xB3, 0xEB, 0xE0, 0xE0, 0x1C, 0x1C, 0x22, 0x38, 0xE8, 0xEB, 0xE0, 0xDE, 0x1C, 0x1C, 0x1C, 0x31, 0xD2, 0xE5,
                        0xDD, 0xD7, 0xE0, 0xD8, 0xD1, 0xC5, 0xBE, 0xB8, 0xB1, 0xA8, 0xDE, 0xD7, 0xCB, 0xBE, 0xB8, 0xB1, 0xA8, 0xA7, 0xDD, 0xDC, 0xE4, 0xC2, 0xB7, 0xB7, 0xA7, 0xA0, 0xE4, 0xAD, 0xAD, 0xC9, 0xA4, 0xAF, 0xA2, 0x99, 0x9F, 0xA0, 0x99, 0x93, 0x96, 0x94, 0x91, 0x86, 0xA0, 0x95, 0x94, 0x91, 0x86, 0x84, 0x80, 0x87, 0x95, 0x96, 0x91, 0x84, 0x82, 0x81, 0x7C, 0x77, 0x89, 0x91, 0x86, 0x71, 0x72, 0x42, 0x4C, 0x73, 0x87, 0x7F, 0x3F, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x7F, 0x7D, 0x6B, 0x31, 0x22,
                        0x1C, 0x1C, 0x1C, 0x7D, 0x74, 0x6A, 0x3F, 0x27, 0x1C, 0x1C, 0x1C, 0x74, 0x6A, 0x68, 0x51, 0x2F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x31, 0xBB, 0xD8, 0xCC, 0xDC, 0x1C, 0x1C, 0x1C, 0x38, 0xB7, 0xBE, 0xCC, 0xC9, 0x1C, 0x1D, 0x23, 0x3E, 0xA2, 0xBD, 0xC5, 0xC9, 0x1C, 0x1F, 0x23, 0x3E, 0xA2, 0xB1, 0xB8, 0xC9, 0xAC, 0x33, 0x41, 0x45, 0x72, 0xAE, 0x99, 0x93, 0x3D, 0x4F, 0x30, 0x41, 0x42, 0xA2, 0x90, 0x94, 0x32, 0x4F, 0x4F, 0x40, 0x42, 0xA4, 0x83, 0x91, 0xF4, 0x4F, 0x4F, 0x41,
                        0x42, 0x99, 0x91, 0x86, 0x94, 0x86, 0x71, 0x5E, 0x3D, 0x3B, 0x3C, 0x54, 0x86, 0x86, 0x65, 0x3C, 0x52, 0x4F, 0x41, 0x44, 0x84, 0x80, 0x65, 0x33, 0x30, 0x30, 0x48, 0x3C, 0x82, 0x80, 0x64, 0x43, 0x30, 0x30, 0x48, 0x3C, 0x6B, 0x69, 0x5B, 0x5B, 0x2F, 0x1C, 0x1C, 0x1C, 0x6B, 0x68, 0x5B, 0x5B, 0x2F, 0x1C, 0x1C, 0x1C, 0x6C, 0x5B, 0x5B, 0x3F, 0x2D, 0x1C, 0x1C, 0x1C, 0x6B, 0x5B, 0x68, 0x59, 0x38, 0x34, 0x26, 0x1C, 0x1C, 0x22, 0x22, 0x34, 0x83, 0x9E, 0xA8, 0xA5, 0x1C, 0x1C, 0x1C,
                        0x26, 0x49, 0x8F, 0x92, 0x9C, 0x1C, 0x1C, 0x1C, 0x19, 0x12, 0x39, 0x92, 0x8D, 0x1C, 0x1C, 0x1F, 0x0D, 0x05, 0x05, 0x39, 0x6E, 0x45, 0x40, 0x48, 0x3C, 0x65, 0x83, 0x85, 0x80, 0x5E, 0x45, 0x3D, 0x42, 0x64, 0x4E, 0x86, 0x4C, 0x9C, 0xA5, 0x72, 0x78, 0x16, 0x04, 0x04, 0x04, 0x8C, 0x9D, 0x9D, 0x8E, 0x78, 0x16, 0x04, 0x04, 0x82, 0x7C, 0x4E, 0x3B, 0x4F, 0x30, 0x40, 0x44, 0x16, 0x54, 0x79, 0x32, 0x41, 0x40, 0x3B, 0x55, 0x04, 0x0C, 0x63, 0x55, 0x5D, 0x5D, 0x55, 0x6A, 0x0C, 0x4C,
                        0x63, 0x6B, 0x6C, 0x6D, 0x76, 0xA3, 0x6A, 0x68, 0x88, 0xB2, 0x93, 0x7B, 0x56, 0x34, 0x66, 0x88, 0xC1, 0xE7, 0xE1, 0xE3, 0xC6, 0x56, 0x7D, 0xC0, 0xE1, 0xE2, 0xE7, 0xDA, 0xC6, 0x98, 0xC1, 0xD3, 0xD9, 0xD9, 0xD3, 0xD2, 0xA9, 0x88, 0x1C, 0x1C, 0x1F, 0x15, 0x05, 0x05, 0x05, 0x06, 0x1C, 0x1C, 0x1D, 0x1A, 0x15, 0x0B, 0x05, 0x03, 0x1C, 0x1C, 0x1C, 0x1C, 0x14, 0x08, 0x06, 0x06, 0x1C, 0x1C, 0x1C, 0x1C, 0x1A, 0x14, 0x10, 0x10, 0x0A, 0x17, 0x39, 0x83, 0x83, 0x83, 0x71, 0x4E, 0x01,
                        0x03, 0x17, 0xB9, 0xA9, 0x97, 0x86, 0x87, 0x03, 0x0E, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x11, 0xD0, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x80, 0x7F, 0x76, 0x74, 0x74, 0x88, 0x98, 0x9B, 0x87, 0x81, 0x7F, 0x73, 0x73, 0x75, 0x88, 0x88, 0x7C, 0x7F, 0x76, 0x6B, 0x69, 0x69, 0x4A, 0x0F, 0x7C, 0x7F, 0x76, 0x6B, 0x62, 0x68, 0x3F, 0x14, 0xA9, 0xB2, 0xB9, 0xB3, 0xA9, 0xB3, 0x98, 0x76, 0x75, 0x7C, 0x81, 0x98, 0x87, 0x81, 0x77, 0x76, 0x13, 0x59, 0x66, 0x74, 0x74, 0x76, 0x76, 0x50,
                        0x1A, 0x2F, 0x35, 0x35, 0x47, 0x61, 0x50, 0x34, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2A, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x22, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x36, 0xFA, 0xFA, 0x2B, 0x1C, 0x1C, 0x1C, 0x1C, 0xF9, 0xF8, 0xFB, 0xFE, 0x20, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x36, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2A, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1E, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xFA, 0xFA, 0xFC, 0xFD, 0x2B, 0x1C, 0x1C, 0x1C, 0xF9, 0xFA, 0xFC, 0xFE, 0x21, 0x1C, 0x1C, 0x1C, 0x43, 0xFB, 0xFD, 0x40, 0x1E, 0x1C, 0x1C, 0x1C, 0xF4, 0x1C, 0x24, 0x24, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1D, 0x35, 0xF4, 0x1C, 0x1C, 0x1C, 0x1C, 0x28, 0x3F, 0xF4, 0xF6, 0x1C, 0x1C, 0x29, 0x38,
                        0x81, 0xF2, 0xF5, 0xF3, 0x22, 0x38, 0x82, 0xCE, 0xEF, 0xEF, 0xEF, 0xF1, 0xF6, 0x5D, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF6, 0xF6, 0x5D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0xF3, 0xF2, 0xF2, 0xBA, 0x3F, 0x1C, 0x1C, 0x1C, 0xF0, 0xEA, 0xEA, 0xD4, 0xBC, 0x56, 0x2E, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
                        0x1C, 0x1C, 0x1C, 0x1C, 0x2E, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x34, 0x86, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x23, 0x84, 0xED, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x46, 0xE8, 0xE6, 0x49, 0xC0, 0xEC, 0xE6, 0xE6, 0xE7, 0xE7, 0xE9, 0xE8, 0xE6, 0xDE, 0xDF, 0xDF, 0xDF, 0xDE, 0xDF, 0xE6, 0xE0, 0xDF, 0xD8, 0xD1, 0xCC, 0xC5, 0xBE, 0xDE, 0xE0, 0xD8, 0xC5, 0xBE, 0xB8, 0xB8, 0xB1, 0xE9, 0xDB, 0xCF, 0xBF, 0xBB, 0xA8, 0x67, 0x38, 0xD1, 0xCD, 0xBF, 0xBB, 0xB7, 0xA8, 0xA7, 0x91, 0xB8, 0xBB,
                        0xBB, 0xB7, 0xA7, 0xA2, 0xA0, 0x9A, 0xA8, 0xA7, 0x9F, 0xA2, 0xA0, 0x99, 0x89, 0x91, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x3E, 0x23, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x84, 0x38, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x84, 0x5C, 0x2D, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1D, 0x3E, 0xC6, 0xEB, 0xDE, 0x1C, 0x1C, 0x22, 0x2E, 0xB3, 0xEB, 0xE0, 0xE0, 0x1C, 0x1C, 0x22, 0x38, 0xE8, 0xEB, 0xE0, 0xDE, 0x1C, 0x1C, 0x1C, 0x31, 0xD2, 0xE5, 0xDD, 0xD7, 0xE0,
                        0xD8, 0xD1, 0xC5, 0xBE, 0xB8, 0xB1, 0xA8, 0xDE, 0xD7, 0xCB, 0xBE, 0xB8, 0xB1, 0xA8, 0xA7, 0xDD, 0xDC, 0xE4, 0xC2, 0xB7, 0xB7, 0xA7, 0xA0, 0xE4, 0xAD, 0xAD, 0x5E, 0xA4, 0xAF, 0xA2, 0x99, 0x9F, 0xA0, 0x99, 0x93, 0x96, 0x94, 0x91, 0x86, 0xA0, 0x95, 0x94, 0x91, 0x86, 0x84, 0x80, 0x87, 0x95, 0x96, 0x91, 0x84, 0x82, 0x81, 0x7C, 0x77, 0x89, 0x91, 0x86, 0x71, 0x72, 0x42, 0x4C, 0x73, 0x87, 0x7F, 0x3F, 0x22, 0x1C, 0x1C, 0x1C, 0x1C, 0x7F, 0x7D, 0x6B, 0x31, 0x22, 0x1C, 0x1C, 0x1C,
                        0x7D, 0x74, 0x6A, 0x3F, 0x27, 0x1C, 0x1C, 0x1C, 0x74, 0x6A, 0x68, 0x51, 0x2F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x31, 0xBB, 0xD8, 0xCC, 0xDC, 0x1C, 0x1C, 0x1C, 0x38, 0xB7, 0xBE, 0xCC, 0xC9, 0x1C, 0x1D, 0x23, 0x3E, 0xA2, 0xBD, 0xC5, 0xC9, 0x1C, 0x1F, 0x23, 0x3E, 0xA2, 0xB1, 0xB8, 0xC9, 0xAC, 0x33, 0x41, 0x45, 0x72, 0xAE, 0x99, 0x93, 0x3D, 0x4F, 0x30, 0x41, 0x42, 0xA2, 0x90, 0x94, 0x32, 0x4F, 0x4F, 0x40, 0x42, 0xA4, 0x83, 0x91, 0xF4, 0x4F, 0x4F, 0x41, 0x42, 0x99, 0x91,
                        0x86, 0x94, 0x86, 0x71, 0x5E, 0x3D, 0x3B, 0x3C, 0x54, 0x86, 0x86, 0x65, 0x3C, 0x52, 0x4F, 0x41, 0x44, 0x84, 0x80, 0x65, 0x33, 0x30, 0x30, 0x48, 0x3C, 0x82, 0x80, 0x64, 0x43, 0x30, 0x30, 0x48, 0x3C, 0x6B, 0x69, 0x5B, 0x5B, 0x2F, 0x1C, 0x1C, 0x1C, 0x6B, 0x68, 0x5B, 0x5B, 0x2F, 0x1C, 0x1C, 0x1C, 0x6C, 0x5B, 0x5B, 0x3F, 0x2D, 0x1C, 0x1C, 0x1C, 0x6B, 0x5B, 0x5B, 0x3F, 0x2D, 0x1C, 0x1C, 0x1C, 0x1C, 0x22, 0x22, 0x34, 0x83, 0x9E, 0xA8, 0xA5, 0x1C, 0x1C, 0x1C, 0x26, 0x49, 0x8F,
                        0x92, 0x9C, 0x1C, 0x1C, 0x1C, 0x19, 0x12, 0x39, 0x92, 0x8D, 0x1C, 0x1C, 0x1F, 0x0D, 0x05, 0x05, 0x39, 0x6E, 0x45, 0x40, 0x48, 0x3C, 0x65, 0x83, 0x85, 0x80, 0x5E, 0x45, 0x3D, 0x42, 0x64, 0x4E, 0x86, 0x4C, 0x9C, 0xA5, 0x72, 0x78, 0x16, 0x04, 0x04, 0x04, 0x8C, 0x9D, 0x9D, 0x8E, 0x78, 0x16, 0x04, 0x04, 0x82, 0x7C, 0x4E, 0x3B, 0x4F, 0x30, 0x40, 0x44, 0x16, 0x54, 0x79, 0x32, 0x41, 0x40, 0x3B, 0x55, 0x04, 0x0C, 0x63, 0x55, 0x5D, 0x5D, 0x55, 0x62, 0x0C, 0x4C, 0x63, 0x6B, 0x6C,
                        0x6D, 0x6C, 0x74, 0x6A, 0x5B, 0x68, 0x3F, 0x2D, 0x23, 0x23, 0x1C, 0x66, 0x68, 0x6B, 0x5A, 0x57, 0x56, 0x3E, 0x26, 0x66, 0x73, 0x84, 0xAF, 0xD2, 0xD3, 0x83, 0x46, 0xA3, 0xB3, 0xD2, 0xE2, 0xE6, 0xE3, 0xDA, 0x7B, 0x1C, 0x1C, 0x1F, 0x15, 0x05, 0x05, 0x05, 0x06, 0x1C, 0x1C, 0x1D, 0x1A, 0x15, 0x0B, 0x05, 0x03, 0x1C, 0x1C, 0x1C, 0x1C, 0x14, 0x08, 0x06, 0x06, 0x1C, 0x1C, 0x1C, 0x1C, 0x1A, 0x14, 0x10, 0x10, 0x0A, 0x17, 0x39, 0x83, 0x83, 0x83, 0x71, 0x4E, 0x01, 0x03, 0x17, 0xB9,
                        0xA9, 0x97, 0x86, 0x87, 0x03, 0x0E, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x11, 0xD0, 0xD3, 0xC0, 0xB2, 0xA1, 0x87, 0x81, 0x80, 0x7F, 0x76, 0x73, 0x73, 0x88, 0x98, 0x9B, 0x87, 0x81, 0x7F, 0x73, 0x73, 0x88, 0x81, 0x87, 0x7C, 0x7F, 0x76, 0x6C, 0x69, 0x6A, 0x6C, 0x4B, 0x7C, 0x7F, 0x76, 0x6B, 0x62, 0x68, 0x3F, 0x3F, 0xB9, 0xCE, 0xD9, 0xE1, 0xE1, 0xDB, 0xCE, 0xB4, 0xA1, 0x97, 0xB9, 0xC0, 0xC0, 0xCE, 0xB2, 0x88, 0x63, 0x77, 0x87, 0x97, 0x86, 0x97, 0x7C, 0x74, 0x3F, 0x51, 0x6C,
                        0x7D, 0x75, 0x75, 0x7D, 0x61, 0xA5, 0x09, 0xFC, 0x3F, 0xF0, 0x5E, 0xF0, 0xDF, 0xD1, 0x76, 0xF2, 0x1F, 0xE5, 0x5E, 0xD4, 0xBB, 0xD5, 0x3C, 0xD1, 0x3B, 0xD9, 0xBD, 0xD1, 0x9B, 0xC9, 0xB6, 0xC5, 0x39, 0xD6, 0x1F, 0xB5, 0x37, 0xA8, 0xB8, 0xC9, 0xDD, 0xC1, 0xBA, 0xB1, 0x75, 0x98, 0xB6, 0xA0, 0xF7, 0xBD, 0xF7, 0xCA, 0x5E, 0xB1, 0x96, 0x90, 0xD5, 0x88, 0x95, 0x84, 0x94, 0x80, 0x94, 0x80, 0x94, 0x80, 0x94, 0x80, 0x94, 0x84, 0x91, 0x88, 0xB0, 0x80, 0x94, 0x80, 0x94, 0x80, 0x94,
                        0x80, 0x93, 0x80, 0xB4, 0x80, 0x94, 0x80, 0xB4, 0x84, 0xB4, 0x88, 0xD2, 0x94, 0xF0, 0xD2, 0xDF, 0x84, 0xB4, 0x84, 0xD5, 0x84, 0xD4, 0x80, 0x23, 0x88, 0xF4, 0xBA, 0x14, 0xB5, 0xD0, 0x89, 0x15, 0x8D, 0x13, 0x9D, 0x2F, 0xB1, 0xF5, 0x8D, 0x35, 0xBE, 0x7C, 0xC2, 0x9E, 0xAD, 0x90, 0xBE, 0x35, 0xC6, 0x76, 0x91, 0x56, 0x95, 0x53, 0x94, 0xEA, 0xA1, 0x2C, 0xCE, 0xBA, 0xA9, 0x6D, 0xB6, 0x16, 0xD2, 0xD8, 0x95, 0x97, 0x95, 0x74, 0x8C, 0xA8, 0x99, 0xB8, 0xA1, 0x93, 0xA5, 0xD5, 0xB2,
                        0x37, 0xC6, 0xFF, 0xBA, 0x59, 0x80, 0x45, 0x99, 0xB6, 0x99, 0x73, 0x88, 0x87, 0xBA, 0xBE, 0xA9, 0xF5, 0xA5, 0xD3, 0x9D, 0xD8, 0x9D, 0xF9, 0x9D, 0xD7, 0x99, 0x94, 0x9D, 0xF8, 0x99, 0x71, 0x9D, 0xD5, 0xB1, 0xF3, 0xDB, 0x5E, 0xA2, 0x3A, 0xA2, 0x18, 0x9D, 0xD5, 0x9D, 0x92, 0xA1, 0xD4, 0xBE, 0xBB, 0xC6, 0xDC, 0x99, 0x92, 0xAA, 0x7B, 0x99, 0x91, 0x9D, 0xB2, 0x9D, 0xB3, 0x9D, 0xD3, 0xA1, 0xD4, 0xA5, 0xF5, 0xB6, 0xFF, 0xB6, 0xBD, 0xAE, 0x58, 0xB6, 0x9A, 0xCF, 0x1D, 0xA1, 0xF5,
                        0xA1, 0xF4, 0xA6, 0x16, 0xA2, 0x15, 0xA6, 0x36, 0xB6, 0xBB, 0xAA, 0x36, 0xBE, 0xFC, 0xAA, 0x9B, 0xA6, 0x57, 0xA2, 0x15, 0xAE, 0x9B, 0xA6, 0x37, 0xAA, 0x79, 0xAA, 0x58, 0xA6, 0x58, 0xAE, 0xDC, 0xAA, 0x79, 0xAE, 0x9A, 0xAA, 0x9A, 0xAA, 0x78, 0xA6, 0x36, 0xB2, 0xDC, 0xB6, 0xDC, 0xAA, 0xBB, 0xB3, 0x1F, 0xB3, 0x3F, 0xB2, 0xFD, 0xB2, 0xFE, 0xB2, 0xDD, 0xAE, 0xBB, 0xB7, 0x3F, 0xB2, 0xDC, 0xAE, 0xBB, 0xB2, 0xFD, 0xB2, 0xDC, 0xAE, 0x9A, 0xAA, 0x78, 0xB2, 0xFD, 0xB2, 0xDC, 0xAE,
                        0xBA, 0xBF, 0x5F, 0xAF, 0x1E, 0xB7, 0x3F, 0xB7, 0x1E, 0xB6, 0xFD, 0xAE, 0x99, 0xB7, 0x1E, 0xAA, 0x57, 0xBB, 0x1D, 0xD3, 0x7F, 0xA6, 0xBA, 0xB7, 0x3E, 0xBB, 0x3F, 0xB2, 0xDB, 0xBA, 0xB8, 0xBE, 0xDA, 0xDF, 0x5B, 0xEB, 0x9E, 0xB3, 0x1D, 0xB7, 0x3D, 0xB2, 0xFC, 0xBB, 0x5F, 0xB2, 0xDA, 0xB2, 0xFB, 0xB2, 0xB9, 0xBF, 0x3E, 0xB7, 0x5F, 0xBB, 0x5E, 0xBF, 0x7F, 0xB7, 0x1C, 0xB2, 0x76, 0xBB, 0x7F, 0xBA, 0xFA, 0xBB, 0x7F, 0xBF, 0x9F, 0xBF, 0x7F, 0xB7, 0x1C, 0xB7, 0x1B, 0xC3, 0x7F,
                        0xAA, 0x33, 0xC7, 0x9F, 0xBF, 0x9F, 0xBB, 0x3C, 0xB6, 0xF9, 0xAA, 0x54, 0xDB, 0xBF, 0xBB, 0x9F, 0xBF, 0x9F, 0xBF, 0xBF, 0xBF, 0x9F, 0xBB, 0x5D, 0xC3, 0x9F, 0xC3, 0x9E, 0xBF, 0xBF, 0xBF, 0x9E, 0xBF, 0x7E, 0xC3, 0x7D, 0xBA, 0xD7, 0xBF, 0xBF, 0xBF, 0xBF, 0xC3, 0xBF, 0xBF, 0x9E, 0xC3, 0xBE, 0xC3, 0xBF, 0xCB, 0xDF, 0xC3, 0xDF, 0xC3, 0xDF, 0xC3, 0xDF, 0xC3, 0xDF, 0xC3, 0xBF, 0xC3, 0xDF, 0xC3, 0xBF, 0xCF, 0xDF, 0xC3, 0xDF, 0xC3, 0xDF, 0xC3, 0xDF, 0xC3, 0xBE, 0xC7, 0xDF, 0xC7,
                        0x9D, 0xC3, 0xDF, 0xC7, 0xDF, 0xC7, 0xDF, 0xC3, 0xDE, 0xCB, 0xDE, 0xCB, 0xBD, 0xCB, 0xDD, 0xCB, 0x59, 0xCF, 0x9A, 0xC2, 0x92, 0xD3, 0xDA, 0xD7, 0x53, 0xBE, 0x0B, 0xFF, 0xC9, 0xD6, 0x8A, 0xF7, 0x47, 0xEA, 0xA5, 0xDA, 0x23, 0xC9, 0xA3, 0xB5, 0x66, 0x80, 0x00
                    };
                    List<byte> byteList = new List<byte>();
                    List<byte[]> chaoList = new List<byte[]>();
                    byteList.AddRange(loadedSave.Take(0x3AA4).ToArray());
                    chaoList = SplitByteArray(loadedSave.Skip(0x3AA4).Take(0xC000).ToArray(), 0x800);

                    foreach (byte[] chao in chaoList)
                    {
                        if (isPC) { byteList.AddRange(ChaoSave.ByteSwapChao(chao)); }
                        else { byteList.AddRange(chao); }
                    }

                    byteList.AddRange(loadedSave.Skip(0xFAA4).Take(0x55C).ToArray());

                    if (isPC) { byteList = ChaoSave.ByteSwapChaoWorld(byteList.ToArray()).ToList(); }

                    byteList.InsertRange(0x00, header);
                    byteList.RemoveRange(0x80, 0x3000);
                    byteList.InsertRange(0x80, header2);
                    byte[] splitForChecksum = byteList.Skip(0x3080).ToArray();
                    Checksum.WriteChaoChecksum(splitForChecksum, true);
                    byteList.RemoveRange(0x3080, byteList.Count - 0x3080);
                    byteList.AddRange(splitForChecksum.ToList());

                    string gcFileName = Path.GetDirectoryName(loadedFile) + @"/SA2CHAO.gci";
                    int index = 1;
                    while (true)
                    {
                        if (!File.Exists(gcFileName))
                        {
                            break;
                        }
                        else
                        {
                            gcFileName = Path.GetDirectoryName(loadedFile) + @"/SA2CHAO" + index + ".gci";
                            index++;
                        }
                    }
                    File.WriteAllBytes(gcFileName, byteList.ToArray());
                    MessageBox.Show("Chao save file has been saved to " + gcFileName + "!", "Success", MessageBoxButtons.OK, MessageBoxIcon.None);
                }
                catch
                {
                    MessageBox.Show("There was a problem saving the chao save file!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            else
            {
                try
                {
                    uc_Main uc = (uc_Main)tc_Main.Controls[tc_Main.SelectedIndex].Controls[0];
                    int gcFileNo = uc.gcFileNo;
                    string gcFileNoString = gcFileNo.ToString("00");
                    byte[] gcFileNoBytes = Encoding.UTF8.GetBytes(gcFileNoString);
                    byte[] header = new byte[] { 0x47, 0x53, 0x4E, 0x45, 0x38, 0x50, 0xFF, 0x06, 0x53, 0x4F, 0x4E, 0x49, 0x43, 0x32, 0x42, 0x5F, 0x5F, 0x53, gcFileNoBytes[0], gcFileNoBytes[1], 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x78, 0x10, 0x34, 0x00, 0x00, 0x00, 0x40, 0x00, 0x0A, 0x00, 0x0F, 0x04, 0x00, 0x00, 0x05, 0x00, 0x03, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00 };
                    byte[] header2 = new byte[]
                    {
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x20, 0x49, 0x70, 0x5B,
                        0x90, 0x00, 0x00, 0x10, 0x00, 0xDA, 0x40, 0xFB, 0x00, 0x00, 0x00, 0x10, 0x00, 0xCA, 0x00, 0xE2, 0x44, 0x00, 0x00, 0x10, 0x00, 0xEA, 0xA0, 0x98, 0xB3, 0x6D, 0xB0, 0xF2, 0xE0, 0xFB, 0x20, 0xFF, 0x20, 0xF6, 0xC0, 0xDE, 0x25, 0xC9, 0xAA,
                        0xC1, 0x6D, 0x94, 0x75, 0x80, 0x1E, 0x80, 0x1F, 0x80, 0x1F, 0x80, 0x1F, 0x80, 0x1B, 0x80, 0x1A, 0x84, 0x18, 0xFF, 0x20, 0xFF, 0x00, 0xFF, 0x00, 0xF6, 0xC0, 0xBD, 0x4D, 0xC5, 0x8B, 0xD1, 0xE8, 0xEA, 0x63, 0x80, 0x1F, 0x80, 0x1F, 0x80,
                        0x1F, 0xBD, 0x6A, 0x84, 0x17, 0x80, 0x19, 0x88, 0x35, 0xFB, 0x00, 0x5B, 0x90, 0x48, 0x60, 0x25, 0x40, 0x6D, 0xB0, 0xF6, 0xC0, 0xC5, 0xE0, 0xE6, 0x80, 0xCD, 0xC8, 0xFF, 0x40, 0xFA, 0xE0, 0xA8, 0xEE, 0x80, 0x1D, 0xFF, 0x40, 0xA8, 0xEE,
                        0x80, 0x1B, 0x80, 0x18, 0xFB, 0x20, 0xFF, 0x20, 0xFF, 0x00, 0xFF, 0x00, 0xB1, 0x0E, 0xA0, 0xB2, 0x9C, 0x93, 0xA0, 0xB2, 0x80, 0x1C, 0x80, 0x1B, 0x80, 0x1B, 0x80, 0x1B, 0x80, 0x18, 0x80, 0x18, 0x80, 0x17, 0x80, 0x17, 0xFF, 0x00, 0x6D,
                        0xB0, 0x48, 0x60, 0x48, 0x60, 0xB1, 0x0E, 0xD5, 0xE6, 0xEE, 0xA0, 0xE2, 0x80, 0x80, 0x1C, 0x80, 0x1A, 0xD1, 0xE6, 0xFF, 0x40, 0x80, 0x16, 0x80, 0x17, 0x84, 0x14, 0xFB, 0x00, 0xF2, 0xC0, 0x6D, 0xB0, 0xFF, 0x00, 0xFE, 0xE0, 0xFE, 0xA0,
                        0xC9, 0x89, 0xC5, 0x8B, 0xC5, 0x8A, 0xEE, 0x82, 0x80, 0x19, 0x80, 0x1A, 0x80, 0x19, 0xE2, 0x63, 0x80, 0x15, 0x80, 0x15, 0x80, 0x14, 0xFF, 0x00, 0x6D, 0xA0, 0x24, 0x30, 0x5A, 0x80, 0xC5, 0x6B, 0xD5, 0xE6, 0xDA, 0x40, 0xEA, 0x80, 0x80,
                        0x1A, 0x80, 0x15, 0xFF, 0x00, 0xFE, 0xE0, 0x80, 0x14, 0x80, 0x14, 0xF2, 0xA2, 0xF6, 0xC0, 0xFB, 0x00, 0xF6, 0xE0, 0xFF, 0x20, 0xFF, 0x00, 0xD5, 0xC6, 0xC9, 0xA9, 0xC9, 0xA9, 0xDE, 0x24, 0x80, 0x14, 0x80, 0x19, 0x80, 0x19, 0xC9, 0xA7,
                        0x80, 0x13, 0x80, 0x13, 0x80, 0x13, 0xE6, 0x63, 0x6C, 0xA0, 0xFB, 0x20, 0xF6, 0xE0, 0xFB, 0x00, 0xFB, 0x00, 0xDE, 0x04, 0xB9, 0x69, 0xBD, 0x68, 0xFF, 0x60, 0xAD, 0x0B, 0x80, 0x17, 0x80, 0x16, 0xFF, 0x60, 0xA4, 0xCB, 0x80, 0x13, 0x80,
                        0x11, 0xFE, 0xE0, 0xFF, 0x00, 0x6C, 0xA0, 0x24, 0x30, 0xB9, 0x49, 0xE6, 0x43, 0xC9, 0xE0, 0xA0, 0xE0, 0x80, 0x17, 0xD1, 0xE6, 0xE2, 0xA0, 0xFF, 0x00, 0x80, 0x12, 0xE6, 0x63, 0xFF, 0x60, 0xA4, 0xEA, 0x00, 0x00, 0x5B, 0x90, 0xF2, 0xE0,
                        0xFB, 0x00, 0xEE, 0xC0, 0xD5, 0xE5, 0xB9, 0x2A, 0xA8, 0xEC, 0xB5, 0x29, 0x80, 0x14, 0x80, 0x14, 0x80, 0x13, 0x80, 0x12, 0x80, 0x10, 0x80, 0x0F, 0x80, 0x0F, 0xFF, 0x00, 0xFE, 0xE0, 0xFB, 0x00, 0xFF, 0x00, 0xA0, 0xAD, 0xA0, 0xAD, 0xA4,
                        0xCD, 0xD1, 0xC5, 0x80, 0x13, 0x80, 0x13, 0x80, 0x12, 0xDE, 0x23, 0x80, 0x0F, 0x80, 0x10, 0x94, 0x6B, 0xFF, 0x20, 0x6B, 0x90, 0x48, 0x60, 0x37, 0x60, 0x23, 0x33, 0xFE, 0xE0, 0xDA, 0x20, 0x61, 0x10, 0x67, 0x78, 0xFF, 0x00, 0x80, 0x00,
                        0x80, 0x00, 0x51, 0x11, 0xE6, 0x80, 0x80, 0x00, 0x80, 0x00, 0x50, 0x00, 0x23, 0x44, 0x12, 0x22, 0x13, 0x33, 0x00, 0x00, 0xD2, 0x95, 0xE3, 0x18, 0xDF, 0x18, 0x10, 0x00, 0x98, 0xE7, 0xB1, 0x8C, 0xA5, 0x29, 0x80, 0x00, 0x60, 0x00, 0x80,
                        0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x52, 0x00, 0xBC, 0xC0, 0xC1, 0x00, 0xC0, 0xE0, 0xA0, 0x00, 0xFF, 0x20, 0xFF, 0x40, 0xFF, 0x20, 0xB4, 0x80, 0xFE, 0xE0, 0xFE, 0xC0, 0xFE, 0xC0, 0x10, 0x00,
                        0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0xC0, 0xE0, 0xC0, 0xE0, 0xC0, 0xE0, 0xC0, 0xE0, 0xFF, 0x20, 0xFF, 0x20, 0xFF, 0x20, 0xFF, 0x20, 0xFE, 0xC0, 0xFE, 0xC0, 0xFE, 0xC0, 0xFE, 0xC0, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0xC0,
                        0xE0, 0xC1, 0x00, 0xC0, 0xE0, 0xB8, 0xA0, 0xFF, 0x20, 0xFF, 0x20, 0xFF, 0x20, 0xFF, 0x20, 0xFE, 0xC0, 0xFE, 0xC0, 0xFE, 0xC0, 0xFE, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0xF6, 0xC0, 0xC9, 0x40, 0x9C, 0x00, 0x51, 0x00, 0xFE, 0xE0, 0xFF, 0x00, 0xC9, 0x20, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x30, 0xF6, 0xE1, 0x80, 0x17, 0x00, 0x00, 0x58, 0x60, 0xF2, 0xE1, 0x80, 0x15, 0x00, 0x00, 0x40,
                        0x00, 0xF7, 0x20, 0xA5, 0x0D, 0x00, 0x00, 0x40, 0x00, 0xE6, 0xA0, 0xFF, 0xA0, 0x80, 0x18, 0x80, 0x18, 0x84, 0x35, 0xEA, 0xA3, 0x80, 0x15, 0x80, 0x15, 0x80, 0x14, 0x90, 0x70, 0x80, 0x14, 0x80, 0x13, 0x80, 0x12, 0x80, 0x12, 0xEA, 0xE3,
                        0xE2, 0xA4, 0xD6, 0x86, 0x8C, 0x6D, 0xFF, 0x40, 0xFB, 0x20, 0xFB, 0x20, 0xFF, 0x80, 0xA4, 0xED, 0xB9, 0x8A, 0xEE, 0xC2, 0xFB, 0x20, 0x80, 0x12, 0x80, 0x13, 0x8C, 0x6F, 0xE2, 0xA4, 0x80, 0x0E, 0x80, 0x0E, 0x88, 0x4E, 0xDE, 0x84, 0xB5,
                        0x4A, 0x80, 0x17, 0x80, 0x15, 0x80, 0x16, 0x80, 0x12, 0x80, 0x13, 0x80, 0x13, 0x90, 0x6F, 0x80, 0x10, 0x80, 0x10, 0x80, 0x0E, 0xF3, 0x20, 0x80, 0x0D, 0x80, 0x0D, 0xA5, 0x34, 0xD6, 0x68, 0x84, 0x32, 0xDA, 0x46, 0xF3, 0x02, 0xDA, 0x47,
                        0xE6, 0xA2, 0xFF, 0xA0, 0xFF, 0x80, 0xFF, 0x80, 0xFF, 0xC0, 0xFF, 0x80, 0xFF, 0xC0, 0xC5, 0xE9, 0xFF, 0xA0, 0xFF, 0xA0, 0xC5, 0xE8, 0x80, 0x0D, 0x80, 0x14, 0x80, 0x13, 0x80, 0x14, 0xDE, 0x44, 0x8C, 0x50, 0x80, 0x11, 0x80, 0x11, 0xDE,
                        0x44, 0x80, 0x0F, 0x80, 0x0D, 0x80, 0x0E, 0xDE, 0x84, 0x80, 0x0B, 0x80, 0x0B, 0x8C, 0x6B, 0xF3, 0x22, 0xCD, 0xE6, 0x80, 0x13, 0x80, 0x11, 0x80, 0x11, 0xB9, 0x68, 0x80, 0x11, 0x80, 0x0F, 0x80, 0x0F, 0x9C, 0xCA, 0x80, 0x0D, 0x80, 0x0C,
                        0x98, 0xAB, 0x88, 0x4A, 0x80, 0x0A, 0x80, 0x0A, 0xD2, 0x45, 0x80, 0x11, 0x80, 0x12, 0xB1, 0x4A, 0xDE, 0x64, 0x80, 0x0E, 0x80, 0x0E, 0x84, 0x2E, 0xA9, 0x0A, 0x84, 0x2B, 0x80, 0x0B, 0x80, 0x0B, 0x80, 0x0C, 0xA4, 0xE7, 0x80, 0x09, 0x80,
                        0x08, 0x80, 0x08, 0x80, 0x11, 0x80, 0x10, 0x84, 0x0F, 0xFB, 0x00, 0x80, 0x0E, 0x80, 0x0E, 0x94, 0x8C, 0xFF, 0x80, 0x80, 0x0A, 0x80, 0x0B, 0xAD, 0x28, 0xFF, 0xE0, 0x80, 0x07, 0x80, 0x08, 0xB5, 0x85, 0xFF, 0xE0, 0xFF, 0x40, 0x90, 0x6D,
                        0x80, 0x0F, 0x80, 0x0E, 0xF6, 0xE1, 0x80, 0x0C, 0x80, 0x0C, 0x80, 0x0C, 0xDA, 0x84, 0x80, 0x0A, 0x80, 0x08, 0x80, 0x08, 0xC9, 0xE6, 0x80, 0x08, 0x80, 0x05, 0x80, 0x06, 0x80, 0x0E, 0xF6, 0xE1, 0xC5, 0xC6, 0x80, 0x0F, 0x88, 0x4B, 0xF3,
                        0x02, 0x90, 0x6A, 0x80, 0x0B, 0xA0, 0xC8, 0xF3, 0x02, 0x80, 0x09, 0x80, 0x08, 0xB1, 0x67, 0xFB, 0x41, 0x80, 0x08, 0x88, 0x48, 0x80, 0x0D, 0x80, 0x0C, 0x80, 0x0C, 0xC9, 0xE6, 0x80, 0x0A, 0x88, 0x2A, 0xE6, 0xA2, 0xFF, 0xA0, 0x84, 0x4B,
                        0xD2, 0x25, 0xFF, 0xE0, 0xFF, 0xA0, 0xC2, 0x34, 0xA9, 0x2B, 0xDA, 0x84, 0xEB, 0x03, 0xEE, 0xE1, 0xD6, 0x24, 0xE6, 0x82, 0xFF, 0x40, 0xFF, 0x60, 0xFF, 0x80, 0xFF, 0x60, 0xF2, 0xC0, 0xFF, 0x80, 0xF3, 0x02, 0xFF, 0x60, 0xF6, 0xE0, 0xB9,
                        0x87, 0xA9, 0x28, 0xFF, 0xA0, 0xBD, 0x60, 0x9C, 0xC0, 0x80, 0x00, 0x80, 0x00, 0x50, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x98, 0x80, 0x80, 0x00, 0x60, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00,
                        0x60, 0x00, 0x80, 0x00, 0x80, 0x00, 0x8C, 0x00, 0x20, 0x00, 0x40, 0x00, 0x40, 0x00, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0xC9, 0x00, 0xFE, 0xE0, 0xFE, 0xA0, 0xFE,
                        0xA0, 0xC0, 0xC0, 0xE1, 0x80, 0xDD, 0x60, 0xDD, 0x60, 0x8C, 0x00, 0x90, 0x00, 0x94, 0x00, 0x9C, 0x00, 0x9C, 0x00, 0xC0, 0x80, 0xE5, 0x40, 0xF9, 0xA0, 0xFE, 0xA0, 0xFE, 0xA0, 0xFE, 0xA0, 0xFE, 0xA0, 0xD9, 0x60, 0xD9, 0x60, 0xD9, 0x60,
                        0xD9, 0x60, 0xA4, 0x00, 0xA8, 0x00, 0xA8, 0x00, 0xA8, 0x00, 0xFD, 0xE0, 0xFD, 0xE0, 0xFD, 0xE0, 0xFD, 0xE0, 0xFE, 0xA0, 0xFE, 0x80, 0xFE, 0x80, 0xFE, 0x60, 0xD9, 0x60, 0xE9, 0xC0, 0xFE, 0x40, 0xFE, 0x40, 0xA0, 0x00, 0xC4, 0xC0, 0xFE,
                        0x20, 0xFE, 0x00, 0xFD, 0xE0, 0xFD, 0xE0, 0xFD, 0xE0, 0xFD, 0xC0, 0xFE, 0x80, 0xFE, 0x80, 0xFE, 0xC0, 0xC0, 0xC0, 0xFE, 0x40, 0xFE, 0x40, 0xFE, 0x80, 0xD1, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0xFE, 0x40, 0xC8, 0xC0, 0xFD, 0xE0, 0xFD, 0xE0,
                        0xFD, 0xC0, 0xAC, 0x20, 0x84, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x84, 0x00, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x10, 0xFB, 0x60, 0xC6, 0x06, 0x00, 0x00, 0x5B, 0x90, 0xE7, 0x04, 0x80, 0x0D, 0x25, 0x40, 0xFF, 0xE0, 0xDA, 0xC5, 0xA9, 0x48, 0x6B, 0x90, 0xD2, 0x20, 0xDA, 0x60, 0xF7,
                        0xA0, 0xC5, 0xE6, 0xCA, 0x26, 0xC1, 0xE6, 0x88, 0x4B, 0x80, 0x0B, 0x80, 0x0B, 0x80, 0x0B, 0x80, 0x0A, 0xA5, 0x28, 0x9C, 0xE8, 0xA1, 0x09, 0xAD, 0x69, 0xF7, 0xA0, 0xF3, 0x80, 0xF3, 0x80, 0xF3, 0x80, 0x80, 0x0B, 0x8C, 0x6F, 0xB5, 0x8F,
                        0xFF, 0xA0, 0x80, 0x09, 0x80, 0x0C, 0xC6, 0x06, 0xFF, 0xE0, 0xBD, 0xE5, 0xDA, 0xE4, 0xF3, 0x20, 0xAD, 0x00, 0xF3, 0x80, 0xE2, 0xC0, 0x90, 0x60, 0x80, 0x00, 0xA0, 0xEA, 0x80, 0x0C, 0xA5, 0x51, 0x88, 0x4D, 0xFB, 0xA0, 0xAD, 0x6E, 0x88,
                        0x4C, 0x80, 0x06, 0xF7, 0x60, 0xFB, 0xA0, 0xD2, 0x83, 0xB9, 0xC5, 0x80, 0x00, 0xB1, 0x20, 0xE2, 0xC0, 0xFB, 0xC0, 0x8C, 0x68, 0x8C, 0x69, 0x80, 0x0B, 0x80, 0x09, 0x80, 0x07, 0x80, 0x07, 0x80, 0x06, 0x80, 0x06, 0xAD, 0x66, 0xA9, 0x46,
                        0xB9, 0xC5, 0xD2, 0x83, 0xFB, 0xC0, 0xF7, 0xA0, 0xEF, 0x60, 0xEB, 0x20, 0x80, 0x08, 0x80, 0x0B, 0xE6, 0xE4, 0xF3, 0x22, 0x80, 0x08, 0xC1, 0xE6, 0xFF, 0xE0, 0xCE, 0x46, 0xEF, 0x63, 0xF3, 0x40, 0xE6, 0xC0, 0xDA, 0xC5, 0xDA, 0x80, 0x80,
                        0x00, 0xC9, 0xE0, 0xEF, 0x60, 0x80, 0x09, 0x80, 0x07, 0x80, 0x08, 0xEF, 0x03, 0x80, 0x08, 0x80, 0x06, 0x80, 0x09, 0xF7, 0x82, 0xB5, 0xA6, 0xB5, 0xA6, 0xC1, 0xE7, 0xFF, 0xE0, 0xEB, 0x40, 0xEF, 0x60, 0xEF, 0x60, 0xEF, 0x20, 0xD6, 0x65,
                        0x80, 0x08, 0x80, 0x06, 0x80, 0x05, 0xFF, 0xE0, 0x90, 0x8A, 0x80, 0x06, 0x80, 0x06, 0xFF, 0xE0, 0xE3, 0x04, 0xB5, 0xA6, 0xB5, 0xA6, 0xC5, 0xA0, 0xEB, 0x20, 0xF3, 0x80, 0xF3, 0x80, 0x88, 0x48, 0x80, 0x07, 0xC1, 0xE5, 0xFF, 0xE0, 0x80,
                        0x08, 0x80, 0x0C, 0xD2, 0x46, 0xFF, 0xE0, 0xB5, 0xA5, 0xBD, 0xE9, 0xF3, 0x43, 0xFF, 0xC0, 0xEF, 0x60, 0xF3, 0x80, 0xEF, 0x00, 0xCD, 0xE0, 0xAD, 0x46, 0x80, 0x06, 0xB1, 0x90, 0x94, 0xAE, 0x98, 0xC6, 0x80, 0x07, 0x8C, 0x6B, 0x80, 0x0C,
                        0xCA, 0x45, 0xB9, 0xC5, 0xB9, 0xE6, 0xBE, 0x07, 0xF3, 0x80, 0xEF, 0x60, 0xEF, 0x60, 0xEF, 0x60, 0xC5, 0xE5, 0xFF, 0xE0, 0xA9, 0x27, 0x80, 0x07, 0xDA, 0x85, 0xFF, 0xE0, 0xFB, 0xA2, 0x94, 0xAA, 0xF7, 0xA2, 0xD2, 0x00, 0xEF, 0x00, 0xFF,
                        0xC1, 0xF3, 0x80, 0x9C, 0xA0, 0x80, 0x00, 0xC1, 0xC0, 0x8C, 0x68, 0x80, 0x07, 0x80, 0x07, 0x80, 0x08, 0x80, 0x08, 0x80, 0x09, 0x80, 0x06, 0x80, 0x06, 0xDE, 0xE4, 0xC6, 0x25, 0xB9, 0xE5, 0xBD, 0xE5, 0xEB, 0x20, 0xEF, 0x60, 0xEF, 0x60,
                        0xF3, 0x80, 0x80, 0x07, 0x84, 0x29, 0xFB, 0x82, 0xDE, 0x60, 0x80, 0x07, 0x80, 0x0B, 0xDA, 0xC5, 0xF7, 0x60, 0xC6, 0x25, 0xD2, 0x84, 0xF3, 0x42, 0xFF, 0xE0, 0xF3, 0x80, 0xDA, 0x80, 0xAD, 0x20, 0xD6, 0x40, 0x80, 0x00, 0x80, 0x00, 0x10,
                        0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0xBD, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x80, 0x80, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0xBC, 0x80, 0x00, 0x00, 0x52, 0x00,
                        0xB8, 0x40, 0xFD, 0x80, 0x20, 0x00, 0xB8, 0x40, 0xFD, 0x40, 0xFD, 0x40, 0x52, 0x00, 0xE4, 0xC0, 0xFD, 0x20, 0xFD, 0x00, 0xE5, 0x40, 0xFD, 0xC0, 0xFD, 0xC0, 0xFD, 0xC0, 0xFD, 0x80, 0xFD, 0x60, 0xFD, 0x60, 0xFD, 0x60, 0xFD, 0x20, 0xFD,
                        0x20, 0xFD, 0x40, 0xFD, 0x20, 0xFD, 0x00, 0xFD, 0x00, 0xE8, 0xE0, 0xA8, 0x20, 0xFD, 0xA0, 0xFD, 0xA0, 0xFD, 0xA0, 0xFD, 0xA0, 0xFD, 0x80, 0xFD, 0x80, 0xFD, 0x80, 0xFD, 0x80, 0xE8, 0xE0, 0xE8, 0xE0, 0xE8, 0xE0, 0xE8, 0xE0, 0x94, 0x00,
                        0x98, 0x00, 0x98, 0x00, 0x98, 0x00, 0xFD, 0xA0, 0xFD, 0xA0, 0xFD, 0xA0, 0xFD, 0xA0, 0xFD, 0x80, 0xFD, 0x80, 0xFD, 0x80, 0xFD, 0x80, 0xE4, 0xE0, 0xDC, 0xC0, 0xCC, 0xA0, 0xB8, 0x40, 0x98, 0x00, 0x94, 0x00, 0x94, 0x00, 0x90, 0x00, 0xFD,
                        0xC0, 0xF5, 0x80, 0xBC, 0x60, 0x90, 0x00, 0xED, 0x20, 0xB0, 0x20, 0x90, 0x00, 0x80, 0x00, 0x94, 0x00, 0x84, 0x00, 0x80, 0x00, 0x80, 0x00, 0x90, 0x00, 0x94, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00,
                        0x80, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0x61, 0x00, 0x00, 0x00, 0x00, 0x24, 0x30, 0xAD, 0x24, 0x00, 0x00, 0x01, 0x10, 0xF3, 0x01, 0x80, 0x06, 0xD1, 0xE0, 0xB1, 0x20,
                        0xB5, 0x20, 0xB1, 0x40, 0x8C, 0x44, 0x84, 0x24, 0x94, 0x64, 0xF7, 0x20, 0x80, 0x06, 0x80, 0x05, 0x80, 0x05, 0xF7, 0x01, 0x84, 0x09, 0x88, 0x4B, 0x80, 0x06, 0xD2, 0x44, 0xE6, 0x80, 0xD6, 0x00, 0xD2, 0x00, 0xD6, 0x00, 0xC5, 0xA2, 0x84,
                        0x04, 0x80, 0x04, 0x80, 0x04, 0xAD, 0x24, 0x80, 0x06, 0xA5, 0x04, 0xD2, 0x42, 0x9C, 0xC7, 0x80, 0x08, 0xE6, 0xC4, 0xFF, 0xE0, 0xD2, 0x00, 0xAD, 0x00, 0xC1, 0xA0, 0xB5, 0x60, 0x84, 0x04, 0x88, 0x44, 0xAD, 0x04, 0x84, 0x04, 0x90, 0x65,
                        0x80, 0x05, 0xB5, 0x45, 0x80, 0x05, 0x94, 0xA8, 0x80, 0x08, 0xE2, 0xC4, 0xB1, 0x46, 0xB1, 0x20, 0x90, 0x60, 0xA4, 0xE0, 0xC9, 0xC0, 0x98, 0x84, 0xFF, 0x80, 0xD6, 0x02, 0x80, 0x04, 0x80, 0x06, 0xD6, 0x24, 0x98, 0xA5, 0x84, 0x26, 0x80,
                        0x07, 0x80, 0x08, 0x80, 0x08, 0xEB, 0x03, 0xCD, 0xE0, 0xBD, 0x80, 0xC9, 0xC0, 0xCD, 0xE0, 0x9C, 0xA5, 0x8C, 0x44, 0x84, 0x24, 0x88, 0x24, 0xCE, 0x04, 0x80, 0x05, 0x88, 0x25, 0xA4, 0xE5, 0xE6, 0xC2, 0x80, 0x07, 0x8C, 0x67, 0xA9, 0x08,
                        0xC5, 0xA0, 0xC5, 0xC0, 0xDE, 0x40, 0xE2, 0x60, 0x80, 0x04, 0x80, 0x05, 0xC1, 0x83, 0xA8, 0xE3, 0xC1, 0xA4, 0xCA, 0x03, 0xE6, 0xA2, 0x8C, 0x45, 0xF7, 0x42, 0xFF, 0xE0, 0xF3, 0x02, 0x80, 0x08, 0xC9, 0xC0, 0xD2, 0x00, 0xC5, 0xC0, 0xCD,
                        0xE0, 0x84, 0x04, 0xC5, 0xA3, 0xF2, 0xC1, 0x84, 0x04, 0x80, 0x05, 0x80, 0x05, 0xBD, 0x86, 0x80, 0x05, 0x80, 0x08, 0x80, 0x09, 0x80, 0x08, 0x80, 0x07, 0xC5, 0xC0, 0xDE, 0x40, 0xC9, 0xC0, 0xC9, 0xC0, 0x94, 0x84, 0xB5, 0x24, 0x80, 0x04,
                        0x84, 0x03, 0x94, 0x86, 0xE2, 0xA2, 0xAD, 0x25, 0x80, 0x05, 0xAD, 0x48, 0xFF, 0xE0, 0xCA, 0x05, 0x80, 0x08, 0xCD, 0xE0, 0xDA, 0x20, 0xD1, 0xE0, 0xD1, 0xE0, 0x84, 0x04, 0x80, 0x05, 0xA0, 0xC5, 0x84, 0x04, 0x84, 0x26, 0xCE, 0x24, 0xB5,
                        0x65, 0x80, 0x06, 0xA9, 0x28, 0xFF, 0xE0, 0xC5, 0xE4, 0x80, 0x08, 0xDE, 0x40, 0xC9, 0xC0, 0xB9, 0x80, 0xD2, 0x00, 0x94, 0x64, 0xFF, 0x00, 0xFF, 0x20, 0x9C, 0xA4, 0x9C, 0xC5, 0xFF, 0x80, 0xFF, 0x41, 0x84, 0x26, 0xB9, 0xA6, 0xFF, 0xE0,
                        0xEB, 0x03, 0x80, 0x08, 0xD2, 0x00, 0xD2, 0x00, 0xC9, 0xE0, 0xB9, 0x80, 0x88, 0x24, 0xB1, 0x23, 0x84, 0x03, 0x84, 0x23, 0x80, 0x05, 0xA9, 0x05, 0x80, 0x05, 0x9C, 0xC5, 0x8C, 0x68, 0xA9, 0x27, 0x80, 0x07, 0x84, 0x29, 0xC5, 0xC0, 0xC1,
                        0xA0, 0xB9, 0x80, 0xBD, 0xA0, 0x84, 0x24, 0x84, 0x24, 0x8C, 0x44, 0xCD, 0xE3, 0xB1, 0x46, 0x84, 0x26, 0x80, 0x06, 0xBD, 0x85, 0x88, 0x48, 0x80, 0x07, 0x90, 0x69, 0xD6, 0x45, 0xD6, 0x20, 0xC9, 0xC0, 0xBD, 0xA0, 0xB9, 0x80, 0x8C, 0x44,
                        0x84, 0x24, 0x84, 0x24, 0x80, 0x04, 0x80, 0x05, 0x90, 0x65, 0xA4, 0xE5, 0xBD, 0xA4, 0x80, 0x07, 0x98, 0xA7, 0xA5, 0x09, 0xF7, 0x22, 0xC5, 0xC0, 0xC9, 0xE0, 0xDA, 0xC0, 0x00, 0x00, 0x80, 0x05, 0xD1, 0xE3, 0xC6, 0x00, 0x50, 0x00, 0xC9,
                        0xE4, 0xF7, 0x21, 0x8C, 0x40, 0x84, 0x00, 0xFF, 0xE0, 0xF7, 0xA0, 0x80, 0x00, 0x90, 0x00, 0x98, 0x00, 0xF4, 0xC0, 0xFC, 0xE0, 0xFC, 0xC0, 0xB4, 0x00, 0xFC, 0xA0, 0xFC, 0x80, 0xFC, 0x80, 0xCC, 0x20, 0xFC, 0x60, 0xFC, 0x60, 0xFC, 0x60,
                        0xE4, 0x20, 0xFC, 0x20, 0xFC, 0x20, 0xFC, 0x20, 0xFC, 0xC0, 0xFC, 0xE0, 0xE4, 0xA0, 0xC8, 0x60, 0xFC, 0x80, 0xFC, 0x80, 0xFC, 0xA0, 0xFC, 0xA0, 0xFC, 0x60, 0xFC, 0x60, 0xFC, 0x60, 0xFC, 0x60, 0xFC, 0x20, 0xFC, 0x20, 0xFC, 0x20, 0xFC,
                        0x20, 0xD0, 0x60, 0xD4, 0x60, 0xD4, 0x60, 0xD4, 0x60, 0xFC, 0xA0, 0xFC, 0xA0, 0xFC, 0xA0, 0xFC, 0xA0, 0xFC, 0x60, 0xFC, 0x60, 0xFC, 0x60, 0xFC, 0x60, 0xFC, 0x20, 0xFC, 0x20, 0xFC, 0x20, 0xFC, 0x20, 0xD4, 0x60, 0xD4, 0x80, 0xD4, 0x80,
                        0xD8, 0x80, 0xFC, 0xA0, 0xFC, 0xA0, 0xFC, 0xA0, 0xFC, 0xC0, 0xFC, 0x60, 0xFC, 0x60, 0xFC, 0x60, 0xFC, 0x60, 0xFC, 0x20, 0xFC, 0x20, 0xFC, 0x20, 0xFC, 0x20, 0xCC, 0x60, 0xA4, 0x00, 0x80, 0x00, 0x80, 0x00, 0xD4, 0x60, 0x94, 0x00, 0x80,
                        0x00, 0x80, 0x00, 0xBC, 0x20, 0x8C, 0x00, 0x80, 0x00, 0x80, 0x00, 0xAC, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x90, 0xAD, 0x68, 0x80, 0x0A, 0x49,
                        0x70, 0xFB, 0xA1, 0xCE, 0x46, 0xD6, 0x85, 0x69, 0x70, 0xA0, 0xC0, 0x8C, 0x40, 0x94, 0x80, 0x40, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x8C, 0x6A, 0x8C, 0x6A, 0x80, 0x09, 0xA9, 0x29, 0xF7, 0x21, 0xFB, 0x81, 0xD2, 0x65, 0xD6, 0x86,
                        0x84, 0x20, 0x90, 0x60, 0x88, 0x20, 0xB1, 0x40, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x88, 0x29, 0x80, 0x09, 0x94, 0xA8, 0x98, 0xA8, 0xD2, 0x85, 0xCE, 0x45, 0xCA, 0x25, 0xCA, 0x25, 0xC1, 0xA0, 0x90, 0x60, 0x90, 0x60, 0x88,
                        0x40, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x09, 0x80, 0x0B, 0xF7, 0x63, 0xD6, 0x84, 0xCE, 0x25, 0xE2, 0xE4, 0xE2, 0xC0, 0xEA, 0xC1, 0x88, 0x40, 0x8C, 0x40, 0x8C, 0x40, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
                        0x80, 0x00, 0x80, 0x09, 0x80, 0x08, 0x90, 0x89, 0xFF, 0xE0, 0xCE, 0x45, 0xCE, 0x66, 0xE2, 0xC3, 0xDE, 0x80, 0xA4, 0xE0, 0xD2, 0x20, 0x8C, 0x40, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xCA, 0x25, 0x80, 0x09, 0x88,
                        0x48, 0xA0, 0xE7, 0xE6, 0xE3, 0xCE, 0x45, 0xCE, 0x25, 0xCA, 0x05, 0x8C, 0x40, 0x88, 0x40, 0x88, 0x40, 0x8C, 0x40, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x98, 0xC7, 0xA1, 0x07, 0xBD, 0xC9, 0x80, 0x09, 0xC6, 0x05, 0xCA, 0x25,
                        0xE2, 0xE5, 0xCE, 0x45, 0x84, 0x20, 0x94, 0x80, 0xC1, 0xA0, 0x88, 0x40, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x98, 0xA9, 0xDE, 0xC6, 0x80, 0x09, 0x80, 0x09, 0xDE, 0xE4, 0xFF, 0xE0, 0xDA, 0xA4, 0xCE, 0x66, 0x94, 0x80, 0x98,
                        0x80, 0x98, 0xA0, 0x98, 0x80, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xBD, 0xE7, 0xE7, 0x20, 0xA9, 0x28, 0x80, 0x0A, 0xEF, 0x42, 0xC5, 0xC0, 0xDA, 0xA4, 0xCE, 0x66, 0xA0, 0xC0, 0x98, 0x80, 0xA4, 0xE0, 0x9C, 0xC0, 0x80, 0x00,
                        0x80, 0x00, 0x80, 0x00, 0x8C, 0x63, 0xB9, 0xA8, 0xEF, 0x60, 0xB5, 0x86, 0x80, 0x09, 0xEF, 0x62, 0xD6, 0x60, 0xEB, 0x01, 0xD2, 0x85, 0xA4, 0xE0, 0x88, 0x20, 0x80, 0x00, 0xAD, 0x20, 0x9C, 0xE7, 0x98, 0xC6, 0x98, 0xC5, 0x94, 0xA5, 0x84,
                        0x29, 0x9C, 0xE7, 0x8C, 0x69, 0x80, 0x09, 0xCE, 0x64, 0xCA, 0x45, 0xCA, 0x45, 0xD2, 0x85, 0xB1, 0x60, 0xA9, 0x20, 0xA1, 0x00, 0xA5, 0x00, 0x94, 0xA4, 0x98, 0xA5, 0x98, 0xA5, 0x94, 0xA5, 0xA0, 0xEA, 0xA0, 0xE8, 0x80, 0x09, 0xF3, 0x43,
                        0xF7, 0xA2, 0xDE, 0xE3, 0xD6, 0x84, 0xFF, 0xE0, 0xE6, 0xE0, 0xB5, 0x60, 0x98, 0xA0, 0x98, 0xA0, 0xA9, 0x04, 0x9C, 0xC4, 0x8C, 0x63, 0x80, 0x00, 0xEF, 0x43, 0x80, 0x09, 0x88, 0x4A, 0xC6, 0x07, 0xFF, 0xE0, 0xD2, 0x65, 0xDA, 0xC5, 0xEB,
                        0x43, 0x9C, 0xA0, 0x90, 0x60, 0xCE, 0x20, 0xDE, 0xA0, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x09, 0x94, 0x88, 0xA0, 0xE7, 0x98, 0xC7, 0xCE, 0x65, 0xCE, 0x64, 0xCA, 0x45, 0xCA, 0x45, 0x94, 0x80, 0x90, 0x80, 0x90, 0x80,
                        0x90, 0x80, 0x88, 0x42, 0x98, 0xC5, 0x98, 0xA5, 0x98, 0xA5, 0xA5, 0x28, 0xCE, 0x00, 0x80, 0x00, 0x9C, 0x00, 0xD2, 0x85, 0xDA, 0x80, 0x80, 0x00, 0x88, 0x21, 0x98, 0xA0, 0xD2, 0x20, 0x80, 0x00, 0x88, 0x42, 0x98, 0xA5, 0x90, 0x84, 0x88,
                        0x42, 0xDA, 0x73, 0xB4, 0x00, 0xB8, 0x00, 0xB8, 0x00, 0xB8, 0x00, 0x8C, 0x63, 0x90, 0x84, 0x8C, 0x63, 0x8C, 0x63, 0xDA, 0xB4, 0xD2, 0x51, 0xD6, 0x51, 0xD6, 0x51, 0xB8, 0x20, 0x98, 0x00, 0x9C, 0x00, 0x98, 0x00, 0xB8, 0x00, 0xB8, 0x00,
                        0xB8, 0x00, 0xB8, 0x00, 0x8C, 0x63, 0x8C, 0x63, 0x8C, 0x63, 0x8C, 0x63, 0xD2, 0x51, 0xD2, 0x51, 0xD2, 0x51, 0xD2, 0x50, 0x9C, 0x00, 0x9C, 0x00, 0x9C, 0x00, 0x94, 0x00, 0xB8, 0x00, 0xB8, 0x00, 0xB8, 0x00, 0xB8, 0x00, 0x8C, 0x63, 0x90,
                        0x63, 0x90, 0x63, 0x88, 0x21, 0xDA, 0x51, 0xF3, 0x7B, 0xC2, 0x31, 0x80, 0x00, 0xD0, 0xE6, 0xE2, 0xF7, 0x88, 0x42, 0x80, 0x00, 0xB8, 0x00, 0xB8, 0x00, 0xB8, 0x00, 0xB8, 0x00, 0x84, 0x00, 0x88, 0x21, 0x8C, 0x63, 0x90, 0x84, 0x80, 0x00,
                        0x80, 0x00, 0xAD, 0x6B, 0xEF, 0x7B, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xBE, 0x10, 0x94, 0x00, 0x80, 0x00, 0x80, 0x00, 0x50, 0x00, 0x84, 0x21, 0x80, 0x00, 0x80, 0x00, 0x30, 0x00, 0xE6, 0xB3, 0xD2, 0x50, 0xD2, 0x51, 0xD2, 0x51, 0xF2,
                        0xB3, 0xAC, 0x62, 0x98, 0x00, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD2, 0x50, 0xE6, 0x72, 0xEB, 0x5A, 0xE7, 0x39, 0xA8, 0x00, 0xFE, 0x30, 0xCE, 0x94, 0xB1, 0xAD,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEA, 0xB3, 0xD2, 0x2F, 0xD2, 0x51, 0xD2, 0x51, 0xFF, 0x37, 0xB4, 0xA4, 0x98, 0x00, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD2, 0x51, 0xD2, 0x51, 0xD2, 0x51, 0xD2, 0x51, 0x9C, 0x00, 0x9C, 0x00, 0x9C, 0x00, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0xCE, 0x30, 0xE2, 0x71, 0xEF, 0x5A, 0x00, 0x00, 0xA4, 0x00, 0xF1, 0xCC, 0xD6, 0xB5, 0x80, 0x00, 0x40, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x40, 0x00, 0x40, 0x00, 0x40, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80,
                        0x00, 0x80, 0x00, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00,
                        0x50, 0x00, 0x50, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x10, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x40, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x90, 0x84, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0xEB, 0x7D, 0xE2, 0xB5, 0xD2, 0x0F,
                        0xD2, 0x30, 0x94, 0xA5, 0xEA, 0xF7, 0xBC, 0x42, 0xA4, 0x00, 0x80, 0x00, 0xCA, 0x0F, 0xE0, 0x20, 0xD8, 0x00, 0xA1, 0x4A, 0xF1, 0x8C, 0xEC, 0x00, 0xEC, 0x00, 0xD2, 0x30, 0xD2, 0x30, 0xD2, 0x10, 0xD2, 0x30, 0xA8, 0x00, 0xB8, 0x42, 0xBD,
                        0x08, 0xB0, 0x00, 0xE0, 0x00, 0xEE, 0xF7, 0xF7, 0xFF, 0xED, 0x08, 0xED, 0xCD, 0xF3, 0x5A, 0xED, 0x29, 0xEC, 0x00, 0xCE, 0x30, 0xDE, 0x31, 0xF7, 0x7C, 0xDA, 0xF8, 0xA8, 0x00, 0xA8, 0x00, 0xED, 0x07, 0xF7, 0xDE, 0xD8, 0x00, 0xDC, 0x00,
                        0xF6, 0x52, 0xBE, 0x31, 0xE8, 0x00, 0xED, 0x8C, 0xCE, 0xB5, 0x84, 0x21, 0x84, 0x22, 0x80, 0x00, 0x80, 0x00, 0x9D, 0x09, 0x90, 0x84, 0x80, 0x00, 0x66, 0x66, 0xDD, 0xCE, 0x80, 0x00, 0xDA, 0x73, 0xE4, 0x62, 0xD4, 0x00, 0xCA, 0x31, 0xF0,
                        0x63, 0xE8, 0x00, 0xE8, 0x21, 0xE6, 0xD4, 0xCE, 0x30, 0xD2, 0x50, 0xD2, 0x51, 0xB4, 0x00, 0xAC, 0x00, 0xA8, 0x00, 0xA4, 0x00, 0xDC, 0x00, 0xE4, 0x62, 0xD8, 0x00, 0xDC, 0x00, 0xF2, 0xD5, 0xF0, 0xE7, 0xEC, 0x00, 0xE8, 0x00, 0xEA, 0x72,
                        0xE2, 0xF8, 0xE7, 0x7B, 0xFF, 0x59, 0xD8, 0xE6, 0xD6, 0xB5, 0xB1, 0x8C, 0xB1, 0xAD, 0xED, 0x6A, 0xAD, 0x8C, 0x80, 0x00, 0x84, 0x42, 0xE9, 0xEE, 0x98, 0xE7, 0x80, 0x00, 0xDA, 0xD6, 0xF2, 0x51, 0xED, 0x69, 0xCC, 0x00, 0xC8, 0x00, 0xDF,
                        0x38, 0xF0, 0xE6, 0xE4, 0x00, 0xE0, 0x00, 0xED, 0xCE, 0xF4, 0x00, 0xF8, 0x00, 0xE4, 0x84, 0xFC, 0x63, 0xFC, 0x00, 0xF0, 0x00, 0xEF, 0x18, 0xD8, 0x21, 0xF6, 0x52, 0xFA, 0x93, 0xFE, 0x73, 0xED, 0xCD, 0xF7, 0xBD, 0xD6, 0x94, 0xDA, 0xB5,
                        0xF7, 0x59, 0xC0, 0x20, 0xA4, 0x00, 0xA8, 0x00, 0xFB, 0xBD, 0xEE, 0x72, 0xF6, 0xD5, 0xE5, 0x06, 0xF7, 0x5A, 0x9D, 0x08, 0x88, 0x42, 0x8C, 0x63, 0xD6, 0x72, 0xCE, 0x10, 0xD2, 0x30, 0xD2, 0x10, 0xA8, 0x00, 0xA8, 0x00, 0xA8, 0x00, 0xAC,
                        0x00, 0xCC, 0x00, 0xCC, 0x00, 0xE9, 0x07, 0xF6, 0xD4, 0x61, 0x11, 0x21, 0x11, 0x41, 0x11, 0x88, 0x42, 0xCE, 0x10, 0xD2, 0x0F, 0xF2, 0xD6, 0xF3, 0xDF, 0xA8, 0x00, 0xC8, 0x00, 0xFF, 0x38, 0xFB, 0xFF, 0xF2, 0x92, 0xF6, 0xD6, 0xF7, 0xFF,
                        0xF5, 0xEF, 0xE7, 0x7B, 0xE9, 0x6A, 0xC4, 0x00, 0xC8, 0x00, 0xF2, 0x30, 0xE4, 0x00, 0xE4, 0x00, 0xE4, 0x21, 0xF4, 0x21, 0xF8, 0x00, 0xF0, 0x00, 0xEE, 0x10, 0xFC, 0x00, 0xFC, 0x00, 0xE0, 0xE7, 0xDF, 0x18, 0xF1, 0xAD, 0xDF, 0x39, 0x80,
                        0x00, 0x80, 0x00, 0xEA, 0xF7, 0x94, 0xA5, 0x80, 0x00, 0x88, 0x42, 0xA9, 0x6B, 0x80, 0x00, 0x80, 0x00, 0xC5, 0xEF, 0x80, 0x00, 0x80, 0x00, 0x94, 0xC6, 0xF5, 0xEF, 0xD7, 0x18, 0xF2, 0x0F, 0xC4, 0x00, 0xC8, 0x00, 0xEA, 0x72, 0xE8, 0x21,
                        0xE0, 0x00, 0xE4, 0x42, 0xF8, 0x00, 0xF4, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0xFC, 0x00, 0xFC, 0x00, 0xEC, 0x00, 0xEC, 0x21, 0xE4, 0xE6, 0xF6, 0xD6, 0xF6, 0xB5, 0xF2, 0x94, 0xF7, 0x17, 0xDF, 0x18, 0xD6, 0x94, 0xDE, 0xF7, 0xF4, 0x00, 0xF4,
                        0x00, 0xEC, 0x00, 0xEA, 0x52, 0xF0, 0x00, 0xF0, 0x00, 0xE9, 0x07, 0xDA, 0xD6, 0xFE, 0xF7, 0xE7, 0x5A, 0x84, 0x21, 0x80, 0x00, 0xD2, 0xB5, 0x98, 0xC6, 0x80, 0x00, 0x80, 0x00, 0xA1, 0x29, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
                        0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x44, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0xE6, 0xD6, 0x00, 0x00, 0x00, 0x00, 0x6A, 0x99, 0xFC, 0x83, 0x00, 0x00, 0x11, 0x11, 0xF5, 0x89, 0xFC, 0x00, 0xF6, 0x94, 0xFC, 0x00, 0xF4, 0x00, 0xEC, 0x00, 0xFC, 0x20, 0xFC, 0x00, 0xE4, 0xA5, 0xEB, 0x5A, 0xFC, 0x00,
                        0xE8, 0x62, 0xE7, 0x7B, 0xE7, 0x7B, 0xFC, 0x00, 0xF4, 0x40, 0xF4, 0xE5, 0xFC, 0x40, 0xEC, 0x20, 0xF8, 0x00, 0xF8, 0x00, 0xE8, 0x00, 0xE7, 0x39, 0xEC, 0x83, 0xFC, 0x00, 0xF8, 0x00, 0xF1, 0xEE, 0xFC, 0x41, 0xFC, 0x00, 0xDD, 0x07, 0xFC,
                        0x00, 0xF8, 0x00, 0xD4, 0xE6, 0xE7, 0x59, 0xEA, 0x52, 0xCA, 0x94, 0x98, 0xE7, 0xE1, 0xEF, 0xD9, 0xAD, 0xE3, 0xBD, 0xF1, 0xCE, 0xFC, 0x00, 0xEF, 0xBD, 0xFD, 0x6B, 0xFC, 0x00, 0xFC, 0x00, 0xFD, 0x88, 0xFC, 0x00, 0xF0, 0x00, 0xDC, 0xE5,
                        0xFC, 0x83, 0xF4, 0x00, 0xE5, 0x08, 0xE7, 0x18, 0xFC, 0x00, 0xE5, 0x28, 0xF3, 0xFF, 0xDF, 0x7C, 0xFC, 0x00, 0xFC, 0x41, 0xFC, 0x62, 0xFC, 0x63, 0xE1, 0x06, 0xE4, 0xE5, 0xE0, 0xC5, 0xDC, 0xC3, 0xF3, 0xDE, 0xF8, 0x41, 0xFC, 0x00, 0xE8,
                        0x00, 0xEE, 0xD6, 0xFC, 0x00, 0xFC, 0x00, 0xE0, 0x42, 0xFC, 0x21, 0xFC, 0x00, 0xFC, 0x00, 0xD1, 0x29, 0xF8, 0x20, 0xFC, 0x00, 0xF4, 0x00, 0xD2, 0x0F, 0xE6, 0xD6, 0x90, 0xA5, 0xCE, 0x93, 0xFD, 0x28, 0xDF, 0x39, 0xBA, 0x10, 0xF9, 0x6A, 0xFC, 0x00, 0xF3, 0xFF, 0xE6, 0x6D, 0xF4, 0xC0, 0xF4, 0xC0, 0xFF, 0xFF, 0xE7, 0x16, 0xDA, 0xD3, 0xDE, 0xF3, 0xFC, 0x00, 0xEC, 0x00, 0xE2, 0x31, 0xCA, 0x94, 0xFC, 0x00, 0xD9, 0xAC, 0xEB, 0xBD, 0x80, 0x00, 0xE1, 0x45, 0xE3, 0x3A, 0x94,
                        0xA5, 0x80, 0x00, 0xE7, 0x59, 0xAD, 0x6B, 0x80, 0x00, 0x90, 0xA5, 0x94, 0xA5, 0xBA, 0x31, 0xF6, 0x73, 0xEC, 0x00, 0x80, 0x00, 0xEB, 0x17, 0xF4, 0x20, 0xF8, 0x00, 0xBD, 0xAD, 0xFC, 0x63, 0xFC, 0x00, 0xF8, 0x00, 0xF2, 0x30, 0xFC, 0x00,
                        0xFC, 0x00, 0xE4, 0x41, 0xE8, 0x00, 0xE8, 0xE6, 0xF7, 0x9C, 0xA9, 0x6B, 0xF0, 0x00, 0xEF, 0x18, 0xB1, 0xCE, 0x80, 0x00, 0xE9, 0xEE, 0xBE, 0x31, 0x80, 0x00, 0x80, 0x00, 0xDF, 0x18, 0x84, 0x21, 0x80, 0x00, 0x9C, 0xE7, 0x94, 0xA5, 0xBA,
                        0x31, 0xF2, 0x52, 0xFC, 0x00, 0x84, 0x21, 0xEB, 0x17, 0xFC, 0x21, 0xFC, 0x00, 0xCE, 0x71, 0xED, 0x40, 0xF4, 0xA0, 0xF0, 0xC0, 0xEF, 0x7A, 0xD6, 0x70, 0xD6, 0x92, 0xD6, 0x92, 0xFC, 0x00, 0xE0, 0xE7, 0xEB, 0xDF, 0xB5, 0xEF, 0xF0, 0x00,
                        0xD5, 0x89, 0xEE, 0x51, 0xE6, 0x0E, 0xF0, 0xE0, 0xF4, 0xC0, 0xEC, 0x60, 0xD9, 0x46, 0xD6, 0x92, 0xD6, 0x92, 0xD2, 0x71, 0xE7, 0x5A, 0x88, 0x42, 0x98, 0xE7, 0xE2, 0x94, 0xFC, 0x21, 0xF3, 0xBD, 0xF7, 0xDE, 0xFC, 0xC4, 0xFC, 0x00, 0xEF,
                        0x9B, 0xE9, 0xA3, 0xF4, 0xA0, 0xF0, 0xC0, 0xF7, 0xBC, 0xD6, 0x70, 0xD6, 0x92, 0xD6, 0x92, 0xFC, 0x00, 0xE4, 0x84, 0xE7, 0x7B, 0xDB, 0x39, 0xF8, 0x00, 0xD5, 0x27, 0xEE, 0x72, 0xE6, 0x0E, 0xF0, 0xC0, 0xF4, 0xC0, 0xF0, 0x80, 0xE0, 0x60,
                        0xD6, 0x92, 0xD6, 0x92, 0xD2, 0x91, 0xDA, 0xD4, 0xDA, 0xF7, 0xDA, 0xD6, 0xDA, 0xF7, 0x98, 0xC6, 0xDE, 0x50, 0xF7, 0xDE, 0xB9, 0xEF, 0x80, 0x00, 0xDA, 0x51, 0xC6, 0x52, 0x84, 0x21, 0x80, 0x00, 0xEF, 0x9C, 0x84, 0x21, 0x80, 0x00, 0x80,
                        0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x30, 0x00, 0x80, 0x00, 0x80, 0x00, 0x30, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0xDE, 0xF7, 0xF1, 0xC7, 0xED, 0x85, 0x56, 0x66, 0xE3, 0x18, 0xD6, 0xD6, 0xD6, 0xD7, 0x40, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80,
                        0x00, 0x40, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xED, 0xA5, 0xF1, 0x85, 0xF1, 0x64, 0xED, 0xA6, 0xD6, 0xD7, 0xD6, 0xF7, 0xCE, 0xB5, 0xC6, 0x52, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
                        0x80, 0x00, 0xE9, 0xE9, 0xE2, 0x92, 0xEF, 0xDD, 0xEE, 0x6B, 0xB1, 0xAE, 0xCA, 0x73, 0xDA, 0xD7, 0xD6, 0xB5, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xF1, 0x63, 0xE9, 0x85, 0xDA,
                        0x71, 0xCA, 0xB5, 0xD6, 0xD7, 0xDA, 0xF7, 0xB5, 0xCE, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xBE, 0x31, 0xBE, 0x31, 0xCE, 0xD6, 0xEB, 0x9A, 0x80, 0x00, 0x80, 0x00,
                        0x9D, 0x08, 0xDA, 0xF7, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x60, 0x00, 0x60, 0x00, 0x80, 0x00, 0xE9, 0xC5, 0xF1, 0xA5, 0xE5, 0x65, 0xEB, 0x38, 0xD6, 0xD7, 0xD6, 0xD7, 0xD6, 0xD7, 0xDE, 0xF7, 0x80, 0x00, 0x80,
                        0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xDA, 0xD7, 0xA1, 0x09, 0xA5, 0x2A, 0xA9, 0x4A, 0xA9, 0x4A, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
                        0x80, 0x00, 0x80, 0x00, 0x30, 0x00, 0xA5, 0x29, 0x80, 0x00, 0x80, 0x01, 0xE2, 0xF5, 0x80, 0x00, 0x80, 0x00, 0xD6, 0xD6, 0xE9, 0xA3, 0x80, 0x00, 0xB1, 0x8C, 0xF3, 0x9B, 0xD6, 0xB3, 0x30, 0x00, 0x40, 0x00, 0x80, 0x00, 0x80, 0x00, 0xFC,
                        0xA3, 0xFC, 0x00, 0xE4, 0x20, 0xDE, 0xB5, 0xF0, 0xE0, 0xE0, 0xE0, 0xDA, 0x93, 0xDB, 0x18, 0xD2, 0xB3, 0xD2, 0xB4, 0xD6, 0xD7, 0x90, 0x84, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xB1, 0xAD, 0x80, 0x00, 0x80, 0x00, 0x90, 0x84,
                        0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x50, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x20, 0x00, 0x80, 0x00, 0x80, 0x00, 0x40, 0x00, 0x10, 0x00, 0xA9, 0x4A, 0xA5, 0x4A, 0xA5, 0x4A, 0xA5, 0x4A, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80,
                        0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0xA5, 0x4A, 0xA5, 0x4A, 0xA5, 0x4A, 0xA5, 0x29, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
                        0x80, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0xA5, 0x29, 0xA5, 0x4A, 0xA5, 0x4A, 0xA5, 0x4A, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30,
                        0x00, 0x30, 0x00, 0xA5, 0x4A, 0xA5, 0x4A, 0xA5, 0x4A, 0xA9, 0x4B, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x98, 0xC6, 0x80, 0x00,
                        0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x60, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x30, 0x00, 0x30, 0x00, 0x20, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00,
                        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xC2, 0x36, 0xDA, 0xD9, 0xFB, 0xDF, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xBE, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0x1B, 0x88, 0x93, 0xFF, 0xFF, 0xCA, 0x59, 0x88, 0x72, 0x8C, 0xB6,
                        0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x9D, 0x13, 0x8C, 0xB6, 0x88, 0x95, 0x84, 0x51, 0x8C, 0xD7, 0x88, 0x95, 0x84, 0x51, 0x80, 0x30, 0x88, 0x95, 0x84, 0x52, 0x84, 0x51, 0x80, 0x51, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80,
                        0x00, 0x80, 0x30, 0x80, 0x2E, 0x80, 0x10, 0x80, 0x5C, 0x80, 0x30, 0x80, 0x10, 0x80, 0x33, 0xD2, 0x50, 0x80, 0x0F, 0x80, 0x11, 0xDE, 0x2E, 0xFF, 0xAA, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x5A, 0x80, 0x0B, 0x80, 0x0C,
                        0x80, 0x0E, 0x94, 0xD7, 0x80, 0x0D, 0x80, 0x02, 0x80, 0x09, 0xCE, 0x0D, 0x80, 0x15, 0x80, 0x06, 0x80, 0x0A, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x0F, 0x80, 0x11, 0x80, 0x2F, 0x80, 0x0E, 0x80, 0x0B, 0x80, 0x0E, 0x80,
                        0x31, 0x80, 0x10, 0x80, 0x0B, 0x80, 0x0B, 0x80, 0x0F, 0x80, 0x0E, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x0C, 0x80, 0x0A, 0x80, 0x08, 0x80, 0x00, 0x80, 0x0D, 0x80, 0x0D, 0x80, 0x0D, 0x80, 0x00, 0x80, 0x0C, 0x80, 0x0D,
                        0x80, 0x0F, 0x80, 0x00, 0x80, 0x00, 0x80, 0x36, 0x80, 0x33, 0x84, 0x52, 0x80, 0x00, 0x88, 0x78, 0x80, 0x19, 0x80, 0x34, 0x80, 0x00, 0xC5, 0x89, 0x9C, 0xAF, 0x80, 0x39, 0x80, 0x00, 0x9C, 0xF9, 0xD9, 0xC1, 0xA8, 0xE4, 0x94, 0xD4, 0xB5,
                        0xD8, 0xD2, 0xB9, 0xE7, 0x3A, 0x80, 0x32, 0x84, 0x53, 0x88, 0x95, 0x84, 0x51, 0x80, 0x38, 0x84, 0x55, 0x88, 0x73, 0x80, 0x0F, 0x84, 0x54, 0x80, 0x34, 0x80, 0x0E, 0x80, 0x2F, 0xB9, 0xD4, 0x84, 0x51, 0x88, 0x74, 0x88, 0x75, 0x80, 0x2F,
                        0x84, 0x52, 0x84, 0x53, 0x84, 0x53, 0x80, 0x30, 0x80, 0x32, 0x80, 0x32, 0x80, 0x32, 0x80, 0x31, 0x80, 0x32, 0x80, 0x12, 0x80, 0x33, 0x84, 0x53, 0x84, 0x73, 0x84, 0x53, 0x80, 0x52, 0x84, 0x73, 0x84, 0x73, 0x84, 0x72, 0x80, 0x12, 0x80,
                        0x32, 0x80, 0x32, 0x80, 0x35, 0x80, 0x3B, 0x80, 0x34, 0x80, 0x35, 0x84, 0x5A, 0x80, 0x5C, 0x80, 0x11, 0xBD, 0xB0, 0xFF, 0x8D, 0xFF, 0x2C, 0xA1, 0x14, 0xFF, 0xEF, 0xFF, 0xAF, 0xFF, 0x2E, 0xDA, 0x71, 0xFF, 0xEE, 0xFF, 0xF0, 0xFF, 0xD0,
                        0x84, 0x37, 0x9C, 0xD2, 0xC1, 0x8F, 0xEA, 0xAE, 0xF6, 0xAA, 0x80, 0x32, 0x80, 0x09, 0x80, 0x08, 0xFF, 0x2B, 0xA0, 0xEE, 0x80, 0x10, 0x80, 0x06, 0xFF, 0xCF, 0xDA, 0x2C, 0x80, 0x13, 0x80, 0x08, 0xFF, 0xCE, 0xFF, 0x8B, 0x84, 0x51, 0x80,
                        0x10, 0x80, 0x0F, 0x80, 0x0E, 0x80, 0x0D, 0x80, 0x0D, 0x80, 0x0F, 0x80, 0x30, 0x80, 0x31, 0x80, 0x30, 0x80, 0x0E, 0x80, 0x31, 0x80, 0x32, 0x80, 0x32, 0x80, 0x0B, 0x80, 0x31, 0x80, 0x32, 0x80, 0x32, 0x80, 0x0D, 0x80, 0x0C, 0x80, 0x0B,
                        0x80, 0x00, 0x80, 0x10, 0x80, 0x0F, 0x80, 0x0E, 0x80, 0x00, 0x80, 0x31, 0x80, 0x31, 0x80, 0x31, 0x80, 0x00, 0x80, 0x32, 0x80, 0x32, 0x80, 0x32, 0x80, 0x00, 0x80, 0x00, 0x8C, 0x7A, 0xA5, 0x15, 0xD1, 0xA0, 0x80, 0x00, 0xEB, 0x5B, 0x80,
                        0x3E, 0xB9, 0x4D, 0x80, 0x00, 0xFF, 0xFF, 0xCA, 0x55, 0x8C, 0x9A, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x84, 0x2F, 0xA4, 0xC1, 0x80, 0x0C, 0x80, 0x0F, 0x80, 0x30, 0xB9, 0x23, 0x80, 0x0D, 0x80, 0x0F, 0x80, 0x31, 0x8C, 0x6A, 0x80, 0x0D,
                        0x80, 0x10, 0x80, 0x32, 0x80, 0x0D, 0x80, 0x0D, 0x80, 0x31, 0x80, 0x33, 0x80, 0x31, 0x80, 0x33, 0x80, 0x33, 0x80, 0x34, 0x80, 0x32, 0x80, 0x33, 0x80, 0x34, 0x80, 0x35, 0x80, 0x33, 0x80, 0x34, 0x80, 0x35, 0x80, 0x58, 0x80, 0x34, 0x80,
                        0x35, 0x84, 0x59, 0x88, 0x9C, 0x80, 0x35, 0x80, 0x37, 0x80, 0x37, 0x80, 0x14, 0x80, 0x37, 0x80, 0x38, 0x80, 0x35, 0x80, 0x33, 0x84, 0x59, 0x80, 0x36, 0x80, 0x33, 0x84, 0x53, 0x84, 0x58, 0x80, 0x32, 0x84, 0x54, 0x84, 0x77, 0x80, 0x13,
                        0x80, 0x14, 0x80, 0x13, 0x80, 0x12, 0x80, 0x31, 0x80, 0x10, 0x80, 0x10, 0x80, 0x10, 0x84, 0x52, 0x80, 0x30, 0x80, 0x0F, 0x80, 0x0D, 0x84, 0x59, 0x80, 0x5A, 0x80, 0x59, 0x80, 0x35, 0x90, 0x71, 0xB9, 0x6E, 0x90, 0x90, 0x80, 0x38, 0x80,
                        0x11, 0x80, 0x14, 0x80, 0x35, 0x80, 0x58, 0x80, 0x0D, 0x80, 0x10, 0x80, 0x33, 0x80, 0x34, 0x80, 0x10, 0x80, 0x0C, 0x80, 0x11, 0x80, 0x34, 0x80, 0x0C, 0x80, 0x31, 0x80, 0x33, 0x80, 0x33, 0x80, 0x32, 0x80, 0x31, 0x80, 0x33, 0x80, 0x34,
                        0x80, 0x34, 0x80, 0x33, 0x80, 0x34, 0x80, 0x34, 0x80, 0x33, 0x80, 0x34, 0x80, 0x35, 0x80, 0x35, 0x80, 0x33, 0x80, 0x33, 0x80, 0x32, 0x80, 0x00, 0x80, 0x33, 0x80, 0x33, 0x80, 0x33, 0x80, 0x00, 0x80, 0x34, 0x80, 0x34, 0x80, 0x33, 0x80,
                        0x00, 0x80, 0x35, 0x80, 0x35, 0x80, 0x34, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xA5, 0x32, 0x80, 0x31, 0x80, 0x00, 0xB9, 0xD0, 0x80, 0x31, 0x80, 0x34, 0x80, 0x00, 0xB5, 0xAD, 0x80, 0x09, 0x80, 0x38, 0x80, 0x00, 0xDE, 0xF7, 0x80, 0x05,
                        0x80, 0x33, 0x80, 0x0E, 0x80, 0x0D, 0x80, 0x32, 0x80, 0x34, 0x80, 0x31, 0x80, 0x0C, 0x80, 0x32, 0x80, 0x35, 0x80, 0x36, 0x80, 0x0C, 0x80, 0x32, 0x80, 0x35, 0x84, 0x7B, 0x80, 0x0D, 0x80, 0x10, 0x80, 0x35, 0x80, 0x35, 0x84, 0x58, 0x8C,
                        0xBE, 0x8C, 0xBD, 0x80, 0x56, 0x90, 0xDD, 0x9D, 0x3F, 0x88, 0x78, 0x88, 0x79, 0x9D, 0x3F, 0x9D, 0x3F, 0x80, 0x34, 0x8C, 0x9B, 0x9D, 0x3F, 0x90, 0xDD, 0x80, 0x14, 0x80, 0x12, 0x80, 0x33, 0x8C, 0xBD, 0x80, 0x7E, 0x80, 0x11, 0x88, 0x9D,
                        0x80, 0x38, 0x8C, 0x8E, 0x80, 0x59, 0x80, 0x16, 0xAD, 0x8F, 0xFF, 0xFC, 0x80, 0x18, 0xA5, 0x30, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x18, 0x80, 0x15, 0x80, 0x16, 0x80, 0x3B, 0xBD, 0xF1, 0xD2, 0x94, 0xC6, 0x32, 0x90, 0xAD, 0xFF, 0xFF, 0xFF,
                        0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x84, 0x7D, 0x80, 0x34, 0x80, 0x0E, 0x80, 0x33, 0x80, 0x13, 0x84, 0x7D, 0x80, 0x34, 0x80, 0x11, 0x94, 0xAC, 0x80, 0x17, 0x84, 0x7B, 0x80, 0x32, 0xD6, 0xD6,
                        0x80, 0x11, 0x84, 0x7D, 0x80, 0x35, 0x80, 0x33, 0x80, 0x33, 0x80, 0x34, 0x80, 0x35, 0x80, 0x33, 0x80, 0x33, 0x80, 0x33, 0x80, 0x34, 0x80, 0x35, 0x80, 0x35, 0x80, 0x34, 0x80, 0x33, 0x80, 0x35, 0x80, 0x36, 0x80, 0x35, 0x80, 0x34, 0x80,
                        0x36, 0x80, 0x36, 0x80, 0x35, 0x80, 0x00, 0x80, 0x36, 0x80, 0x36, 0x80, 0x34, 0x80, 0x00, 0x80, 0x35, 0x80, 0x35, 0x80, 0x34, 0x80, 0x00, 0x80, 0x35, 0x80, 0x36, 0x80, 0x34, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0x80, 0x0A, 0x90, 0xAC,
                        0x80, 0x00, 0xFF, 0xFF, 0xA9, 0x4F, 0xB1, 0xB1, 0x80, 0x00, 0xFF, 0xFF, 0xE3, 0x18, 0xAD, 0x71, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xA9, 0x4E, 0x80, 0x57, 0x80, 0x32, 0x80, 0x0D, 0x80, 0x34, 0x9C, 0xEF, 0x80, 0x14, 0x80, 0x0D, 0x80,
                        0x32, 0xCE, 0x50, 0x80, 0x30, 0x80, 0x10, 0x80, 0x10, 0xDA, 0xD4, 0xA9, 0x4F, 0x80, 0x10, 0x80, 0x11, 0x88, 0x7A, 0x94, 0xFF, 0x88, 0x79, 0x80, 0x17, 0x84, 0x78, 0x90, 0xBD, 0x84, 0x58, 0x80, 0x18, 0x80, 0x57, 0x88, 0x9A, 0x84, 0x59,
                        0x80, 0x18, 0x80, 0x35, 0x88, 0x79, 0x84, 0x7B, 0x80, 0x38, 0x80, 0x33, 0xF7, 0xBB, 0xFF, 0xFF, 0xFF, 0xFF, 0xAD, 0x95, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xBC, 0xDA, 0xDA, 0xFF, 0xFF, 0xFF, 0xFF, 0xCB, 0x53, 0xF7, 0xBD, 0xFF, 0xFF, 0xFF,
                        0xFF, 0xB6, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x96, 0xE7, 0xEB, 0xBA, 0xFF, 0xFF, 0xFF, 0xFF, 0x83, 0x40, 0x9A, 0xC8, 0xFF, 0xFF, 0xFF, 0xFF, 0xB2, 0xAE, 0x92, 0x26, 0xF3, 0xBC, 0xFF, 0xFE, 0xF3, 0xBB, 0x80, 0x31,
                        0x84, 0x7D, 0x80, 0x57, 0xF7, 0xDC, 0x88, 0x74, 0x84, 0x7E, 0x80, 0x57, 0xEF, 0x79, 0x88, 0x76, 0x84, 0x7D, 0x84, 0x58, 0xD6, 0xD6, 0x84, 0x59, 0x84, 0x7C, 0x84, 0x79, 0x80, 0x56, 0x80, 0x57, 0x80, 0x36, 0x80, 0x34, 0x80, 0x57, 0x80,
                        0x57, 0x80, 0x36, 0x80, 0x35, 0x84, 0x58, 0x80, 0x57, 0x80, 0x36, 0x80, 0x36, 0x84, 0x58, 0x80, 0x58, 0x80, 0x58, 0x80, 0x57, 0x80, 0x35, 0x80, 0x37, 0x80, 0x32, 0x80, 0x00, 0x80, 0x35, 0x80, 0x35, 0x80, 0x33, 0x80, 0x00, 0x80, 0x35,
                        0x80, 0x35, 0x80, 0x34, 0x80, 0x00, 0x80, 0x36, 0x80, 0x36, 0x80, 0x35, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xD6, 0xB6, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80,
                        0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD2, 0x93, 0xC2, 0x4F, 0x80, 0x2C, 0x80, 0x12, 0xC6, 0x10, 0xCA, 0x92, 0x8D, 0x28, 0x80, 0x10, 0xDE, 0xF7, 0xD6, 0xB5, 0x9D, 0x67, 0x80, 0x05, 0xFF, 0xFF, 0xC6, 0x32, 0xBE, 0x30, 0x80, 0x00,
                        0x80, 0x35, 0x88, 0x7A, 0x84, 0x5D, 0x88, 0x76, 0x80, 0x35, 0x84, 0x7A, 0x80, 0x1B, 0x9D, 0x15, 0x80, 0x30, 0x80, 0x55, 0x80, 0x34, 0xC6, 0x55, 0x80, 0x05, 0x80, 0x2C, 0x90, 0xD0, 0xEB, 0x7A, 0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6,
                        0x8E, 0xFF, 0xFC, 0xF7, 0xBD, 0xFF, 0xFF, 0xCA, 0xF3, 0xFB, 0xDC, 0xEF, 0x7B, 0xF3, 0x9C, 0xE3, 0x58, 0xE7, 0x5A, 0xE3, 0x18, 0xE3, 0x19, 0xE3, 0x19, 0xB1, 0xCC, 0x95, 0x46, 0xD7, 0x36, 0xFF, 0xDD, 0x80, 0x00, 0x80, 0x00, 0xCE, 0xF4,
                        0xEB, 0x5B, 0x80, 0x60, 0x80, 0x40, 0xBE, 0x70, 0xDE, 0x4F, 0x8D, 0x85, 0x80, 0x80, 0xDE, 0x4A, 0xFE, 0xC8, 0xB9, 0xF7, 0x80, 0x3C, 0x80, 0x7C, 0x84, 0x7A, 0x8C, 0xB8, 0x80, 0x3B, 0x80, 0x5B, 0x80, 0x7A, 0xD1, 0x66, 0xD5, 0x61, 0xAC,
                        0xA3, 0x80, 0x73, 0xFE, 0x64, 0xF2, 0x02, 0xC1, 0x00, 0x94, 0x67, 0x84, 0x79, 0x84, 0x59, 0x84, 0x58, 0x80, 0x58, 0x84, 0x79, 0x84, 0x79, 0x84, 0x79, 0x84, 0x58, 0x84, 0x7A, 0x84, 0x79, 0x84, 0x79, 0x84, 0x79, 0x80, 0x79, 0x84, 0x78,
                        0x88, 0x78, 0x88, 0x78, 0x80, 0x57, 0x80, 0x37, 0x80, 0x35, 0x80, 0x00, 0x84, 0x58, 0x80, 0x57, 0x80, 0x35, 0x80, 0x00, 0x84, 0x79, 0x84, 0x58, 0x80, 0x36, 0x80, 0x00, 0x88, 0x78, 0x84, 0x78, 0x84, 0x57, 0x80, 0x00, 0x80, 0x00, 0xFF,
                        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD6, 0xB4, 0xD6, 0x94, 0xAD, 0xAC, 0xFF, 0xFF,
                        0xEB, 0x39, 0xD5, 0xE9, 0xBD, 0xAC, 0xFF, 0xFF, 0xFF, 0xFF, 0xD2, 0x50, 0xA4, 0xA1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD2, 0x72, 0x80, 0x80, 0xC5, 0xCB, 0xEA, 0xAE, 0xE2, 0xD2, 0x98, 0xE7, 0xB0, 0xE3, 0xB1, 0x02, 0xFF, 0x07, 0x84,
                        0x43, 0x80, 0x01, 0x88, 0x00, 0xFA, 0x24, 0x8C, 0x20, 0x8C, 0x20, 0xB8, 0xC0, 0xE1, 0x62, 0xD2, 0x95, 0xCE, 0x95, 0xCA, 0x74, 0xCA, 0x74, 0xFF, 0x09, 0xF6, 0xCA, 0xEE, 0xAB, 0xF6, 0xAA, 0xFE, 0xA7, 0xFE, 0xA7, 0xFE, 0xA7, 0xFE, 0x86,
                        0xED, 0xA3, 0xF5, 0xE4, 0xF9, 0xE4, 0xE9, 0xC3, 0xC2, 0x30, 0xDA, 0x25, 0xF2, 0x26, 0xD6, 0xF9, 0xFE, 0xC8, 0xFE, 0xC6, 0xE2, 0xB2, 0xFF, 0xFF, 0xFE, 0xAA, 0xF7, 0x9A, 0xFF, 0xFF, 0xFF, 0xFC, 0xEA, 0x6C, 0xEE, 0xF2, 0xEA, 0x6B, 0xC5,
                        0x20, 0xDE, 0x92, 0xED, 0xC2, 0xC5, 0x20, 0x8C, 0x26, 0xEE, 0xF2, 0xDD, 0x80, 0xA4, 0x80, 0x80, 0x29, 0xD9, 0x82, 0x9C, 0x60, 0x80, 0x04, 0x80, 0x2C, 0x90, 0x20, 0x90, 0x87, 0x8C, 0x66, 0x80, 0x26, 0x80, 0x35, 0x84, 0x55, 0x84, 0x56,
                        0x84, 0x77, 0x80, 0x11, 0x80, 0x32, 0x80, 0x53, 0x84, 0x55, 0x80, 0x10, 0x80, 0x10, 0x80, 0x31, 0x80, 0x33, 0x80, 0x0A, 0x80, 0x0B, 0x80, 0x0C, 0x80, 0x0E, 0x88, 0x77, 0x88, 0x78, 0x84, 0x78, 0x80, 0x00, 0x84, 0x56, 0x84, 0x77, 0x84,
                        0x77, 0x80, 0x00, 0x80, 0x54, 0x84, 0x55, 0x84, 0x76, 0x80, 0x00, 0x80, 0x31, 0x80, 0x33, 0x80, 0x55, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF,
                        0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0x9D, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0x9C, 0xCD, 0xED, 0x80, 0x00, 0x80,
                        0x00, 0x80, 0x00, 0x80, 0x00, 0xDA, 0xD6, 0x8C, 0x25, 0xA0, 0x60, 0xAC, 0xA0, 0x84, 0x6C, 0x80, 0x4C, 0x80, 0x4B, 0x80, 0x2A, 0xE9, 0xA3, 0xE5, 0xA0, 0xF6, 0x45, 0xC1, 0xB2, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xB8, 0xE0,
                        0xC0, 0xE0, 0xBC, 0xE0, 0xB8, 0xE0, 0x80, 0x08, 0x8C, 0x45, 0x88, 0x47, 0x80, 0x2B, 0x80, 0x76, 0x80, 0x76, 0x80, 0x77, 0x80, 0x77, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xAC, 0xA0, 0xA0, 0x60, 0x84, 0x03, 0x80, 0x06, 0x80,
                        0x2D, 0x80, 0x31, 0xB5, 0x51, 0xC9, 0xCE, 0x80, 0x7A, 0x80, 0x58, 0xFE, 0x64, 0xFF, 0x07, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x29, 0x8C, 0x8C, 0xE7, 0x3A, 0xFF, 0xFF, 0xA5, 0x14, 0x80, 0x59, 0x80, 0x53, 0x98, 0xCF,
                        0xFF, 0x28, 0xFE, 0xE8, 0xFA, 0x6A, 0xCD, 0xB1, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xEB, 0x5B, 0x9D, 0x0B, 0x80, 0x05, 0x80, 0x06, 0xFF, 0xFF, 0xFF, 0xFF, 0xD6, 0xB7, 0x84, 0x26, 0xB9, 0x91, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB,
                        0xDF, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x08, 0x80, 0x0D, 0x80, 0x32, 0x80, 0x00, 0x80, 0x06, 0x80, 0x06, 0x80, 0x0B, 0x80, 0x00, 0xA1, 0x0B, 0x84, 0x27, 0x84, 0x48, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
                        0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xC2, 0x36, 0xDA, 0xD9, 0xFB, 0xDF, 0x80, 0x00, 0x80, 0x00, 0x80,
                        0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
                        0xFF, 0xFF, 0xF3, 0xBE, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0x1B, 0x88, 0x93, 0xFF, 0xFF, 0xCA, 0x59, 0x88, 0x72, 0x8C, 0xB6, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x9D, 0x13, 0x8C, 0xB6, 0x88, 0x95, 0x84, 0x51, 0x8C, 0xD7, 0x88,
                        0x95, 0x84, 0x51, 0x80, 0x30, 0x88, 0x95, 0x84, 0x52, 0x84, 0x51, 0x80, 0x51, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x30, 0x80, 0x2E, 0x80, 0x10, 0x80, 0x5C, 0x80, 0x30, 0x80, 0x10, 0x80, 0x33, 0xD2, 0x50, 0x80, 0x0F,
                        0x80, 0x11, 0xDE, 0x2E, 0xFF, 0xAA, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x5A, 0x80, 0x0B, 0x80, 0x0C, 0x80, 0x0E, 0x94, 0xD7, 0x80, 0x0D, 0x80, 0x02, 0x80, 0x09, 0xCE, 0x0D, 0x80, 0x15, 0x80, 0x06, 0x80, 0x0A, 0x80,
                        0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x0F, 0x80, 0x11, 0x80, 0x2F, 0x80, 0x0E, 0x80, 0x0B, 0x80, 0x0E, 0x80, 0x31, 0x80, 0x10, 0x80, 0x0B, 0x80, 0x0B, 0x80, 0x0F, 0x80, 0x0E, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,
                        0x80, 0x0C, 0x80, 0x0A, 0x80, 0x08, 0x80, 0x00, 0x80, 0x0D, 0x80, 0x0D, 0x80, 0x0D, 0x80, 0x00, 0x80, 0x0C, 0x80, 0x0D, 0x80, 0x0F, 0x80, 0x00, 0x80, 0x00, 0x80, 0x36, 0x80, 0x33, 0x84, 0x52, 0x80, 0x00, 0x88, 0x78, 0x80, 0x19, 0x80,
                        0x34, 0x80, 0x00, 0xC5, 0x89, 0x9C, 0xAF, 0x80, 0x39, 0x80, 0x00, 0x9C, 0xF9, 0xD9, 0xC1, 0xA8, 0xE4, 0x94, 0xD4, 0xB5, 0xD8, 0xD2, 0xB9, 0xE7, 0x3A, 0x80, 0x32, 0x84, 0x53, 0x88, 0x95, 0x84, 0x51, 0x80, 0x38, 0x84, 0x55, 0x88, 0x73,
                        0x80, 0x0F, 0x84, 0x54, 0x80, 0x34, 0x80, 0x0E, 0x80, 0x2F, 0xB9, 0xD4, 0x84, 0x51, 0x88, 0x74, 0x88, 0x75, 0x80, 0x2F, 0x84, 0x52, 0x84, 0x53, 0x84, 0x53, 0x80, 0x30, 0x80, 0x32, 0x80, 0x32, 0x80, 0x32, 0x80, 0x31, 0x80, 0x32, 0x80,
                        0x12, 0x80, 0x33, 0x84, 0x53, 0x84, 0x73, 0x84, 0x53, 0x80, 0x52, 0x84, 0x73, 0x84, 0x73, 0x84, 0x72, 0x80, 0x12, 0x80, 0x32, 0x80, 0x32, 0x80, 0x35, 0x80, 0x3B, 0x80, 0x34, 0x80, 0x35, 0x84, 0x5A, 0x80, 0x5C, 0x80, 0x11, 0xBD, 0xB0,
                        0xFF, 0x8D, 0xFF, 0x2C, 0xA1, 0x14, 0xFF, 0xEF, 0xFF, 0xAF, 0xFF, 0x2E, 0xDA, 0x71, 0xFF, 0xEE, 0xFF, 0xF0, 0xFF, 0xD0, 0x84, 0x37, 0x9C, 0xD2, 0xC1, 0x8F, 0xEA, 0xAE, 0xF6, 0xAA, 0x80, 0x32, 0x80, 0x09, 0x80, 0x08, 0xFF, 0x2B, 0xA0,
                        0xEE, 0x80, 0x10, 0x80, 0x06, 0xFF, 0xCF, 0xDA, 0x2C, 0x80, 0x13, 0x80, 0x08, 0xFF, 0xCE, 0xFF, 0x8B, 0x84, 0x51, 0x80, 0x10, 0x80, 0x0F, 0x80, 0x0E, 0x80, 0x0D, 0x80, 0x0D, 0x80, 0x0F, 0x80, 0x30, 0x80, 0x31, 0x80, 0x30, 0x80, 0x0E,
                        0x80, 0x31, 0x80, 0x32, 0x80, 0x32, 0x80, 0x0B, 0x80, 0x31, 0x80, 0x32, 0x80, 0x32, 0x80, 0x0D, 0x80, 0x0C, 0x80, 0x0B, 0x80, 0x00, 0x80, 0x10, 0x80, 0x0F, 0x80, 0x0E, 0x80, 0x00, 0x80, 0x31, 0x80, 0x31, 0x80, 0x31, 0x80, 0x00, 0x80,
                        0x32, 0x80, 0x32, 0x80, 0x32, 0x80, 0x00, 0x80, 0x00, 0x8C, 0x7A, 0xA5, 0x15, 0xD1, 0xA0, 0x80, 0x00, 0xEB, 0x5B, 0x80, 0x3E, 0xB9, 0x4D, 0x80, 0x00, 0xFF, 0xFF, 0xCA, 0x55, 0x8C, 0x9A, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x84, 0x2F,
                        0xA4, 0xC1, 0x80, 0x0C, 0x80, 0x0F, 0x80, 0x30, 0xB9, 0x23, 0x80, 0x0D, 0x80, 0x0F, 0x80, 0x31, 0x8C, 0x6A, 0x80, 0x0D, 0x80, 0x10, 0x80, 0x32, 0x80, 0x0D, 0x80, 0x0D, 0x80, 0x31, 0x80, 0x33, 0x80, 0x31, 0x80, 0x33, 0x80, 0x33, 0x80,
                        0x34, 0x80, 0x32, 0x80, 0x33, 0x80, 0x34, 0x80, 0x35, 0x80, 0x33, 0x80, 0x34, 0x80, 0x35, 0x80, 0x58, 0x80, 0x34, 0x80, 0x35, 0x84, 0x59, 0x88, 0x9C, 0x80, 0x35, 0x80, 0x37, 0x80, 0x37, 0x80, 0x14, 0x80, 0x37, 0x80, 0x38, 0x80, 0x35,
                        0x80, 0x33, 0x84, 0x59, 0x80, 0x36, 0x80, 0x33, 0x84, 0x53, 0x84, 0x58, 0x80, 0x32, 0x84, 0x54, 0x88, 0x77, 0x80, 0x13, 0x80, 0x14, 0x80, 0x13, 0x80, 0x12, 0x80, 0x31, 0x80, 0x10, 0x80, 0x10, 0x80, 0x10, 0x84, 0x52, 0x80, 0x30, 0x80,
                        0x0F, 0x80, 0x0D, 0x84, 0x79, 0x84, 0x5A, 0x80, 0x59, 0x80, 0x35, 0x90, 0x71, 0xB9, 0x6E, 0x90, 0x90, 0x80, 0x38, 0x80, 0x11, 0x80, 0x14, 0x80, 0x35, 0x80, 0x58, 0x80, 0x0D, 0x80, 0x10, 0x80, 0x33, 0x80, 0x34, 0x80, 0x10, 0x80, 0x0C,
                        0x80, 0x11, 0x80, 0x34, 0x80, 0x0C, 0x80, 0x31, 0x80, 0x33, 0x80, 0x33, 0x80, 0x32, 0x80, 0x31, 0x80, 0x33, 0x80, 0x34, 0x80, 0x34, 0x80, 0x33, 0x80, 0x34, 0x80, 0x34, 0x80, 0x33, 0x80, 0x34, 0x80, 0x35, 0x80, 0x35, 0x80, 0x33, 0x80,
                        0x33, 0x80, 0x32, 0x80, 0x00, 0x80, 0x33, 0x80, 0x33, 0x80, 0x33, 0x80, 0x00, 0x80, 0x34, 0x80, 0x34, 0x80, 0x33, 0x80, 0x00, 0x80, 0x35, 0x80, 0x35, 0x80, 0x34, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xA5, 0x32, 0x80, 0x31, 0x80, 0x00,
                        0xB9, 0xD0, 0x80, 0x31, 0x80, 0x34, 0x80, 0x00, 0xB5, 0xAD, 0x80, 0x09, 0x80, 0x38, 0x80, 0x00, 0xDE, 0xF7, 0x80, 0x05, 0x80, 0x33, 0x80, 0x0E, 0x80, 0x0D, 0x80, 0x32, 0x80, 0x34, 0x80, 0x31, 0x80, 0x0C, 0x80, 0x32, 0x80, 0x35, 0x80,
                        0x36, 0x80, 0x0C, 0x80, 0x32, 0x80, 0x35, 0x84, 0x7B, 0x80, 0x0D, 0x80, 0x10, 0x80, 0x35, 0x80, 0x35, 0x84, 0x58, 0x8C, 0xBE, 0x8C, 0xBD, 0x80, 0x56, 0x90, 0xDD, 0x9D, 0x3F, 0x88, 0x78, 0x88, 0x79, 0x9D, 0x3F, 0x9D, 0x3F, 0x80, 0x34,
                        0x8C, 0x9B, 0x9D, 0x3F, 0x90, 0xDD, 0x80, 0x14, 0x80, 0x12, 0x80, 0x33, 0x90, 0xBC, 0x90, 0xBA, 0x80, 0x11, 0x8C, 0xBD, 0x94, 0x73, 0xA8, 0xE8, 0x80, 0x59, 0x94, 0x72, 0xC9, 0x88, 0xF6, 0x45, 0x84, 0x36, 0xC1, 0x68, 0xF6, 0x68, 0xF6,
                        0x8A, 0x90, 0x53, 0x8C, 0x32, 0x84, 0x34, 0x80, 0x3A, 0xCD, 0x85, 0xD1, 0xC6, 0xC5, 0x87, 0xA0, 0xC8, 0xF6, 0x67, 0xF6, 0x67, 0xF2, 0x02, 0xD9, 0xE5, 0xF6, 0xAB, 0xF6, 0x8A, 0xF2, 0x24, 0xE9, 0xC1, 0x84, 0x7D, 0x80, 0x34, 0x80, 0x0E,
                        0x80, 0x33, 0x88, 0x31, 0x84, 0x7D, 0x80, 0x34, 0x80, 0x11, 0xA8, 0xE6, 0x88, 0x35, 0x84, 0x7B, 0x80, 0x32, 0xD1, 0x83, 0x94, 0x4B, 0x84, 0x7C, 0x80, 0x35, 0x80, 0x33, 0x80, 0x33, 0x80, 0x34, 0x80, 0x35, 0x80, 0x33, 0x80, 0x33, 0x80,
                        0x33, 0x80, 0x34, 0x80, 0x35, 0x80, 0x35, 0x80, 0x34, 0x80, 0x33, 0x80, 0x35, 0x80, 0x36, 0x80, 0x35, 0x80, 0x34, 0x80, 0x36, 0x80, 0x36, 0x80, 0x35, 0x80, 0x00, 0x80, 0x36, 0x80, 0x36, 0x80, 0x34, 0x80, 0x00, 0x80, 0x35, 0x80, 0x35,
                        0x80, 0x34, 0x80, 0x00, 0x80, 0x35, 0x80, 0x36, 0x80, 0x34, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0x80, 0x0A, 0x90, 0xAC, 0x80, 0x00, 0xFF, 0xFF, 0xA9, 0x4F, 0xB1, 0xB1, 0x80, 0x00, 0xFF, 0xFF, 0xE3, 0x18, 0xAD, 0x71, 0x80, 0x00, 0xFF,
                        0xFF, 0xFF, 0xFF, 0xA9, 0x4E, 0x80, 0x57, 0x80, 0x32, 0x80, 0x0D, 0x80, 0x34, 0x9C, 0xEF, 0x80, 0x14, 0x80, 0x0D, 0x80, 0x32, 0xCE, 0x50, 0x80, 0x30, 0x80, 0x10, 0x80, 0x10, 0xDA, 0xD4, 0xA9, 0x4F, 0x80, 0x10, 0x80, 0x11, 0x88, 0x7A,
                        0x94, 0xFF, 0x88, 0x79, 0x80, 0x17, 0x84, 0x78, 0x90, 0xBD, 0x84, 0x58, 0x88, 0x35, 0x80, 0x57, 0x88, 0x9A, 0x84, 0x59, 0x98, 0x70, 0x80, 0x35, 0x88, 0x79, 0x88, 0x7A, 0x9C, 0xAF, 0x9C, 0xAC, 0xF2, 0x47, 0xF6, 0xAA, 0xFA, 0xAB, 0xBD,
                        0x69, 0xF6, 0x68, 0xF6, 0xAA, 0xF6, 0xAA, 0xE1, 0xE7, 0xF6, 0x67, 0xF6, 0x8A, 0xF6, 0x8A, 0xEE, 0x26, 0xF6, 0x67, 0xF6, 0x89, 0xF6, 0x67, 0xFA, 0xAB, 0xF6, 0xAA, 0xF6, 0x45, 0xE9, 0xE2, 0xFA, 0xAB, 0xF6, 0x8A, 0xF6, 0x45, 0xED, 0xE2,
                        0xF6, 0x89, 0xF6, 0x67, 0xF2, 0x24, 0xE9, 0xE1, 0xF6, 0x46, 0xF2, 0x24, 0xED, 0xE2, 0xE1, 0xA1, 0xDD, 0xA2, 0xA8, 0xA7, 0x88, 0x7B, 0x80, 0x57, 0xE1, 0xA1, 0xB5, 0x06, 0x88, 0x9C, 0x80, 0x57, 0xDD, 0xA1, 0xB1, 0x08, 0x88, 0x9C, 0x84,
                        0x58, 0xD9, 0xA2, 0xA0, 0xCF, 0x84, 0x7B, 0x84, 0x79, 0x80, 0x56, 0x80, 0x57, 0x80, 0x36, 0x80, 0x34, 0x80, 0x57, 0x80, 0x57, 0x80, 0x36, 0x80, 0x35, 0x84, 0x58, 0x80, 0x57, 0x80, 0x36, 0x80, 0x36, 0x84, 0x58, 0x80, 0x58, 0x80, 0x58,
                        0x80, 0x57, 0x80, 0x35, 0x80, 0x37, 0x80, 0x32, 0x80, 0x00, 0x80, 0x35, 0x80, 0x35, 0x80, 0x33, 0x80, 0x00, 0x80, 0x35, 0x80, 0x35, 0x80, 0x34, 0x80, 0x00, 0x80, 0x36, 0x80, 0x36, 0x80, 0x35, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF,
                        0xFF, 0xD6, 0xB6, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD2, 0x93, 0xC2, 0x4F, 0x80, 0x2C, 0x80, 0x12, 0xC6, 0x10, 0xCA, 0x92,
                        0x8D, 0x28, 0x80, 0x10, 0xDE, 0xF7, 0xD6, 0xB5, 0x9D, 0x67, 0x80, 0x05, 0xFF, 0xFF, 0xC6, 0x32, 0xBE, 0x30, 0x80, 0x00, 0x80, 0x35, 0x88, 0x7A, 0x88, 0x7B, 0xA0, 0xCF, 0x80, 0x35, 0x84, 0x79, 0x88, 0x37, 0xB1, 0x2C, 0x80, 0x30, 0x80,
                        0x74, 0x94, 0x8D, 0xB1, 0x29, 0x80, 0x05, 0x80, 0x2C, 0x9C, 0xEC, 0xB1, 0x28, 0xF2, 0x23, 0xF6, 0x46, 0xF6, 0x67, 0xF6, 0x45, 0xE9, 0xE2, 0xF6, 0x45, 0xF6, 0x45, 0xF2, 0x03, 0xDD, 0xA3, 0xEE, 0x03, 0xED, 0xE2, 0xE9, 0xE2, 0xBD, 0x67,
                        0xD1, 0x85, 0xD5, 0xA3, 0xD5, 0x83, 0xF2, 0x03, 0xEE, 0x02, 0xE1, 0xA1, 0xD9, 0xA1, 0xED, 0xE2, 0xE1, 0xC1, 0xD9, 0x81, 0xD5, 0x82, 0xE1, 0xA1, 0xD1, 0x82, 0xC9, 0x63, 0xC1, 0x45, 0xCD, 0x64, 0xB9, 0x26, 0xB9, 0x26, 0xEA, 0x48, 0xCD,
                        0xA8, 0x84, 0x3A, 0x80, 0x7C, 0x84, 0x7A, 0xA4, 0xEF, 0x80, 0x3A, 0x80, 0x5B, 0x80, 0x7A, 0xC9, 0x46, 0xD5, 0x61, 0xAC, 0xA3, 0x80, 0x73, 0xF6, 0x44, 0xF1, 0xE2, 0xC1, 0x00, 0x94, 0x67, 0x84, 0x79, 0x84, 0x59, 0x84, 0x58, 0x80, 0x58,
                        0x84, 0x79, 0x84, 0x79, 0x84, 0x79, 0x84, 0x58, 0x84, 0x7A, 0x84, 0x79, 0x84, 0x79, 0x84, 0x79, 0x80, 0x79, 0x84, 0x78, 0x88, 0x78, 0x88, 0x78, 0x80, 0x57, 0x80, 0x37, 0x80, 0x35, 0x80, 0x00, 0x84, 0x58, 0x80, 0x57, 0x80, 0x35, 0x80,
                        0x00, 0x84, 0x79, 0x84, 0x58, 0x80, 0x36, 0x80, 0x00, 0x88, 0x78, 0x84, 0x78, 0x84, 0x57, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
                        0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD6, 0xB4, 0xD6, 0x94, 0xAD, 0xAC, 0xFF, 0xFF, 0xEB, 0x39, 0xD5, 0xE9, 0xBD, 0xAC, 0xFF, 0xFF, 0xFF, 0xFF, 0xD2, 0x50, 0xA4, 0xA1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                        0xFF, 0xD2, 0x72, 0x80, 0x80, 0xC5, 0xCB, 0xE6, 0x8E, 0xCE, 0x2E, 0x98, 0xE7, 0xB0, 0xE3, 0xB1, 0x02, 0xFA, 0xE7, 0x84, 0x43, 0x80, 0x01, 0x88, 0x00, 0xFA, 0x24, 0x8C, 0x20, 0x8C, 0x20, 0xB8, 0xC0, 0xE1, 0x62, 0xB9, 0x8C, 0xB9, 0x69,
                        0xBD, 0x68, 0xB9, 0x68, 0xF6, 0xC9, 0xE6, 0x69, 0xE2, 0x4A, 0xE6, 0x69, 0xFE, 0xA7, 0xFE, 0xA7, 0xFE, 0xA7, 0xFE, 0x86, 0xED, 0xA3, 0xF5, 0xE4, 0xF9, 0xE4, 0xE9, 0xC3, 0xB5, 0x48, 0xC5, 0x86, 0xEA, 0x06, 0xD6, 0xD8, 0xF6, 0x88, 0xFE,
                        0xA6, 0xE2, 0xB2, 0xFF, 0xFF, 0xFE, 0xAA, 0xF7, 0x9A, 0xFF, 0xFF, 0xFF, 0xFC, 0xEA, 0x6C, 0xEE, 0xF2, 0xEA, 0x6B, 0xC5, 0x20, 0xDE, 0x92, 0xED, 0xC2, 0xC5, 0x20, 0x8C, 0x26, 0xEE, 0xF2, 0xDD, 0x80, 0xA4, 0x80, 0x80, 0x29, 0xD9, 0x82,
                        0x9C, 0x60, 0x80, 0x04, 0x80, 0x2C, 0x90, 0x20, 0x90, 0x87, 0x8C, 0x66, 0x80, 0x26, 0x80, 0x35, 0x84, 0x55, 0x84, 0x56, 0x84, 0x77, 0x80, 0x11, 0x80, 0x32, 0x80, 0x53, 0x84, 0x55, 0x80, 0x10, 0x80, 0x10, 0x80, 0x31, 0x80, 0x33, 0x80,
                        0x0A, 0x80, 0x0B, 0x80, 0x0C, 0x80, 0x0E, 0x88, 0x77, 0x88, 0x78, 0x84, 0x78, 0x80, 0x00, 0x84, 0x56, 0x84, 0x77, 0x84, 0x77, 0x80, 0x00, 0x80, 0x54, 0x84, 0x55, 0x84, 0x76, 0x80, 0x00, 0x80, 0x31, 0x80, 0x33, 0x80, 0x55, 0x80, 0x00,
                        0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
                        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0x9D, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0x9C, 0xCD, 0xED, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xDA, 0xD6, 0x8C, 0x25, 0xA0, 0x60, 0xAC, 0xA0, 0x84, 0x6C, 0x80, 0x4C, 0x80, 0x4B,
                        0x80, 0x2A, 0xE9, 0xA3, 0xE5, 0xA0, 0xF6, 0x45, 0xC1, 0xB2, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xB8, 0xE0, 0xC0, 0xE0, 0xBC, 0xE0, 0xB8, 0xE0, 0x80, 0x08, 0x8C, 0x45, 0x88, 0x47, 0x80, 0x2B, 0x80, 0x76, 0x80, 0x76, 0x80,
                        0x77, 0x80, 0x77, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xAC, 0xC0, 0xA0, 0x60, 0x84, 0x03, 0x80, 0x06, 0x80, 0x2D, 0x80, 0x31, 0xB5, 0x51, 0xC9, 0xCE, 0x80, 0x7A, 0x80, 0x58, 0xFE, 0x64, 0xFF, 0x07, 0x80, 0x00, 0x80, 0x00,
                        0x80, 0x00, 0x80, 0x00, 0x80, 0x29, 0x8C, 0x8C, 0xE7, 0x3A, 0xFF, 0xFF, 0xA5, 0x14, 0x80, 0x59, 0x80, 0x53, 0x98, 0xCF, 0xFF, 0x28, 0xFE, 0xE8, 0xFA, 0x6A, 0xCD, 0xB1, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0xEB, 0x5B, 0x9D,
                        0x0B, 0x80, 0x05, 0x80, 0x06, 0xFF, 0xFF, 0xFF, 0xFF, 0xD6, 0xB7, 0x84, 0x26, 0xB9, 0x91, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xDF, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x08, 0x80, 0x0D, 0x80, 0x32, 0x80, 0x00, 0x80, 0x06,
                        0x80, 0x06, 0x80, 0x0B, 0x80, 0x00, 0xA1, 0x0B, 0x84, 0x27, 0x84, 0x48, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00
                    };
                    List<byte> toSave = new List<byte>();
                    if (isPC) { toSave = new List<byte>(loadedSave); toSave = MainSave.ByteSwapMain(toSave.ToArray()).ToList(); }
                    if (isGC) { toSave = new List<byte>(loadedSave); }
                    if (!isPC && !isGC) { toSave = new List<byte>(loadedSave.Skip((0x6004 * (int)(uc.mainIndex)) + 4).Take(0x6000).ToArray()); }
                    toSave = new List<byte>(Checksum.WriteMainChecksum(toSave.ToArray(), true, true, false));
                    toSave.InsertRange(0, header);
                    toSave.RemoveRange(0x80, 0x2800);
                    toSave.InsertRange(0x80, header2);
                    string gcFileName = Path.GetDirectoryName(loadedFile) + @"/SA2MAIN" + gcFileNoString + ".gci";
                    int index = 1;
                    while (true)
                    {
                        if (!File.Exists(gcFileName))
                        {
                            break;
                        }
                        else
                        {
                            gcFileName = Path.GetDirectoryName(loadedFile) + @"/SA2MAIN" + gcFileNoString + index.ToString("00") + ".gci";
                            index++;
                        }
                    }
                    File.WriteAllBytes(gcFileName, toSave.ToArray());
                    MessageBox.Show("Save file has been saved to " + gcFileName + "!", "Success", MessageBoxButtons.OK, MessageBoxIcon.None);
                }
                catch
                {
                    MessageBox.Show("There was a problem saving the save file!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        private void Tsmi_saveAs360_Click(object sender, EventArgs e)
        {
            if (!isMain) { SaveAs360(); }
        }

        private void Tsmi_saveAsPS3_Click(object sender, EventArgs e)
        {
            if (!isMain) { SaveAsPS3(); }
        }

        private void Tsmi_About_Click(object sender, EventArgs e)
        {
            if (Updater.isLatest)
            {
                MessageBox.Show("Version: " + ProductVersion + Environment.NewLine + "SA2 Save Utility is created by Froody." + Environment.NewLine + "Some chao offsets retrieved from https://chao.tehfusion.co.uk/chao-hacking/, thank you Fusion!", "About", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            else
            {
                Release latest = Updater.releasesBehind.OrderByDescending(x => Version.Parse(x.tag_name)).First();
                string versionsBehind = "";

                if (SA2SaveUtility.Updater.releasesBehind.Count() == 1) { versionsBehind = SA2SaveUtility.Updater.releasesBehind.Count() + " version behind!"; }
                else { versionsBehind = SA2SaveUtility.Updater.releasesBehind.Count() + " versions behind!"; }
                MessageBox.Show("Version: " + ProductVersion + Environment.NewLine + "Latest Version: " + latest.tag_name + Environment.NewLine + "You are " + versionsBehind + Environment.NewLine + "SA2 Save Utility is created by Froody." + Environment.NewLine + "Some chao offsets retrieved from https://chao.tehfusion.co.uk/chao-hacking/, thank you Fusion!", "About", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        private void Tsmi_saveAs360New_Click(object sender, EventArgs e)
        {
            SaveAs360();
        }

        private void Tsmi_saveAsPS3New_Click(object sender, EventArgs e)
        {
            SaveAsPS3();
        }

        private void SaveAsPS3()
        {
            if (!isMain)
            {
                try
                {
                    List<byte> byteList = new List<byte>();
                    byteList.AddRange(loadedSave.Take(0x3AA4).ToArray());
                    foreach (byte[] chao in SplitByteArray(loadedSave.Skip(0x3AA4).Take(0xC000).ToArray(), 0x800))
                    {
                        if (isPC) { byteList.AddRange(ChaoSave.ByteSwapChao(chao)); }
                        else { byteList.AddRange(chao); }
                    }
                    byteList.AddRange(loadedSave.Skip(0xFAA4).Take(0x55C).ToArray());

                    if (isPC) { byteList = ChaoSave.ByteSwapChaoWorld(byteList.ToArray()).ToList(); }

                    byte[] chaoToSave = byteList.ToArray();

                    byte[] splitForChecksum = chaoToSave.Skip(0x3040).ToArray();
                    Checksum.WriteChaoChecksum(splitForChecksum, true);
                    List<byte> byteArray = new List<byte>();
                    byteArray.AddRange(chaoToSave.Take(0x3040).ToArray());
                    byteArray.AddRange(splitForChecksum);
                    chaoToSave = byteArray.ToArray();
                    string consoleFileName = Path.GetDirectoryName(loadedFile) + @"/CHAOSAVE";
                    int index = 1;
                    while (true)
                    {
                        if (!File.Exists(consoleFileName))
                        {
                            break;
                        }
                        else
                        {
                            consoleFileName = Path.GetDirectoryName(loadedFile) + @"/CHAOSAVE" + index;
                            index++;
                        }
                    }
                    File.WriteAllBytes(consoleFileName, chaoToSave);
                    MessageBox.Show("Chao save file has been saved to " + consoleFileName + "!", "Success", MessageBoxButtons.OK, MessageBoxIcon.None);
                }
                catch
                {
                    MessageBox.Show("There was a problem saving the chao save file!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            else
            {
                try
                {
                    uc_Main uc = (uc_Main)tc_Main.Controls[tc_Main.SelectedIndex].Controls[0];
                    List<byte> toSave = new List<byte>();
                    if (!isPC)
                    {
                        toSave = new List<byte>(Checksum.WriteMainChecksum(loadedSave, false, false, true));
                    }
                    else
                    {
                        toSave.Add(0x00);
                        toSave.Add(0x00);
                        toSave.Add(0x00);
                        toSave.Add(0x01);
                        toSave.Add(0x00);
                        toSave.Add(0x00);
                        toSave.Add(0x00);
                        toSave.Add(0x00);
                        toSave.AddRange(MainSave.ByteSwapMain(loadedSave));
                        toSave = Checksum.WriteMainChecksum(toSave.ToArray(), false, false, true).ToList();
                    }
                    for (int i = toSave.Count; i < 0x3C050; i++)
                    {
                        toSave.Add(0x00);
                    }
                    string consoleFileName = Path.GetDirectoryName(loadedFile) + @"/SA2SAVE";
                    int index = 1;
                    while (true)
                    {
                        if (!File.Exists(consoleFileName))
                        {
                            break;
                        }
                        else
                        {
                            consoleFileName = Path.GetDirectoryName(loadedFile) + @"/SA2SAVE" + index;
                            index++;
                        }
                    }
                    File.WriteAllBytes(consoleFileName, toSave.ToArray());
                    MessageBox.Show("Save file has been saved to " + consoleFileName + "!", "Success", MessageBoxButtons.OK, MessageBoxIcon.None);
                }
                catch
                {
                    MessageBox.Show("There was a problem saving the save file!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        private void Tsmi_saveAsPS3Append_Click(object sender, EventArgs e)
        {
            try
            {
                OpenFileDialog loadToAppend = new OpenFileDialog();
                loadToAppend.InitialDirectory = chaoDirectory;
                loadToAppend.Filter = "PS3 Main Save|*.*";
                loadToAppend.Title = "Chose a file to add this save to";
                loadToAppend.ShowDialog();
                if (loadToAppend.FileName != "")
                {
                    byte[] save = File.ReadAllBytes(loadToAppend.FileName);
                    if (save.Length == 0x3C050)
                    {
                        int slotIndex = 0;
                        int slotNotTaken = 0;
                        List<int> takenSlots = new List<int>();
                        foreach (byte[] saveSlot in SplitByteArray(save, 0x6008)) { takenSlots.Add(saveSlot[3]); }
                        for (int i = 1; i < 10; i++)
                        {
                            if (!takenSlots.Contains(i)) { slotNotTaken = i; break; }
                        }
                        if (slotNotTaken != 0)
                        {
                            List<byte> combinedSave = new List<byte>();
                            foreach (byte[] saveSlot in SplitByteArray(save, 0x6008))
                            {
                                if (saveSlot[3] == 0x00)
                                {
                                    uc_Main uc = (uc_Main)tc_Main.Controls[tc_Main.SelectedIndex].Controls[0];
                                    List<byte> toSave = new List<byte>();
                                    if (!isPC)
                                    {
                                        toSave = new List<byte>(Checksum.WriteMainChecksum(loadedSave.Skip((int)(0x6008 * uc.mainIndex)).Take(0x6008).ToArray(), false, false, true));
                                        toSave[3] = (byte)slotNotTaken;
                                    }
                                    else
                                    {
                                        toSave.Add(0x00);
                                        toSave.Add(0x00);
                                        toSave.Add(0x00);
                                        toSave.Add((byte)slotNotTaken);
                                        toSave.Add(0x00);
                                        toSave.Add(0x00);
                                        toSave.Add(0x00);
                                        toSave.Add(0x00);
                                        toSave.AddRange(MainSave.ByteSwapMain(loadedSave));
                                        toSave = Checksum.WriteMainChecksum(toSave.ToArray(), false, false, true).ToList();
                                    }
                                    combinedSave.AddRange(save.Take(0x6008 * slotIndex));
                                    combinedSave.AddRange(toSave);
                                    combinedSave.AddRange(save.Skip(0x6008 * (slotIndex + 1)));
                                    break;
                                }
                                slotIndex++;
                            }
                            string consoleFileName = Path.GetDirectoryName(loadedFile) + @"/SA2SAVE";
                            int index = 1;
                            while (true)
                            {
                                if (!File.Exists(consoleFileName))
                                {
                                    break;
                                }
                                else
                                {
                                    consoleFileName = Path.GetDirectoryName(loadedFile) + @"/SA2SAVE" + index;
                                    index++;
                                }
                            }
                            File.WriteAllBytes(consoleFileName, combinedSave.ToArray());
                            MessageBox.Show("Save file has been saved to " + consoleFileName + ", in slot " + slotNotTaken + ".", "Success", MessageBoxButtons.OK, MessageBoxIcon.None);
                        }
                        else
                        {
                            MessageBox.Show("Couldn't find a slot to save to!", "Error writing save", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }
                    }
                    else
                    {
                        MessageBox.Show("That doesn't appear to be a PS3 main save.", "Error writing save", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
            }
            catch
            {
                MessageBox.Show("There was a problem saving the save file!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void SaveAs360()
        {
            if (!isMain)
            {
                try
                {
                    List<byte> byteList = new List<byte>();
                    byteList.AddRange(loadedSave.Take(0x3AA4).ToArray());
                    foreach (byte[] chao in SplitByteArray(loadedSave.Skip(0x3AA4).Take(0xC000).ToArray(), 0x800))
                    {
                        if (isPC) { byteList.AddRange(ChaoSave.ByteSwapChao(chao)); }
                        else { byteList.AddRange(chao); }
                    }
                    byteList.AddRange(loadedSave.Skip(0xFAA4).Take(0x55C).ToArray());

                    if (isPC) { byteList = ChaoSave.ByteSwapChaoWorld(byteList.ToArray()).ToList(); }

                    byte[] chaoToSave = byteList.ToArray();

                    byte[] splitForChecksum = chaoToSave.Skip(0x3040).ToArray();
                    Checksum.WriteChaoChecksum(splitForChecksum, true);
                    List<byte> byteArray = new List<byte>();
                    byteArray.AddRange(chaoToSave.Take(0x3040).ToArray());
                    byteArray.AddRange(splitForChecksum);
                    chaoToSave = byteArray.ToArray();
                    string consoleFileName = Path.GetDirectoryName(loadedFile) + @"/savedata.bin";
                    int index = 1;
                    while (true)
                    {
                        if (!File.Exists(consoleFileName))
                        {
                            break;
                        }
                        else
                        {
                            consoleFileName = Path.GetDirectoryName(loadedFile) + @"/savedata" + index + ".bin";
                            index++;
                        }
                    }
                    File.WriteAllBytes(consoleFileName, chaoToSave);
                    MessageBox.Show("Chao save file has been saved to " + consoleFileName + "!", "Success", MessageBoxButtons.OK, MessageBoxIcon.None);
                }
                catch
                {
                    MessageBox.Show("There was a problem saving the chao save file!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            else
            {
                try
                {
                    uc_Main uc = (uc_Main)tc_Main.Controls[tc_Main.SelectedIndex].Controls[0];
                    List<byte> toSave = new List<byte>();
                    if (!isPC)
                    {
                        toSave = new List<byte>(Checksum.WriteMainChecksum(loadedSave, false, false, false));
                    }
                    else
                    {
                        toSave.Add(0x00);
                        toSave.Add(0x00);
                        toSave.Add(0x00);
                        toSave.Add(0x01);
                        toSave.AddRange(MainSave.ByteSwapMain(loadedSave));
                        toSave = Checksum.WriteMainChecksum(toSave.ToArray(), false, false, false).ToList();
                    }
                    for (int i = toSave.Count; i < 0x3C028; i++)
                    {
                        toSave.Add(0x00);
                    }
                    string consoleFileName = Path.GetDirectoryName(loadedFile) + @"/savedata.bin";
                    int index = 1;
                    while (true)
                    {
                        if (!File.Exists(consoleFileName))
                        {
                            break;
                        }
                        else
                        {
                            consoleFileName = Path.GetDirectoryName(loadedFile) + @"/savedata" + index + ".bin";
                            index++;
                        }
                    }
                    File.WriteAllBytes(consoleFileName, toSave.ToArray());
                    MessageBox.Show("Save file has been saved to " + consoleFileName + "!", "Success", MessageBoxButtons.OK, MessageBoxIcon.None);
                }
                catch
                {
                    MessageBox.Show("There was a problem saving the save file!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        private void Tsmi_saveAs360Append_Click(object sender, EventArgs e)
        {
            try
            {
                OpenFileDialog loadToAppend = new OpenFileDialog();
                loadToAppend.InitialDirectory = chaoDirectory;
                loadToAppend.Filter = "360 Main Save|*.bin";
                loadToAppend.Title = "Chose a file to add this save to";
                loadToAppend.ShowDialog();
                if (loadToAppend.FileName != "")
                {
                    byte[] save = File.ReadAllBytes(loadToAppend.FileName);
                    if (save.Length == 0x3C028)
                    {
                        int slotIndex = 0;
                        int slotNotTaken = 0;
                        List<int> takenSlots = new List<int>();
                        foreach (byte[] saveSlot in SplitByteArray(save, 0x6004)) { takenSlots.Add(saveSlot[3]); }
                        for (int i = 1; i < 10; i++)
                        {
                            if (!takenSlots.Contains(i)) { slotNotTaken = i; break; }
                        }
                        if (slotNotTaken != 0)
                        {
                            List<byte> combinedSave = new List<byte>();
                            foreach (byte[] saveSlot in SplitByteArray(save, 0x6004))
                            {
                                if (saveSlot[3] == 0x00)
                                {
                                    uc_Main uc = (uc_Main)tc_Main.Controls[tc_Main.SelectedIndex].Controls[0];
                                    List<byte> toSave = new List<byte>();
                                    if (!isPC)
                                    {
                                        toSave = new List<byte>(Checksum.WriteMainChecksum(loadedSave.Skip((int)(0x6004 * uc.mainIndex)).Take(0x6004).ToArray(), false, false, false));
                                        toSave[3] = (byte)slotNotTaken;
                                    }
                                    else
                                    {
                                        toSave.Add(0x00);
                                        toSave.Add(0x00);
                                        toSave.Add(0x00);
                                        toSave.Add((byte)slotNotTaken);
                                        toSave.AddRange(MainSave.ByteSwapMain(loadedSave));
                                        toSave = Checksum.WriteMainChecksum(toSave.ToArray(), false, false, false).ToList();
                                    }
                                    combinedSave.AddRange(save.Take(0x6004 * slotIndex));
                                    combinedSave.AddRange(toSave);
                                    combinedSave.AddRange(save.Skip(0x6004 * (slotIndex + 1)));
                                    break;
                                }
                                slotIndex++;
                            }
                            string consoleFileName = Path.GetDirectoryName(loadedFile) + @"/savedata.bin";
                            int index = 1;
                            while (true)
                            {
                                if (!File.Exists(consoleFileName))
                                {
                                    break;
                                }
                                else
                                {
                                    consoleFileName = Path.GetDirectoryName(loadedFile) + @"/savedata" + index + ".bin";
                                    index++;
                                }
                            }
                            File.WriteAllBytes(consoleFileName, combinedSave.ToArray());
                            MessageBox.Show("Save file has been saved to " + consoleFileName + ", in slot " + slotNotTaken + ".", "Success", MessageBoxButtons.OK, MessageBoxIcon.None);
                        }
                        else
                        {
                            MessageBox.Show("Couldn't find a slot to save to!", "Error writing save", MessageBoxButtons.OK, MessageBoxIcon.Error);
                        }
                    }
                    else
                    {
                        MessageBox.Show("That doesn't appear to be a 360 main save.", "Error writing save", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                }
            }
            catch
            {
                MessageBox.Show("There was a problem saving the save file!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void Btn_AutoUpdate_Click(object sender, EventArgs e)
        {
            Release latest = Updater.releasesBehind.OrderByDescending(x => Version.Parse(x.tag_name)).First();
            string versionsBehind = "";
            if (Updater.releasesBehind.Count() == 1) { versionsBehind = Updater.releasesBehind.Count() + " version behind!"; }
            else { versionsBehind = Updater.releasesBehind.Count() + " versions behind!"; }

            string releasenotes = "";
            foreach (Release release in Updater.releasesBehind) { releasenotes += "\n" + release.tag_name + ": " + release.body; }
            DialogResult result = MessageBox.Show("Current Version: " + ProductVersion + Environment.NewLine + "Latest Version: " + latest.tag_name + Environment.NewLine + "You are " + versionsBehind + Environment.NewLine + "Release Notes: " + releasenotes + Environment.NewLine + "Do you want to update now?", "Auto Updater", MessageBoxButtons.YesNo);
            if (result == DialogResult.Yes)
            {
                Updater.UpdateApplication();
            }
        }

        private void Checkb_CheckForUpdates_CheckedChanged(object sender, EventArgs e)
        {
            XmlDocument xml = new XmlDocument();
            xml.Load(configFile);
            XmlNode root = xml.DocumentElement["CheckForUpdates"];
            root.FirstChild.InnerText = checkb_CheckForUpdates.Checked.ToString();
            xml.Save(configFile);
            Updater.checkForUpdates = checkb_CheckForUpdates.Checked;
            if (!Updater.checkForUpdates && Updater.autoUpdate) { checkb_AutoUpdate.Checked = false; }
            if (Updater.checkForUpdates)
            {
                Thread updateCheckThread = new Thread(new ThreadStart(Updater.UpdateCheck));
                updateCheckThread.Start();
            }
        }

        private void Checkb_AutoUpdate_CheckedChanged(object sender, EventArgs e)
        {
            XmlDocument xml = new XmlDocument();
            xml.Load(configFile);
            XmlNode root = xml.DocumentElement["AutoUpdate"];
            root.FirstChild.InnerText = checkb_AutoUpdate.Checked.ToString();
            xml.Save(configFile);
            Updater.autoUpdate = checkb_AutoUpdate.Checked;
            if (Updater.autoUpdate)
            {
                checkb_CheckForUpdates.Checked = Updater.autoUpdate;
                Thread updateCheckThread = new Thread(new ThreadStart(Updater.UpdateCheck));
                updateCheckThread.Start();
            }
        }

        private void Checkb_RTEUpdates_CheckedChanged(object sender, EventArgs e)
        {
            XmlDocument xml = new XmlDocument();
            xml.Load(configFile);
            XmlNode root = xml.DocumentElement["RTEUpdates"];
            root.FirstChild.InnerText = checkb_RTEUpdates.Checked.ToString();
            xml.Save(configFile);
            rteUpdates = checkb_RTEUpdates.Checked;
        }
    }
}
